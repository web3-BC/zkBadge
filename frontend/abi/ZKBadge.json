{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ErrLocked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ErrNotFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_expireTimestamp",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimPathKey",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "queryHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "_query",
          "type": "tuple"
        }
      ],
      "name": "InitBadge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "MintBadge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Unlocked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "convertUint256ToUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedRequests",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "arr",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        }
      ],
      "name": "getZKPRequest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimPathKey",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "queryHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICircuitValidator",
          "name": "_validator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimPathKey",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "queryHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "_query",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_expireTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "initBadge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "proofs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "requestQueries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "schema",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimPathKey",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "operator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "queryHash",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "circuitId",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "requestValidators",
      "outputs": [
        {
          "internalType": "contract ICircuitValidator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        },
        {
          "internalType": "contract ICircuitValidator",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "schema",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimPathKey",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "operator",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        }
      ],
      "name": "setZKPRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        },
        {
          "internalType": "contract ICircuitValidator",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "schema",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimPathKey",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "operator",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "queryHash",
          "type": "uint256"
        }
      ],
      "name": "setZKPRequestRaw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        },
        {
          "internalType": "uint256[]",
          "name": "inputs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        }
      ],
      "name": "submitZKPResponse",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenReptationData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expireTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimPathKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "queryHash",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ],
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "query",
              "type": "tuple"
            }
          ],
          "internalType": "struct ZKBadge.Reptation",
          "name": "reptation",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052600060809081526003906200001a90826200016b565b50600a805460ff191660011790553480156200003557600080fd5b50604080516020810190915260008152620000508162000062565b506200005c3362000074565b62000237565b60026200007082826200016b565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000f157607f821691505b6020821081036200011257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016657600081815260208120601f850160051c81016020861015620001415750805b601f850160051c820191505b8181101562000162578281556001016200014d565b5050505b505050565b81516001600160401b03811115620001875762000187620000c6565b6200019f81620001988454620000dc565b8462000118565b602080601f831160018114620001d75760008415620001be5750858301515b600019600386901b1c1916600185901b17855562000162565b600085815260208120601f198616915b828110156200020857888601518255948401946001909101908401620001e7565b5085821015620002275787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61342a80620002476000396000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c806396bf4741116100c3578063b45c0fdf1161007c578063b45c0fdf1461033b578063b68967e214610369578063c76d08451461037c578063e985e9c51461039c578063f242432a146103d8578063f2fde38b146103eb57600080fd5b806396bf4741146102a25780639abdc645146102c65780639e621bcf146102d9578063a22cb465146102ec578063a8723114146102ff578063b45a3c0e1461032857600080fd5b80634e1273f4116101155780634e1273f4146101f75780635bcca7ee14610217578063715018a61461022a5780637601252614610232578063825747cb146102525780638da5cb5b1461027d57600080fd5b8062fdd58e1461015c57806301ffc9a7146101825780630e89341c146101a557806318160ddd146101c55780632eb2c2d6146101cd57806337ba9523146101e2575b600080fd5b61016f61016a366004612380565b6103fe565b6040519081526020015b60405180910390f35b6101956101903660046123c2565b610497565b6040519015158152602001610179565b6101b86101b33660046123df565b6104bc565b6040516101799190612448565b600b5461016f565b6101e06101db3660046125dc565b61059c565b005b6101ea6105d4565b6040516101799190612689565b61020a6102053660046126d6565b61065e565b60405161017991906127dd565b6101e06102253660046127f0565b610787565b6101e0610983565b6102456102403660046123df565b610997565b6040516101799190612948565b6102656102603660046123df565b610b0e565b6040516001600160401b039091168152602001610179565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610179565b6102b56102b03660046129b6565b610b6b565b6040516101799594939291906129d1565b6101956102d4366004612a52565b610c24565b6101956102e7366004612ad5565b610d75565b6101e06102fa366004612b6d565b610f2e565b61028a61030d3660046129b6565b6008602052600090815260409020546001600160a01b031681565b6101956103363660046123df565b610f60565b610195610349366004612ba6565b600660209081526000928352604080842090915290825290205460ff1681565b610195610377366004612bec565b610f90565b61038f61038a3660046129b6565b611260565b6040516101799190612c7b565b6101956103aa366004612c8e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101e06103e6366004612cbc565b6113ce565b6101e06103f9366004612d24565b6113ff565b60006001600160a01b03831661046e5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216635a2d1e0760e11b1480610491575061049182611478565b6000818152600460205260408120805460609291906104da90612d41565b80601f016020809104026020016040519081016040528092919081815260200182805461050690612d41565b80156105535780601f1061052857610100808354040283529160200191610553565b820191906000526020600020905b81548152906001019060200180831161053657829003601f168201915b5050505050905060008151116105715761056c836114c8565b610595565b600381604051602001610585929190612d7b565b6040516020818303038152906040525b9392505050565b600a5460ff16156105c05760405163bd291a9560e01b815260040160405180910390fd5b6105cd858585858561155c565b5050505050565b6060600980548060200260200160405190810160405280929190818152602001828054801561065457602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b0316815260200190600801906020826007010492830192600103820291508084116106115790505b5050505050905090565b606081518351146106c35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610465565b600083516001600160401b038111156106de576106de61245b565b604051908082528060200260200182016040528015610707578160200160208202803683370190505b50905060005b845181101561077f5761075285828151811061072b5761072b612e02565b602002602001015185838151811061074557610745612e02565b60200260200101516103fe565b82828151811061076457610764612e02565b602090810291909101015261077881612e2e565b905061070d565b509392505050565b6000600b5460016107989190612e47565b905030639abdc6456107a983610b0e565b878760000151886020015189604001518a606001516040518763ffffffff1660e01b81526004016107df96959493929190612e5a565b6020604051808303816000875af11580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108229190612ea8565b5061083f30826001604051806020016040528060008152506115a1565b61084981836116b5565b604051806080016040528061085d83610b0e565b6001600160401b03168152602001336001600160a01b039081168252602080830187905260409283018890526000858152600c82528390208451815486840151909416600160401b026001600160e01b03199094166001600160401b039091161792909217825583830151600183015560608085015180516002850190815581840151600386015594810151600485015590810151805193949193919261090c92600587019290910190612264565b506080820151600482015560a0820151600582019061092b9082612f10565b50505090505061093a81610b0e565b6001600160401b03167f2aba27ed08081e16430401a2939882ee0396bdb45facc7ba9f6fabecdbd044ad8486604051610974929190612fcf565b60405180910390a25050505050565b61098b611712565b610995600061176c565b565b61099f6122ab565b6000828152600c6020908152604091829020825160808101845281546001600160401b0381168252600160401b90046001600160a01b031681840152600182015481850152835160c0810185526002830180548252600384015482860152600484015482870152600584018054875181880281018801909852808852939694956060808901969495939490860193909291830182828015610a5f57602002820191906000526020600020905b815481526020019060010190808311610a4b575b5050505050815260200160048201548152602001600582018054610a8290612d41565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae90612d41565b8015610afb5780601f10610ad057610100808354040283529160200191610afb565b820191906000526020600020905b815481529060010190602001808311610ade57829003601f168201915b5050509190925250505090525092915050565b60006001600160401b03821115610b675760405162461bcd60e51b815260206004820181905260248201527f56616c756520746f6f206c6172676520746f2066697420696e2075696e7436346044820152606401610465565b5090565b600760205260009081526040902080546001820154600283015460048401546005850180549495939492939192610ba190612d41565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcd90612d41565b8015610c1a5780601f10610bef57610100808354040283529160200191610c1a565b820191906000526020600020905b815481529060010190602001808311610bfd57829003601f168201915b5050505050905085565b6000610c2e611712565b6040516340ec6e4960e01b815260009073__$36eb1c3292662550b1df2180be06943270$__906340ec6e4990610c6a908790879060040161301a565b602060405180830381865af4158015610c87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cab919061302e565b9050600073__$4ed6c413d5497c876806113cd712d9f88f$__63f5b4a7886040518060c001604052808b8152602001600081526020018981526020018a815260200160008152602001858152506040518263ffffffff1660e01b8152600401610d149190613047565b602060405180830381865af4158015610d31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d55919061302e565b9050610d678a8a8a8a8a8a8a88610d75565b9a9950505050505050505050565b6000610d7f611712565b6001600160401b0389166000908152600860205260409020546001600160a01b0316610e0357600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af6004820401805460039092166008026101000a6001600160401b0381810219909316928c16029190911790555b6001600160401b038916600090815260076020526040808220600480820186905560029091018890558151632cd1575560e11b815291516001600160a01b038c16936359a2aeaa9380840193919291908290030181865afa158015610e6c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e949190810190613078565b6001600160401b038a16600090815260076020526040902060050190610eba9082612f10565b506001600160401b038916600090815260076020526040902060018101879055878155610eeb90600301858561231b565b50506001600160401b038816600090815260086020526040902080546001600160a01b0389166001600160a01b0319909116179055600198975050505050505050565b600a5460ff1615610f525760405163bd291a9560e01b815260040160405180910390fd5b610f5c82826117be565b5050565b6000600b54821115610f855760405163ae9a63f560e01b815260040160405180910390fd5b5050600a5460ff1690565b6001600160401b0386166000908152600860205260408120546001600160a01b031661100f5760405162461bcd60e51b815260206004820152602860248201527f76616c696461746f72206973206e6f742073657420666f7220746869732072656044820152671c5d595cdd081a5960c21b6064820152608401610465565b6001600160401b03871660009081526007602052604081206004015490036110855760405162461bcd60e51b8152602060048201526024808201527f7175657279206973206e6f742073657420666f722074686973207265717565736044820152631d081a5960e21b6064820152608401610465565b6110e18787878080602002602001604051908101604052809392919081815260200183836020028082843760009201829052506001600160401b038e168152600860205260409020546001600160a01b031692506117c9915050565b6001600160401b038716600090815260086020908152604080832054600790925291829020600490810154925163434661ef60e01b81526001600160a01b039092169263434661ef92611140928b928b928b928b928b929091016130f9565b602060405180830381865afa15801561115d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111819190612ea8565b6111cd5760405162461bcd60e51b815260206004820152601b60248201527f70726f6f6620726573706f6e7365206973206e6f742076616c696400000000006044820152606401610465565b3360009081526006602090815260408083206001600160401b038b168452825291829020805460ff1916600117905581518782028181018301909352878152611253928a928a918a9182919085019084908082843760009201829052506001600160401b038e168152600860205260409020546001600160a01b031692506118bf915050565b5060019695505050505050565b6112996040518060c001604052806000815260200160008152602001600081526020016060815260200160008152602001606081525090565b6001600160401b038216600090815260076020908152604091829020825160c08101845281548152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561132257602002820191906000526020600020905b81548152602001906001019080831161130e575b505050505081526020016004820154815260200160058201805461134590612d41565b80601f016020809104026020016040519081016040528092919081815260200182805461137190612d41565b80156113be5780601f10611393576101008083540402835291602001916113be565b820191906000526020600020905b8154815290600101906020018083116113a157829003601f168201915b5050505050815250509050919050565b600a5460ff16156113f25760405163bd291a9560e01b815260040160405180910390fd5b6105cd8585858585611a50565b611407611712565b6001600160a01b03811661146c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610465565b6114758161176c565b50565b60006001600160e01b03198216636cdb3d1360e11b14806114a957506001600160e01b031982166303a24d0760e21b145b8061049157506301ffc9a760e01b6001600160e01b0319831614610491565b6060600280546114d790612d41565b80601f016020809104026020016040519081016040528092919081815260200182805461150390612d41565b80156115505780601f1061152557610100808354040283529160200191611550565b820191906000526020600020905b81548152906001019060200180831161153357829003601f168201915b50505050509050919050565b6001600160a01b038516331480611578575061157885336103aa565b6115945760405162461bcd60e51b81526004016104659061315c565b6105cd8585858585611a95565b6001600160a01b0384166116015760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610465565b33600061160d85611c72565b9050600061161a85611c72565b90506000868152602081815260408083206001600160a01b038b1684529091528120805487929061164c908490612e47565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46116ac83600089898989611cbd565b50505050505050565b60008281526004602052604090206116cd8282612f10565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b6116f9846104bc565b6040516117069190612448565b60405180910390a25050565b6005546001600160a01b031633146109955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f5c338383611e18565b600061184e83836001600160a01b0316639f442afa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561180d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611831919061302e565b8151811061184157611841612e02565b6020026020010151611ef8565b9050336001600160a01b038216146118b95760405162461bcd60e51b815260206004820152602860248201527f6164647265737320696e2070726f6f66206973206e6f7420612073656e646572604482015267206164647265737360c01b6064820152608401610465565b50505050565b600b5433906001600160401b0385169081111561192a5760405162461bcd60e51b815260206004820152602360248201527f74686520676976656e207265717565737420696420646f6573206e6f742065786044820152621a5cdd60ea1b6064820152608401610465565b6001600160a01b03821660009081526006602090815260408083206001600160401b038916845290915290205460ff16156119b95760405162461bcd60e51b815260206004820152602960248201527f70726f6f662063616e206e6f74206265207375626d6974746564206d6f7265206044820152687468616e206f6e636560b81b6064820152608401610465565b6119d582826001604051806020016040528060008152506115a1565b6040516001600160a01b0383169082907f3bd96af6938a26c69f7495d25501517707ff4dbdeed3f615989247d2176aa2b690600090a3600a5460ff16156105cd576040518181527f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a16119060200160405180910390a15050505050565b6001600160a01b038516331480611a6c5750611a6c85336103aa565b611a885760405162461bcd60e51b81526004016104659061315c565b6105cd8585858585612055565b8151835114611af75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610465565b6001600160a01b038416611b1d5760405162461bcd60e51b8152600401610465906131aa565b3360005b8451811015611c04576000858281518110611b3e57611b3e612e02565b602002602001015190506000858381518110611b5c57611b5c612e02565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015611bac5760405162461bcd60e51b8152600401610465906131ef565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611be9908490612e47565b9250508190555050505080611bfd90612e2e565b9050611b21565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611c54929190613239565b60405180910390a4611c6a81878787878761217f565b505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611cac57611cac612e02565b602090810291909101015292915050565b6001600160a01b0384163b15611c6a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611d01908990899088908890889060040161325e565b6020604051808303816000875af1925050508015611d3c575060408051601f3d908101601f19168201909252611d3991810190613298565b60015b611de857611d486132b5565b806308c379a003611d815750611d5c6132d1565b80611d675750611d83565b8060405162461bcd60e51b81526004016104659190612448565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610465565b6001600160e01b0319811663f23a6e6160e01b146116ac5760405162461bcd60e51b81526004016104659061335a565b816001600160a01b0316836001600160a01b031603611e8b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610465565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600061049161204e6120498460008190506008817eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff16901b6008827fff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff0016901c1790506010817dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff16901b6010827fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000016901c1790506020817bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16901b6020827fffffffff00000000ffffffff00000000ffffffff00000000ffffffff0000000016901c17905060408177ffffffffffffffff0000000000000000ffffffffffffffff16901b60408277ffffffffffffffff0000000000000000ffffffffffffffff1916901c179050608081901b608082901c179050919050565b61223a565b6014015190565b6001600160a01b03841661207b5760405162461bcd60e51b8152600401610465906131aa565b33600061208785611c72565b9050600061209485611c72565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156120d75760405162461bcd60e51b8152600401610465906131ef565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290612114908490612e47565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612174848a8a8a8a8a611cbd565b505050505050505050565b6001600160a01b0384163b15611c6a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906121c390899089908890889088906004016133a2565b6020604051808303816000875af19250505080156121fe575060408051601f3d908101601f191682019092526121fb91810190613298565b60015b61220a57611d486132b5565b6001600160e01b0319811663bc197c8160e01b146116ac5760405162461bcd60e51b81526004016104659061335a565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b82805482825590600052602060002090810192821561229f579160200282015b8281111561229f578251825591602001919060010190612284565b50610b67929150612356565b604051806080016040528060006001600160401b0316815260200160006001600160a01b03168152602001600081526020016123166040518060c001604052806000815260200160008152602001600081526020016060815260200160008152602001606081525090565b905290565b82805482825590600052602060002090810192821561229f579160200282015b8281111561229f57823582559160200191906001019061233b565b5b80821115610b675760008155600101612357565b6001600160a01b038116811461147557600080fd5b6000806040838503121561239357600080fd5b823561239e8161236b565b946020939093013593505050565b6001600160e01b03198116811461147557600080fd5b6000602082840312156123d457600080fd5b8135610595816123ac565b6000602082840312156123f157600080fd5b5035919050565b60005b838110156124135781810151838201526020016123fb565b50506000910152565b600081518084526124348160208601602086016123f8565b601f01601f19169290920160200192915050565b602081526000610595602083018461241c565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156124965761249661245b565b6040525050565b60405160c081016001600160401b03811182821017156124bf576124bf61245b565b60405290565b60006001600160401b038211156124de576124de61245b565b5060051b60200190565b600082601f8301126124f957600080fd5b81356020612506826124c5565b6040516125138282612471565b83815260059390931b850182019282810191508684111561253357600080fd5b8286015b8481101561254e5780358352918301918301612537565b509695505050505050565b60006001600160401b038211156125725761257261245b565b50601f01601f191660200190565b600082601f83011261259157600080fd5b813561259c81612559565b6040516125a98282612471565b8281528560208487010111156125be57600080fd5b82602086016020830137600092810160200192909252509392505050565b600080600080600060a086880312156125f457600080fd5b85356125ff8161236b565b9450602086013561260f8161236b565b935060408601356001600160401b038082111561262b57600080fd5b61263789838a016124e8565b9450606088013591508082111561264d57600080fd5b61265989838a016124e8565b9350608088013591508082111561266f57600080fd5b5061267c88828901612580565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156126ca5783516001600160401b0316835292840192918401916001016126a5565b50909695505050505050565b600080604083850312156126e957600080fd5b82356001600160401b038082111561270057600080fd5b818501915085601f83011261271457600080fd5b81356020612721826124c5565b60405161272e8282612471565b83815260059390931b850182019282810191508984111561274e57600080fd5b948201945b838610156127755785356127668161236b565b82529482019490820190612753565b9650508601359250508082111561278b57600080fd5b50612798858286016124e8565b9150509250929050565b600081518084526020808501945080840160005b838110156127d2578151875295820195908201906001016127b6565b509495945050505050565b60208152600061059560208301846127a2565b6000806000806080858703121561280657600080fd5b84356128118161236b565b935060208501356001600160401b038082111561282d57600080fd5b9086019060c0828903121561284157600080fd5b61284961249d565b82358152602083013560208201526040830135604082015260608301358281111561287357600080fd5b61287f8a8286016124e8565b6060830152506080830135608082015260a0830135828111156128a157600080fd5b6128ad8a828601612580565b60a08301525094506040870135935060608701359150808211156128d057600080fd5b506128dd87828801612580565b91505092959194509250565b8051825260208101516020830152604081015160408301526000606082015160c0606085015261291c60c08501826127a2565b90506080830151608085015260a083015184820360a086015261293f828261241c565b95945050505050565b602081526001600160401b03825116602082015260018060a01b036020830151166040820152604082015160608201526000606083015160808084015261299260a08401826128e9565b949350505050565b80356001600160401b03811681146129b157600080fd5b919050565b6000602082840312156129c857600080fd5b6105958261299a565b85815284602082015283604082015282606082015260a0608082015260006129fc60a083018461241c565b979650505050505050565b60008083601f840112612a1957600080fd5b5081356001600160401b03811115612a3057600080fd5b6020830191508360208260051b8501011115612a4b57600080fd5b9250929050565b600080600080600080600060c0888a031215612a6d57600080fd5b612a768861299a565b96506020880135612a868161236b565b955060408801359450606088013593506080880135925060a08801356001600160401b03811115612ab657600080fd5b612ac28a828b01612a07565b989b979a50959850939692959293505050565b60008060008060008060008060e0898b031215612af157600080fd5b612afa8961299a565b97506020890135612b0a8161236b565b965060408901359550606089013594506080890135935060a08901356001600160401b03811115612b3a57600080fd5b612b468b828c01612a07565b999c989b50969995989497949560c00135949350505050565b801515811461147557600080fd5b60008060408385031215612b8057600080fd5b8235612b8b8161236b565b91506020830135612b9b81612b5f565b809150509250929050565b60008060408385031215612bb957600080fd5b8235612bc48161236b565b9150612bd26020840161299a565b90509250929050565b806040810183101561049157600080fd5b6000806000806000806101408789031215612c0657600080fd5b612c0f8761299a565b955060208701356001600160401b03811115612c2a57600080fd5b612c3689828a01612a07565b9096509450612c4a90508860408901612bdb565b9250610100870188811115612c5e57600080fd5b608088019250612c6e8982612bdb565b9150509295509295509295565b60208152600061059560208301846128e9565b60008060408385031215612ca157600080fd5b8235612cac8161236b565b91506020830135612b9b8161236b565b600080600080600060a08688031215612cd457600080fd5b8535612cdf8161236b565b94506020860135612cef8161236b565b9350604086013592506060860135915060808601356001600160401b03811115612d1857600080fd5b61267c88828901612580565b600060208284031215612d3657600080fd5b81356105958161236b565b600181811c90821680612d5557607f821691505b602082108103612d7557634e487b7160e01b600052602260045260246000fd5b50919050565b6000808454612d8981612d41565b60018281168015612da15760018114612db657612de5565b60ff1984168752821515830287019450612de5565b8860005260208060002060005b85811015612ddc5781548a820152908401908201612dc3565b50505082870194505b505050508351612df98183602088016123f8565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612e4057612e40612e18565b5060010190565b8082018082111561049157610491612e18565b6001600160401b038716815260018060a01b038616602082015284604082015283606082015282608082015260c060a08201526000612e9c60c08301846127a2565b98975050505050505050565b600060208284031215612eba57600080fd5b815161059581612b5f565b601f821115612f0b57600081815260208120601f850160051c81016020861015612eec5750805b601f850160051c820191505b81811015611c6a57828155600101612ef8565b505050565b81516001600160401b03811115612f2957612f2961245b565b612f3d81612f378454612d41565b84612ec5565b602080601f831160018114612f725760008415612f5a5750858301515b600019600386901b1c1916600185901b178555611c6a565b600085815260208120601f198616915b82811015612fa157888601518255948401946001909101908401612f82565b5085821015612fbf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061299260408301846128e9565b81835260006001600160fb1b0383111561300157600080fd5b8260051b80836020870137939093016020019392505050565b602081526000612992602083018486612fe8565b60006020828403121561304057600080fd5b5051919050565b60c08101818360005b600681101561306f578151835260209283019290910190600101613050565b50505092915050565b60006020828403121561308a57600080fd5b81516001600160401b038111156130a057600080fd5b8201601f810184136130b157600080fd5b80516130bc81612559565b6040516130c98282612471565b8281528660208486010111156130de57600080fd5b6130ef8360208301602087016123f8565b9695505050505050565b600061014080835261310e818401898b612fe8565b915050604080876020850137606083018660005b600281101561313f57838284379183019190830190600101613122565b505050808560e08501375082610120830152979650505050505050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60408152600061324c60408301856127a2565b828103602084015261293f81856127a2565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906129fc9083018461241c565b6000602082840312156132aa57600080fd5b8151610595816123ac565b600060033d11156132ce5760046000803e5060005160e01c5b90565b600060443d10156132df5790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561330e57505050505090565b82850191508151818111156133265750505050505090565b843d87010160208285010111156133405750505050505090565b61334f60208286010187612471565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906133ce908301866127a2565b82810360608401526133e081866127a2565b90508281036080840152612e9c818561241c56fea26469706673582212207b5df42ed96a4a1ae032fe7cfd1fbb9351db7ab9189a3a98f9bfc4c511d220b464736f6c63430008130033",
    "sourceMap": "475:28:4:-:0;412:4116:12;475:28:4;-1:-1:-1;412:4116:12;475:28:4;;;;;;;;;:::i;:::-;-1:-1:-1;719:28:12;;;-1:-1:-1;;719:28:12;743:4;719:28;;;1070;;;;;;;;;-1:-1:-1;1107:62:1;;;;;;;;;-1:-1:-1;1107:62:1;;1149:13;1107:62;1149:7;:13::i;:::-;-1:-1:-1;936:32:0;719:10:7;936:18:0;:32::i;:::-;412:4116:12;;8171:86:1;8237:4;:13;8244:6;8237:4;:13;:::i;:::-;;8171:86;:::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:21:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:21;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:21;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:21;;;2580:26;2531:89;-1:-1:-1;;1335:1:21;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:21;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:21;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:21;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:21:o;:::-;412:4116:12;;;;;;",
    "linkReferences": {
      "src/lib/Poseidon.sol": {
        "PoseidonUnit6L": [
          {
            "start": 3832,
            "length": 20
          }
        ]
      },
      "src/lib/SpongePoseidon.sol": {
        "SpongePoseidon": [
          {
            "start": 3719,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101575760003560e01c806396bf4741116100c3578063b45c0fdf1161007c578063b45c0fdf1461033b578063b68967e214610369578063c76d08451461037c578063e985e9c51461039c578063f242432a146103d8578063f2fde38b146103eb57600080fd5b806396bf4741146102a25780639abdc645146102c65780639e621bcf146102d9578063a22cb465146102ec578063a8723114146102ff578063b45a3c0e1461032857600080fd5b80634e1273f4116101155780634e1273f4146101f75780635bcca7ee14610217578063715018a61461022a5780637601252614610232578063825747cb146102525780638da5cb5b1461027d57600080fd5b8062fdd58e1461015c57806301ffc9a7146101825780630e89341c146101a557806318160ddd146101c55780632eb2c2d6146101cd57806337ba9523146101e2575b600080fd5b61016f61016a366004612380565b6103fe565b6040519081526020015b60405180910390f35b6101956101903660046123c2565b610497565b6040519015158152602001610179565b6101b86101b33660046123df565b6104bc565b6040516101799190612448565b600b5461016f565b6101e06101db3660046125dc565b61059c565b005b6101ea6105d4565b6040516101799190612689565b61020a6102053660046126d6565b61065e565b60405161017991906127dd565b6101e06102253660046127f0565b610787565b6101e0610983565b6102456102403660046123df565b610997565b6040516101799190612948565b6102656102603660046123df565b610b0e565b6040516001600160401b039091168152602001610179565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610179565b6102b56102b03660046129b6565b610b6b565b6040516101799594939291906129d1565b6101956102d4366004612a52565b610c24565b6101956102e7366004612ad5565b610d75565b6101e06102fa366004612b6d565b610f2e565b61028a61030d3660046129b6565b6008602052600090815260409020546001600160a01b031681565b6101956103363660046123df565b610f60565b610195610349366004612ba6565b600660209081526000928352604080842090915290825290205460ff1681565b610195610377366004612bec565b610f90565b61038f61038a3660046129b6565b611260565b6040516101799190612c7b565b6101956103aa366004612c8e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101e06103e6366004612cbc565b6113ce565b6101e06103f9366004612d24565b6113ff565b60006001600160a01b03831661046e5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216635a2d1e0760e11b1480610491575061049182611478565b6000818152600460205260408120805460609291906104da90612d41565b80601f016020809104026020016040519081016040528092919081815260200182805461050690612d41565b80156105535780601f1061052857610100808354040283529160200191610553565b820191906000526020600020905b81548152906001019060200180831161053657829003601f168201915b5050505050905060008151116105715761056c836114c8565b610595565b600381604051602001610585929190612d7b565b6040516020818303038152906040525b9392505050565b600a5460ff16156105c05760405163bd291a9560e01b815260040160405180910390fd5b6105cd858585858561155c565b5050505050565b6060600980548060200260200160405190810160405280929190818152602001828054801561065457602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b0316815260200190600801906020826007010492830192600103820291508084116106115790505b5050505050905090565b606081518351146106c35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610465565b600083516001600160401b038111156106de576106de61245b565b604051908082528060200260200182016040528015610707578160200160208202803683370190505b50905060005b845181101561077f5761075285828151811061072b5761072b612e02565b602002602001015185838151811061074557610745612e02565b60200260200101516103fe565b82828151811061076457610764612e02565b602090810291909101015261077881612e2e565b905061070d565b509392505050565b6000600b5460016107989190612e47565b905030639abdc6456107a983610b0e565b878760000151886020015189604001518a606001516040518763ffffffff1660e01b81526004016107df96959493929190612e5a565b6020604051808303816000875af11580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108229190612ea8565b5061083f30826001604051806020016040528060008152506115a1565b61084981836116b5565b604051806080016040528061085d83610b0e565b6001600160401b03168152602001336001600160a01b039081168252602080830187905260409283018890526000858152600c82528390208451815486840151909416600160401b026001600160e01b03199094166001600160401b039091161792909217825583830151600183015560608085015180516002850190815581840151600386015594810151600485015590810151805193949193919261090c92600587019290910190612264565b506080820151600482015560a0820151600582019061092b9082612f10565b50505090505061093a81610b0e565b6001600160401b03167f2aba27ed08081e16430401a2939882ee0396bdb45facc7ba9f6fabecdbd044ad8486604051610974929190612fcf565b60405180910390a25050505050565b61098b611712565b610995600061176c565b565b61099f6122ab565b6000828152600c6020908152604091829020825160808101845281546001600160401b0381168252600160401b90046001600160a01b031681840152600182015481850152835160c0810185526002830180548252600384015482860152600484015482870152600584018054875181880281018801909852808852939694956060808901969495939490860193909291830182828015610a5f57602002820191906000526020600020905b815481526020019060010190808311610a4b575b5050505050815260200160048201548152602001600582018054610a8290612d41565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae90612d41565b8015610afb5780601f10610ad057610100808354040283529160200191610afb565b820191906000526020600020905b815481529060010190602001808311610ade57829003601f168201915b5050509190925250505090525092915050565b60006001600160401b03821115610b675760405162461bcd60e51b815260206004820181905260248201527f56616c756520746f6f206c6172676520746f2066697420696e2075696e7436346044820152606401610465565b5090565b600760205260009081526040902080546001820154600283015460048401546005850180549495939492939192610ba190612d41565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcd90612d41565b8015610c1a5780601f10610bef57610100808354040283529160200191610c1a565b820191906000526020600020905b815481529060010190602001808311610bfd57829003601f168201915b5050505050905085565b6000610c2e611712565b6040516340ec6e4960e01b815260009073__$36eb1c3292662550b1df2180be06943270$__906340ec6e4990610c6a908790879060040161301a565b602060405180830381865af4158015610c87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cab919061302e565b9050600073__$4ed6c413d5497c876806113cd712d9f88f$__63f5b4a7886040518060c001604052808b8152602001600081526020018981526020018a815260200160008152602001858152506040518263ffffffff1660e01b8152600401610d149190613047565b602060405180830381865af4158015610d31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d55919061302e565b9050610d678a8a8a8a8a8a8a88610d75565b9a9950505050505050505050565b6000610d7f611712565b6001600160401b0389166000908152600860205260409020546001600160a01b0316610e0357600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af6004820401805460039092166008026101000a6001600160401b0381810219909316928c16029190911790555b6001600160401b038916600090815260076020526040808220600480820186905560029091018890558151632cd1575560e11b815291516001600160a01b038c16936359a2aeaa9380840193919291908290030181865afa158015610e6c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e949190810190613078565b6001600160401b038a16600090815260076020526040902060050190610eba9082612f10565b506001600160401b038916600090815260076020526040902060018101879055878155610eeb90600301858561231b565b50506001600160401b038816600090815260086020526040902080546001600160a01b0389166001600160a01b0319909116179055600198975050505050505050565b600a5460ff1615610f525760405163bd291a9560e01b815260040160405180910390fd5b610f5c82826117be565b5050565b6000600b54821115610f855760405163ae9a63f560e01b815260040160405180910390fd5b5050600a5460ff1690565b6001600160401b0386166000908152600860205260408120546001600160a01b031661100f5760405162461bcd60e51b815260206004820152602860248201527f76616c696461746f72206973206e6f742073657420666f7220746869732072656044820152671c5d595cdd081a5960c21b6064820152608401610465565b6001600160401b03871660009081526007602052604081206004015490036110855760405162461bcd60e51b8152602060048201526024808201527f7175657279206973206e6f742073657420666f722074686973207265717565736044820152631d081a5960e21b6064820152608401610465565b6110e18787878080602002602001604051908101604052809392919081815260200183836020028082843760009201829052506001600160401b038e168152600860205260409020546001600160a01b031692506117c9915050565b6001600160401b038716600090815260086020908152604080832054600790925291829020600490810154925163434661ef60e01b81526001600160a01b039092169263434661ef92611140928b928b928b928b928b929091016130f9565b602060405180830381865afa15801561115d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111819190612ea8565b6111cd5760405162461bcd60e51b815260206004820152601b60248201527f70726f6f6620726573706f6e7365206973206e6f742076616c696400000000006044820152606401610465565b3360009081526006602090815260408083206001600160401b038b168452825291829020805460ff1916600117905581518782028181018301909352878152611253928a928a918a9182919085019084908082843760009201829052506001600160401b038e168152600860205260409020546001600160a01b031692506118bf915050565b5060019695505050505050565b6112996040518060c001604052806000815260200160008152602001600081526020016060815260200160008152602001606081525090565b6001600160401b038216600090815260076020908152604091829020825160c08101845281548152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561132257602002820191906000526020600020905b81548152602001906001019080831161130e575b505050505081526020016004820154815260200160058201805461134590612d41565b80601f016020809104026020016040519081016040528092919081815260200182805461137190612d41565b80156113be5780601f10611393576101008083540402835291602001916113be565b820191906000526020600020905b8154815290600101906020018083116113a157829003601f168201915b5050505050815250509050919050565b600a5460ff16156113f25760405163bd291a9560e01b815260040160405180910390fd5b6105cd8585858585611a50565b611407611712565b6001600160a01b03811661146c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610465565b6114758161176c565b50565b60006001600160e01b03198216636cdb3d1360e11b14806114a957506001600160e01b031982166303a24d0760e21b145b8061049157506301ffc9a760e01b6001600160e01b0319831614610491565b6060600280546114d790612d41565b80601f016020809104026020016040519081016040528092919081815260200182805461150390612d41565b80156115505780601f1061152557610100808354040283529160200191611550565b820191906000526020600020905b81548152906001019060200180831161153357829003601f168201915b50505050509050919050565b6001600160a01b038516331480611578575061157885336103aa565b6115945760405162461bcd60e51b81526004016104659061315c565b6105cd8585858585611a95565b6001600160a01b0384166116015760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610465565b33600061160d85611c72565b9050600061161a85611c72565b90506000868152602081815260408083206001600160a01b038b1684529091528120805487929061164c908490612e47565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46116ac83600089898989611cbd565b50505050505050565b60008281526004602052604090206116cd8282612f10565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b6116f9846104bc565b6040516117069190612448565b60405180910390a25050565b6005546001600160a01b031633146109955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f5c338383611e18565b600061184e83836001600160a01b0316639f442afa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561180d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611831919061302e565b8151811061184157611841612e02565b6020026020010151611ef8565b9050336001600160a01b038216146118b95760405162461bcd60e51b815260206004820152602860248201527f6164647265737320696e2070726f6f66206973206e6f7420612073656e646572604482015267206164647265737360c01b6064820152608401610465565b50505050565b600b5433906001600160401b0385169081111561192a5760405162461bcd60e51b815260206004820152602360248201527f74686520676976656e207265717565737420696420646f6573206e6f742065786044820152621a5cdd60ea1b6064820152608401610465565b6001600160a01b03821660009081526006602090815260408083206001600160401b038916845290915290205460ff16156119b95760405162461bcd60e51b815260206004820152602960248201527f70726f6f662063616e206e6f74206265207375626d6974746564206d6f7265206044820152687468616e206f6e636560b81b6064820152608401610465565b6119d582826001604051806020016040528060008152506115a1565b6040516001600160a01b0383169082907f3bd96af6938a26c69f7495d25501517707ff4dbdeed3f615989247d2176aa2b690600090a3600a5460ff16156105cd576040518181527f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a16119060200160405180910390a15050505050565b6001600160a01b038516331480611a6c5750611a6c85336103aa565b611a885760405162461bcd60e51b81526004016104659061315c565b6105cd8585858585612055565b8151835114611af75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610465565b6001600160a01b038416611b1d5760405162461bcd60e51b8152600401610465906131aa565b3360005b8451811015611c04576000858281518110611b3e57611b3e612e02565b602002602001015190506000858381518110611b5c57611b5c612e02565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015611bac5760405162461bcd60e51b8152600401610465906131ef565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611be9908490612e47565b9250508190555050505080611bfd90612e2e565b9050611b21565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611c54929190613239565b60405180910390a4611c6a81878787878761217f565b505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611cac57611cac612e02565b602090810291909101015292915050565b6001600160a01b0384163b15611c6a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611d01908990899088908890889060040161325e565b6020604051808303816000875af1925050508015611d3c575060408051601f3d908101601f19168201909252611d3991810190613298565b60015b611de857611d486132b5565b806308c379a003611d815750611d5c6132d1565b80611d675750611d83565b8060405162461bcd60e51b81526004016104659190612448565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610465565b6001600160e01b0319811663f23a6e6160e01b146116ac5760405162461bcd60e51b81526004016104659061335a565b816001600160a01b0316836001600160a01b031603611e8b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610465565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600061049161204e6120498460008190506008817eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff16901b6008827fff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff0016901c1790506010817dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff16901b6010827fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000016901c1790506020817bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16901b6020827fffffffff00000000ffffffff00000000ffffffff00000000ffffffff0000000016901c17905060408177ffffffffffffffff0000000000000000ffffffffffffffff16901b60408277ffffffffffffffff0000000000000000ffffffffffffffff1916901c179050608081901b608082901c179050919050565b61223a565b6014015190565b6001600160a01b03841661207b5760405162461bcd60e51b8152600401610465906131aa565b33600061208785611c72565b9050600061209485611c72565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156120d75760405162461bcd60e51b8152600401610465906131ef565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290612114908490612e47565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612174848a8a8a8a8a611cbd565b505050505050505050565b6001600160a01b0384163b15611c6a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906121c390899089908890889088906004016133a2565b6020604051808303816000875af19250505080156121fe575060408051601f3d908101601f191682019092526121fb91810190613298565b60015b61220a57611d486132b5565b6001600160e01b0319811663bc197c8160e01b146116ac5760405162461bcd60e51b81526004016104659061335a565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b82805482825590600052602060002090810192821561229f579160200282015b8281111561229f578251825591602001919060010190612284565b50610b67929150612356565b604051806080016040528060006001600160401b0316815260200160006001600160a01b03168152602001600081526020016123166040518060c001604052806000815260200160008152602001600081526020016060815260200160008152602001606081525090565b905290565b82805482825590600052602060002090810192821561229f579160200282015b8281111561229f57823582559160200191906001019061233b565b5b80821115610b675760008155600101612357565b6001600160a01b038116811461147557600080fd5b6000806040838503121561239357600080fd5b823561239e8161236b565b946020939093013593505050565b6001600160e01b03198116811461147557600080fd5b6000602082840312156123d457600080fd5b8135610595816123ac565b6000602082840312156123f157600080fd5b5035919050565b60005b838110156124135781810151838201526020016123fb565b50506000910152565b600081518084526124348160208601602086016123f8565b601f01601f19169290920160200192915050565b602081526000610595602083018461241c565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156124965761249661245b565b6040525050565b60405160c081016001600160401b03811182821017156124bf576124bf61245b565b60405290565b60006001600160401b038211156124de576124de61245b565b5060051b60200190565b600082601f8301126124f957600080fd5b81356020612506826124c5565b6040516125138282612471565b83815260059390931b850182019282810191508684111561253357600080fd5b8286015b8481101561254e5780358352918301918301612537565b509695505050505050565b60006001600160401b038211156125725761257261245b565b50601f01601f191660200190565b600082601f83011261259157600080fd5b813561259c81612559565b6040516125a98282612471565b8281528560208487010111156125be57600080fd5b82602086016020830137600092810160200192909252509392505050565b600080600080600060a086880312156125f457600080fd5b85356125ff8161236b565b9450602086013561260f8161236b565b935060408601356001600160401b038082111561262b57600080fd5b61263789838a016124e8565b9450606088013591508082111561264d57600080fd5b61265989838a016124e8565b9350608088013591508082111561266f57600080fd5b5061267c88828901612580565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156126ca5783516001600160401b0316835292840192918401916001016126a5565b50909695505050505050565b600080604083850312156126e957600080fd5b82356001600160401b038082111561270057600080fd5b818501915085601f83011261271457600080fd5b81356020612721826124c5565b60405161272e8282612471565b83815260059390931b850182019282810191508984111561274e57600080fd5b948201945b838610156127755785356127668161236b565b82529482019490820190612753565b9650508601359250508082111561278b57600080fd5b50612798858286016124e8565b9150509250929050565b600081518084526020808501945080840160005b838110156127d2578151875295820195908201906001016127b6565b509495945050505050565b60208152600061059560208301846127a2565b6000806000806080858703121561280657600080fd5b84356128118161236b565b935060208501356001600160401b038082111561282d57600080fd5b9086019060c0828903121561284157600080fd5b61284961249d565b82358152602083013560208201526040830135604082015260608301358281111561287357600080fd5b61287f8a8286016124e8565b6060830152506080830135608082015260a0830135828111156128a157600080fd5b6128ad8a828601612580565b60a08301525094506040870135935060608701359150808211156128d057600080fd5b506128dd87828801612580565b91505092959194509250565b8051825260208101516020830152604081015160408301526000606082015160c0606085015261291c60c08501826127a2565b90506080830151608085015260a083015184820360a086015261293f828261241c565b95945050505050565b602081526001600160401b03825116602082015260018060a01b036020830151166040820152604082015160608201526000606083015160808084015261299260a08401826128e9565b949350505050565b80356001600160401b03811681146129b157600080fd5b919050565b6000602082840312156129c857600080fd5b6105958261299a565b85815284602082015283604082015282606082015260a0608082015260006129fc60a083018461241c565b979650505050505050565b60008083601f840112612a1957600080fd5b5081356001600160401b03811115612a3057600080fd5b6020830191508360208260051b8501011115612a4b57600080fd5b9250929050565b600080600080600080600060c0888a031215612a6d57600080fd5b612a768861299a565b96506020880135612a868161236b565b955060408801359450606088013593506080880135925060a08801356001600160401b03811115612ab657600080fd5b612ac28a828b01612a07565b989b979a50959850939692959293505050565b60008060008060008060008060e0898b031215612af157600080fd5b612afa8961299a565b97506020890135612b0a8161236b565b965060408901359550606089013594506080890135935060a08901356001600160401b03811115612b3a57600080fd5b612b468b828c01612a07565b999c989b50969995989497949560c00135949350505050565b801515811461147557600080fd5b60008060408385031215612b8057600080fd5b8235612b8b8161236b565b91506020830135612b9b81612b5f565b809150509250929050565b60008060408385031215612bb957600080fd5b8235612bc48161236b565b9150612bd26020840161299a565b90509250929050565b806040810183101561049157600080fd5b6000806000806000806101408789031215612c0657600080fd5b612c0f8761299a565b955060208701356001600160401b03811115612c2a57600080fd5b612c3689828a01612a07565b9096509450612c4a90508860408901612bdb565b9250610100870188811115612c5e57600080fd5b608088019250612c6e8982612bdb565b9150509295509295509295565b60208152600061059560208301846128e9565b60008060408385031215612ca157600080fd5b8235612cac8161236b565b91506020830135612b9b8161236b565b600080600080600060a08688031215612cd457600080fd5b8535612cdf8161236b565b94506020860135612cef8161236b565b9350604086013592506060860135915060808601356001600160401b03811115612d1857600080fd5b61267c88828901612580565b600060208284031215612d3657600080fd5b81356105958161236b565b600181811c90821680612d5557607f821691505b602082108103612d7557634e487b7160e01b600052602260045260246000fd5b50919050565b6000808454612d8981612d41565b60018281168015612da15760018114612db657612de5565b60ff1984168752821515830287019450612de5565b8860005260208060002060005b85811015612ddc5781548a820152908401908201612dc3565b50505082870194505b505050508351612df98183602088016123f8565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612e4057612e40612e18565b5060010190565b8082018082111561049157610491612e18565b6001600160401b038716815260018060a01b038616602082015284604082015283606082015282608082015260c060a08201526000612e9c60c08301846127a2565b98975050505050505050565b600060208284031215612eba57600080fd5b815161059581612b5f565b601f821115612f0b57600081815260208120601f850160051c81016020861015612eec5750805b601f850160051c820191505b81811015611c6a57828155600101612ef8565b505050565b81516001600160401b03811115612f2957612f2961245b565b612f3d81612f378454612d41565b84612ec5565b602080601f831160018114612f725760008415612f5a5750858301515b600019600386901b1c1916600185901b178555611c6a565b600085815260208120601f198616915b82811015612fa157888601518255948401946001909101908401612f82565b5085821015612fbf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061299260408301846128e9565b81835260006001600160fb1b0383111561300157600080fd5b8260051b80836020870137939093016020019392505050565b602081526000612992602083018486612fe8565b60006020828403121561304057600080fd5b5051919050565b60c08101818360005b600681101561306f578151835260209283019290910190600101613050565b50505092915050565b60006020828403121561308a57600080fd5b81516001600160401b038111156130a057600080fd5b8201601f810184136130b157600080fd5b80516130bc81612559565b6040516130c98282612471565b8281528660208486010111156130de57600080fd5b6130ef8360208301602087016123f8565b9695505050505050565b600061014080835261310e818401898b612fe8565b915050604080876020850137606083018660005b600281101561313f57838284379183019190830190600101613122565b505050808560e08501375082610120830152979650505050505050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60408152600061324c60408301856127a2565b828103602084015261293f81856127a2565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906129fc9083018461241c565b6000602082840312156132aa57600080fd5b8151610595816123ac565b600060033d11156132ce5760046000803e5060005160e01c5b90565b600060443d10156132df5790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561330e57505050505090565b82850191508151818111156133265750505050505090565b843d87010160208285010111156133405750505050505090565b61334f60208286010187612471565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906133ce908301866127a2565b82810360608401526133e081866127a2565b90508281036080840152612e9c818561241c56fea26469706673582212207b5df42ed96a4a1ae032fe7cfd1fbb9351db7ab9189a3a98f9bfc4c511d220b464736f6c63430008130033",
    "sourceMap": "412:4116:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:1;;;;;;:::i;:::-;;:::i;:::-;;;616:25:21;;;604:2;589:18;2185:227:1;;;;;;;;1243:196:12;;;;;;:::i;:::-;;:::i;:::-;;;1203:14:21;;1196:22;1178:41;;1166:2;1151:18;1243:196:12;1038:187:21;1322:346:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1152:85:12:-;1222:8;;1152:85;;2027:270;;;;;;:::i;:::-;;:::i;:::-;;3511:116:20;;;:::i;:::-;;;;;;;:::i;2569:508:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2648:780:12:-;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1599:134:12:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2455:187::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;10988:31:21;;;10970:50;;10958:2;10943:18;2455:187:12;10826:200:21;1201:85:0;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;11195:32:21;;;11177:51;;11165:2;11150:18;1201:85:0;11031:203:21;485:71:20;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;1913:746::-;;;;;;:::i;:::-;;:::i;2665:840::-;;;;;;:::i;:::-;;:::i;2303:146:12:-;;;;;;:::i;:::-;;:::i;562:61:20:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;562:61:20;;;1445:148:12;;;;;;:::i;:::-;;:::i;421:57:20:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;673:1055;;;;;;:::i;:::-;;:::i;1734:173::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3365:166:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:27:1;;;3464:4;3487:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3365:166;1791:230:12;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;2185:227:1:-;2271:7;-1:-1:-1;;;;;2298:21:1;;2290:76;;;;-1:-1:-1;;;2290:76:1;;18349:2:21;2290:76:1;;;18331:21:21;18388:2;18368:18;;;18361:30;18427:34;18407:18;;;18400:62;-1:-1:-1;;;18478:18:21;;;18471:40;18528:19;;2290:76:1;;;;;;;;;-1:-1:-1;2383:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:1;;;;;;;;;;2185:227;;;;;:::o;1243:196:12:-;1328:4;-1:-1:-1;;;;;;1351:41:12;;-1:-1:-1;;;1351:41:12;;:81;;;1396:36;1420:11;1396:23;:36::i;1322:346:4:-;1415:22;1440:19;;;:10;:19;;;;;1415:44;;1390:13;;1415:22;1440:19;1415:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:1;1573:8;1567:22;:26;:94;;1643:18;1653:7;1643:9;:18::i;:::-;1567:94;;;1620:8;1630;1603:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1567:94;1560:101;1322:346;-1:-1:-1;;;1322:346:4:o;2027:270:12:-;973:8;;;;969:32;;;990:11;;-1:-1:-1;;;990:11:12;;;;;;;;;;;969:32;2233:57:::1;2261:4;2267:2;2271:3;2276:7;2285:4;2233:27;:57::i;:::-;2027:270:::0;;;;;:::o;3511:116:20:-;3564:19;3602:18;3595:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3595:25:20;-1:-1:-1;;;;;3595:25:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3511:116;:::o;2569:508:1:-;2720:16;2779:3;:10;2760:8;:15;:29;2752:83;;;;-1:-1:-1;;;2752:83:1;;20296:2:21;2752:83:1;;;20278:21:21;20335:2;20315:18;;;20308:30;20374:34;20354:18;;;20347:62;-1:-1:-1;;;20425:18:21;;;20418:39;20474:19;;2752:83:1;20094:405:21;2752:83:1;2846:30;2893:8;:15;-1:-1:-1;;;;;2879:30:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2879:30:1;;2846:63;;2925:9;2920:120;2944:8;:15;2940:1;:19;2920:120;;;2999:30;3009:8;3018:1;3009:11;;;;;;;;:::i;:::-;;;;;;;3022:3;3026:1;3022:6;;;;;;;;:::i;:::-;;;;;;;2999:9;:30::i;:::-;2980:13;2994:1;2980:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2961:3;;;:::i;:::-;;;2920:120;;;-1:-1:-1;3057:13:1;2569:508;-1:-1:-1;;;2569:508:1:o;2648:780:12:-;2898:18;2919:8;;2930:1;2919:12;;;;:::i;:::-;2898:33;-1:-1:-1;2941:4:12;:18;2960:34;2898:33;2960:22;:34::i;:::-;2996:10;3008:6;:13;;;3023:6;:19;;;3044:6;:15;;;3061:6;:12;;;2941:133;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3084:39;3098:4;3105:10;3117:1;3084:39;;;;;;;;;;;;:5;:39::i;:::-;3133:30;3141:10;3153:9;3133:7;:30::i;:::-;3205:130;;;;;;;;3227:34;3250:10;3227:22;:34::i;:::-;-1:-1:-1;;;;;3205:130:12;;;;;719:10:7;-1:-1:-1;;;;;3205:130:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;3173:29:12;;;:17;:29;;;;;:162;;;;;;;;;;;-1:-1:-1;;;3173:162:12;-1:-1:-1;;;;;;3173:162:12;;;-1:-1:-1;;;;;3173:162:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;:162;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3173:162:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3360:34;3383:10;3360:22;:34::i;:::-;-1:-1:-1;;;;;3350:71:12;;3396:16;3414:6;3350:71;;;;;;;:::i;:::-;;;;;;;;2839:589;2648:780;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1599:134:12:-;1660:26;;:::i;:::-;1705:21;;;;:17;:21;;;;;;;;;1698:28;;;;;;;;;-1:-1:-1;;;;;1698:28:12;;;;-1:-1:-1;;;1698:28:12;;-1:-1:-1;;;;;1698:28:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1705:21;;1698:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1698:28:12;;;;-1:-1:-1;;;1698:28:12;;-1:-1:-1;1698:28:12;1599:134;-1:-1:-1;;1599:134:12:o;2455:187::-;2523:6;-1:-1:-1;;;;;2549:19:12;;;2541:64;;;;-1:-1:-1;;;2541:64:12;;24617:2:21;2541:64:12;;;24599:21:21;;;24636:18;;;24629:30;24695:34;24675:18;;;24668:62;24747:18;;2541:64:12;24415:356:21;2541:64:12;-1:-1:-1;2629:5:12;2455:187::o;485:71:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1913:746::-;2154:4;1094:13:0;:11;:13::i;:::-;2190:26:20::1;::::0;-1:-1:-1;;;2190:26:20;;2170:17:::1;::::0;2190:14:::1;::::0;:19:::1;::::0;:26:::1;::::0;2210:5;;;;2190:26:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2170:46;;2328:17;2348:14;:23;:96;;;;;;;;2386:6;2348:96;;;;2394:1;2348:96;;;;2397:8;2348:96;;;;2407:12;2348:96;;;;2421:1;2348:96;;;;2424:9;2348:96;;::::0;::::1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2328:116;;2470:182;2500:9;2523;2546:6;2566:12;2592:8;2614:5;;2633:9;2470:16;:182::i;:::-;2455:197:::0;1913:746;-1:-1:-1;;;;;;;;;;1913:746:20:o;2665:840::-;2936:4;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2956:28:20;::::1;3014:4;2956:28:::0;;;:17:::1;:28;::::0;;;;;-1:-1:-1;;;;;2956:28:20::1;2952:129;;3036:18;:34:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3036:34:20;;;;;::::1;::::0;::::1;;::::0;;;;;;::::1;;;;-1:-1:-1::0;;;;;3036:34:20;;::::1;;::::0;;::::1;::::0;;::::1;;::::0;;;::::1;::::0;;2952:129:::1;-1:-1:-1::0;;;;;3090:25:20;::::1;;::::0;;;:14:::1;:25;::::0;;;;;:35:::1;::::0;;::::1;:47:::0;;;3147:34:::1;::::0;;::::1;:45:::0;;;3240:24;;-1:-1:-1;;;3240:24:20;;;;-1:-1:-1;;;;;3240:22:20;::::1;::::0;::::1;::::0;:24;;::::1;::::0;3090:25;;3240:24;;;;;;;:22;:24:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3240:24:20::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;3202:25:20;::::1;;::::0;;;:14:::1;:25;::::0;;;;:35:::1;;::::0;:62:::1;::::0;:35;:62:::1;:::i;:::-;-1:-1:-1::0;;;;;;3274:25:20;::::1;;::::0;;;:14:::1;:25;::::0;;;;:38:::1;::::0;::::1;:53:::0;;;3337:41;;;3388:39:::1;::::0;:31:::1;;3422:5:::0;;3388:39:::1;:::i;:::-;-1:-1:-1::0;;;;;;;3437:28:20;::::1;;::::0;;;:17:::1;:28;::::0;;;;:40;;-1:-1:-1;;;;;3437:40:20;::::1;-1:-1:-1::0;;;;;;3437:40:20;;::::1;;::::0;;;2665:840;;;;;;;;;;:::o;2303:146:12:-;973:8;;;;969:32;;;990:11;;-1:-1:-1;;;990:11:12;;;;;;;;;;;969:32;2399:43:::1;2423:8;2433;2399:23;:43::i;:::-;2303:146:::0;;:::o;1445:148::-;1501:4;1531:8;;1521:7;:18;1517:44;;;1548:13;;-1:-1:-1;;;1548:13:12;;;;;;;;;;;1517:44;-1:-1:-1;;1578:8:12;;;;;1445:148::o;673:1055:20:-;-1:-1:-1;;;;;925:28:20;;888:4;925:28;;;:17;:28;;;;;;-1:-1:-1;;;;;925:28:20;904:148;;;;-1:-1:-1;;;904:148:20;;27000:2:21;904:148:20;;;26982:21:21;27039:2;27019:18;;;27012:30;27078:34;27058:18;;;27051:62;-1:-1:-1;;;27129:18:21;;;27122:38;27177:19;;904:148:20;26798:404:21;904:148:20;-1:-1:-1;;;;;1090:25:20;;;;;;:14;:25;;;;;:35;;;:40;;1082:89;;;;-1:-1:-1;;;1082:89:20;;27409:2:21;1082:89:20;;;27391:21:21;27448:2;27428:18;;;27421:30;27487:34;27467:18;;;27460:62;-1:-1:-1;;;27538:18:21;;;27531:34;27582:19;;1082:89:20;27207:400:21;1082:89:20;1198:67;1217:9;1228:6;;1198:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1236:28:20;;;;:17;:28;;;;;;-1:-1:-1;;;;;1236:28:20;;-1:-1:-1;1198:18:20;;-1:-1:-1;;1198:67:20:i;:::-;-1:-1:-1;;;;;1297:28:20;;;;;;:17;:28;;;;;;;;;1431:14;:25;;;;;;;:35;;;;;1297:183;;-1:-1:-1;;;1297:183:20;;-1:-1:-1;;;;;1297:28:20;;;;:35;;:183;;1350:6;;;;1374:1;;1393;;1412;;1431:35;;1297:183;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1276:257;;;;-1:-1:-1;;;1276:257:20;;28891:2:21;1276:257:20;;;28873:21:21;28930:2;28910:18;;;28903:30;28969:29;28949:18;;;28942:57;29016:18;;1276:257:20;28689:351:21;1276:257:20;1551:10;1544:18;;;;:6;:18;;;;;;;;-1:-1:-1;;;;;1544:29:20;;;;;;;;;;:36;;-1:-1:-1;;1544:36:20;1576:4;1544:36;;;1634:66;;;;;;;;;;;;;;;;;;1563:9;;1663:6;;;;;;1634:66;;;;1663:6;;1634:66;1663:6;1634:66;;;;;;;;-1:-1:-1;;;;;;1671:28:20;;;;:17;:28;;;;;;-1:-1:-1;;;;;1671:28:20;;-1:-1:-1;1634:17:20;;-1:-1:-1;;1634:66:20:i;:::-;-1:-1:-1;1717:4:20;673:1055;;;;;;;;:::o;1734:173::-;1819:37;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:37:20;-1:-1:-1;;;;;1875:25:20;;;;;;:14;:25;;;;;;;;;1868:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:25;;1868:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:173;;;:::o;1791:230:12:-;973:8;;;;969:32;;;990:11;;-1:-1:-1;;;990:11:12;;;;;;;;;;;969:32;1959:55:::1;1982:4;1988:2;1992:7;2001:6;2009:4;1959:22;:55::i;2081:198:0:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;29247:2:21;2161:73:0::1;::::0;::::1;29229:21:21::0;29286:2;29266:18;;;29259:30;29325:34;29305:18;;;29298:62;-1:-1:-1;;;29376:18:21;;;29369:36;29422:19;;2161:73:0::1;29045:402:21::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1236:305:1:-;1338:4;-1:-1:-1;;;;;;1373:41:1;;-1:-1:-1;;;1373:41:1;;:109;;-1:-1:-1;;;;;;;1430:52:1;;-1:-1:-1;;;1430:52:1;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1498:36:1;829:155:9;1940:103:1;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4064:426::-;-1:-1:-1;;;;;4289:20:1;;719:10:7;4289:20:1;;:60;;-1:-1:-1;4313:36:1;4330:4;719:10:7;3365:166:1;:::i;4313:36::-;4268:153;;;;-1:-1:-1;;;4268:153:1;;;;;;;:::i;:::-;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;8630:709::-;-1:-1:-1;;;;;8777:16:1;;8769:62;;;;-1:-1:-1;;;8769:62:1;;30069:2:21;8769:62:1;;;30051:21:21;30108:2;30088:18;;;30081:30;30147:34;30127:18;;;30120:62;-1:-1:-1;;;30198:18:21;;;30191:31;30239:19;;8769:62:1;29867:397:21;8769:62:1;719:10:7;8842:16:1;8906:21;8924:2;8906:17;:21::i;:::-;8883:44;;8937:24;8964:25;8982:6;8964:17;:25::i;:::-;8937:52;;9077:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9077:17:1;;;;;;;;;:27;;9098:6;;9077:9;:27;;9098:6;;9077:27;:::i;:::-;;;;-1:-1:-1;;9119:52:1;;;30443:25:21;;;30499:2;30484:18;;30477:34;;;-1:-1:-1;;;;;9119:52:1;;;;9152:1;;9119:52;;;;;;30416:18:21;9119:52:1;;;;;;;9258:74;9289:8;9307:1;9311:2;9315;9319:6;9327:4;9258:30;:74::i;:::-;8759:580;;;8630:709;;;;:::o;1748:163:4:-;1833:19;;;;:10;:19;;;;;:30;1855:8;1833:19;:30;:::i;:::-;;1896:7;1878:26;1882:12;1886:7;1882:3;:12::i;:::-;1878:26;;;;;;:::i;:::-;;;;;;;;1748:163;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:7;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;30724:2:21;1414:68:0;;;30706:21:21;;;30743:18;;;30736:30;30802:34;30782:18;;;30775:62;30854:18;;1414:68:0;30522:356:21;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;3145:153:1:-;3239:52;719:10:7;3272:8:1;3282;3239:18;:52::i;3434:342:12:-;3599:12;3614:72;3643:6;3650:9;-1:-1:-1;;;;;3650:32:12;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3643:42;;;;;;;;:::i;:::-;;;;;;;3614:28;:72::i;:::-;3599:87;-1:-1:-1;719:10:7;-1:-1:-1;;;;;3704:20:12;;;3696:73;;;;-1:-1:-1;;;3696:73:12;;31085:2:21;3696:73:12;;;31067:21:21;31124:2;31104:18;;;31097:30;31163:34;31143:18;;;31136:62;-1:-1:-1;;;31214:18:21;;;31207:38;31262:19;;3696:73:12;30883:404:21;3696:73:12;3589:187;3434:342;;;:::o;3782:522::-;4032:8;;719:10:7;;-1:-1:-1;;;;;3984:18:12;;;4020:20;;;4012:68;;;;-1:-1:-1;;;4012:68:12;;31494:2:21;4012:68:12;;;31476:21:21;31533:2;31513:18;;;31506:30;31572:34;31552:18;;;31545:62;-1:-1:-1;;;31623:18:21;;;31616:33;31666:19;;4012:68:12;31292:399:21;4012:68:12;-1:-1:-1;;;;;4099:14:12;;;;;;:6;:14;;;;;;;;-1:-1:-1;;;;;4099:25:12;;;;;;;;;;;;4098:26;4090:80;;;;-1:-1:-1;;;4090:80:12;;31898:2:21;4090:80:12;;;31880:21:21;31937:2;31917:18;;;31910:30;31976:34;31956:18;;;31949:62;-1:-1:-1;;;32027:18:21;;;32020:39;32076:19;;4090:80:12;31696:405:21;4090:80:12;4180:30;4186:6;4194:8;4204:1;4180:30;;;;;;;;;;;;:5;:30::i;:::-;4225:27;;-1:-1:-1;;;;;4225:27:12;;;4235:8;;4225:27;;;;;4266:8;;;;4262:35;;;4281:16;;616:25:21;;;4281:16:12;;604:2:21;589:18;4281:16:12;;;;;;;3919:385;;3782:522;;;:::o;3598:394:1:-;-1:-1:-1;;;;;3798:20:1;;719:10:7;3798:20:1;;:60;;-1:-1:-1;3822:36:1;3839:4;719:10:7;3365:166:1;:::i;3822:36::-;3777:153;;;;-1:-1:-1;;;3777:153:1;;;;;;;:::i;:::-;3940:45;3958:4;3964:2;3968;3972:6;3980:4;3940:17;:45::i;6233:1115::-;6453:7;:14;6439:3;:10;:28;6431:81;;;;-1:-1:-1;;;6431:81:1;;32308:2:21;6431:81:1;;;32290:21:21;32347:2;32327:18;;;32320:30;32386:34;32366:18;;;32359:62;-1:-1:-1;;;32437:18:21;;;32430:38;32485:19;;6431:81:1;32106:404:21;6431:81:1;-1:-1:-1;;;;;6530:16:1;;6522:66;;;;-1:-1:-1;;;6522:66:1;;;;;;;:::i;:::-;719:10:7;6599:16:1;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6842:19;6864:13;;;;;;;;;;-1:-1:-1;;;;;6864:19:1;;;;;;;;;;;;6817:10;;-1:-1:-1;6905:21:1;;;;6897:76;;;;-1:-1:-1;;;6897:76:1;;;;;;;:::i;:::-;7015:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7015:19:1;;;;;;;;;;7037:20;;;7015:42;;7085:17;;;;;;;:27;;7037:20;;7015:9;7085:27;;7037:20;;7085:27;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;-1:-1:-1;;;;;7138:47:1;7162:4;-1:-1:-1;;;;;7138:47:1;7152:8;-1:-1:-1;;;;;7138:47:1;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;17064:193::-;17183:16;;;17197:1;17183:16;;;;;;;;;17130;;17158:22;;17183:16;;;;;;;;;;;;-1:-1:-1;17183:16:1;17158:41;;17220:7;17209:5;17215:1;17209:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17245:5;17064:193;-1:-1:-1;;17064:193:1:o;15535:725::-;-1:-1:-1;;;;;15742:13:1;;1465:19:6;:23;15738:516:1;;15777:72;;-1:-1:-1;;;15777:72:1;;-1:-1:-1;;;;;15777:38:1;;;;;:72;;15816:8;;15826:4;;15832:2;;15836:6;;15844:4;;15777:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15777:72:1;;;;;;;;-1:-1:-1;;15777:72:1;;;;;;;;;;;;:::i;:::-;;;15773:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16120:6;16113:14;;-1:-1:-1;;;16113:14:1;;;;;;;;:::i;15773:471::-;;;16167:62;;-1:-1:-1;;;16167:62:1;;35684:2:21;16167:62:1;;;35666:21:21;35723:2;35703:18;;;35696:30;35762:34;35742:18;;;35735:62;-1:-1:-1;;;35813:18:21;;;35806:50;35873:19;;16167:62:1;35482:416:21;15773:471:1;-1:-1:-1;;;;;;15898:55:1;;-1:-1:-1;;;15898:55:1;15894:152;;15977:50;;-1:-1:-1;;;15977:50:1;;;;;;;:::i;12910:323::-;13060:8;-1:-1:-1;;;;;13051:17:1;:5;-1:-1:-1;;;;;13051:17:1;;13043:71;;;;-1:-1:-1;;;13043:71:1;;36514:2:21;13043:71:1;;;36496:21:21;36553:2;36533:18;;;36526:30;36592:34;36572:18;;;36565:62;-1:-1:-1;;;36643:18:21;;;36636:39;36692:19;;13043:71:1;36312:405:21;13043:71:1;-1:-1:-1;;;;;13124:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13124:46:1;;;;;;;;;;13185:41;;1178::21;;;13185::1;;1151:18:21;13185:41:1;;;;;;;12910:323;;;:::o;3985:141:17:-;4048:7;4074:45;4089:29;4103:14;4111:5;566:9;591:5;587:9;;804:1;729;733:66;729:70;728:77;;710:1;635;639:66;635:70;634:77;;633:173;629:177;;1027:2;952:1;956:66;952:70;951:78;;932:2;857:1;861:66;857:70;856:78;;855:175;851:179;;1251:2;1176:1;1180:66;1176:70;1175:78;;1156:2;1081:1;1085:66;1081:70;1080:78;;1079:175;1075:179;;1475:2;1400:1;1404:66;1400:70;1399:78;;1380:2;1305:1;-1:-1:-1;;1305:70:17;1304:78;;1303:175;1299:179;;1547:3;1542:1;:8;;1534:3;1529:1;:8;;1528:23;1524:27;;511:1047;;;;4103:14;4089:13;:29::i;:::-;3915:2;3906:12;3900:19;;3780:155;4940:947:1;-1:-1:-1;;;;;5121:16:1;;5113:66;;;;-1:-1:-1;;;5113:66:1;;;;;;;:::i;:::-;719:10:7;5190:16:1;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5419:19;5441:13;;;;;;;;;;;-1:-1:-1;;;;;5441:19:1;;;;;;;;;;5478:21;;;;5470:76;;;;-1:-1:-1;;;5470:76:1;;;;;;;:::i;:::-;5580:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5580:19:1;;;;;;;;;;5602:20;;;5580:42;;5642:17;;;;;;;:27;;5602:20;;5580:9;5642:27;;5602:20;;5642:27;:::i;:::-;;;;-1:-1:-1;;5685:46:1;;;30443:25:21;;;30499:2;30484:18;;30477:34;;;-1:-1:-1;;;;;5685:46:1;;;;;;;;;;;;;;30416:18:21;5685:46:1;;;;;;;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;16266:792::-;-1:-1:-1;;;;;16498:13:1;;1465:19:6;:23;16494:558:1;;16533:79;;-1:-1:-1;;;16533:79:1;;-1:-1:-1;;;;;16533:43:1;;;;;:79;;16577:8;;16587:4;;16593:3;;16598:7;;16607:4;;16533:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16533:79:1;;;;;;;;-1:-1:-1;;16533:79:1;;;;;;;;;;;;:::i;:::-;;;16529:513;;;;:::i;:::-;-1:-1:-1;;;;;;16691:60:1;;-1:-1:-1;;;16691:60:1;16687:157;;16775:50;;-1:-1:-1;;;16775:50:1;;;;;;;:::i;299:170:17:-;386:13;;;396:2;386:13;;;;;;;;;356:14;;386:13;;;;;;;;-1:-1:-1;;;446:2:17;439:10;;432:21;;;;-1:-1:-1;439:10:17;299:170::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:21;-1:-1:-1;;;;;89:31:21;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:21:o;652:131::-;-1:-1:-1;;;;;;726:32:21;;716:43;;706:71;;773:1;770;763:12;788:245;846:6;899:2;887:9;878:7;874:23;870:32;867:52;;;915:1;912;905:12;867:52;954:9;941:23;973:30;997:5;973:30;:::i;1230:180::-;1289:6;1342:2;1330:9;1321:7;1317:23;1313:32;1310:52;;;1358:1;1355;1348:12;1310:52;-1:-1:-1;1381:23:21;;1230:180;-1:-1:-1;1230:180:21:o;1415:250::-;1500:1;1510:113;1524:6;1521:1;1518:13;1510:113;;;1600:11;;;1594:18;1581:11;;;1574:39;1546:2;1539:10;1510:113;;;-1:-1:-1;;1657:1:21;1639:16;;1632:27;1415:250::o;1670:271::-;1712:3;1750:5;1744:12;1777:6;1772:3;1765:19;1793:76;1862:6;1855:4;1850:3;1846:14;1839:4;1832:5;1828:16;1793:76;:::i;:::-;1923:2;1902:15;-1:-1:-1;;1898:29:21;1889:39;;;;1930:4;1885:50;;1670:271;-1:-1:-1;;1670:271:21:o;1946:220::-;2095:2;2084:9;2077:21;2058:4;2115:45;2156:2;2145:9;2141:18;2133:6;2115:45;:::i;2171:127::-;2232:10;2227:3;2223:20;2220:1;2213:31;2263:4;2260:1;2253:15;2287:4;2284:1;2277:15;2303:249;2413:2;2394:13;;-1:-1:-1;;2390:27:21;2378:40;;-1:-1:-1;;;;;2433:34:21;;2469:22;;;2430:62;2427:88;;;2495:18;;:::i;:::-;2531:2;2524:22;-1:-1:-1;;2303:249:21:o;2557:248::-;2624:2;2618:9;2666:4;2654:17;;-1:-1:-1;;;;;2686:34:21;;2722:22;;;2683:62;2680:88;;;2748:18;;:::i;:::-;2784:2;2777:22;2557:248;:::o;2810:183::-;2870:4;-1:-1:-1;;;;;2895:6:21;2892:30;2889:56;;;2925:18;;:::i;:::-;-1:-1:-1;2970:1:21;2966:14;2982:4;2962:25;;2810:183::o;2998:724::-;3052:5;3105:3;3098:4;3090:6;3086:17;3082:27;3072:55;;3123:1;3120;3113:12;3072:55;3159:6;3146:20;3185:4;3208:43;3248:2;3208:43;:::i;:::-;3280:2;3274:9;3292:31;3320:2;3312:6;3292:31;:::i;:::-;3358:18;;;3450:1;3446:10;;;;3434:23;;3430:32;;;3392:15;;;;-1:-1:-1;3474:15:21;;;3471:35;;;3502:1;3499;3492:12;3471:35;3538:2;3530:6;3526:15;3550:142;3566:6;3561:3;3558:15;3550:142;;;3632:17;;3620:30;;3670:12;;;;3583;;3550:142;;;-1:-1:-1;3710:6:21;2998:724;-1:-1:-1;;;;;;2998:724:21:o;3727:186::-;3775:4;-1:-1:-1;;;;;3800:6:21;3797:30;3794:56;;;3830:18;;:::i;:::-;-1:-1:-1;3896:2:21;3875:15;-1:-1:-1;;3871:29:21;3902:4;3867:40;;3727:186::o;3918:508::-;3960:5;4013:3;4006:4;3998:6;3994:17;3990:27;3980:55;;4031:1;4028;4021:12;3980:55;4067:6;4054:20;4093:31;4121:2;4093:31;:::i;:::-;4153:2;4147:9;4165:31;4193:2;4185:6;4165:31;:::i;:::-;4220:2;4212:6;4205:18;4266:3;4259:4;4254:2;4246:6;4242:15;4238:26;4235:35;4232:55;;;4283:1;4280;4273:12;4232:55;4347:2;4340:4;4332:6;4328:17;4321:4;4313:6;4309:17;4296:54;4394:1;4370:15;;;4387:4;4366:26;4359:37;;;;-1:-1:-1;4374:6:21;3918:508;-1:-1:-1;;;3918:508:21:o;4431:1071::-;4585:6;4593;4601;4609;4617;4670:3;4658:9;4649:7;4645:23;4641:33;4638:53;;;4687:1;4684;4677:12;4638:53;4726:9;4713:23;4745:31;4770:5;4745:31;:::i;:::-;4795:5;-1:-1:-1;4852:2:21;4837:18;;4824:32;4865:33;4824:32;4865:33;:::i;:::-;4917:7;-1:-1:-1;4975:2:21;4960:18;;4947:32;-1:-1:-1;;;;;5028:14:21;;;5025:34;;;5055:1;5052;5045:12;5025:34;5078:61;5131:7;5122:6;5111:9;5107:22;5078:61;:::i;:::-;5068:71;;5192:2;5181:9;5177:18;5164:32;5148:48;;5221:2;5211:8;5208:16;5205:36;;;5237:1;5234;5227:12;5205:36;5260:63;5315:7;5304:8;5293:9;5289:24;5260:63;:::i;:::-;5250:73;;5376:3;5365:9;5361:19;5348:33;5332:49;;5406:2;5396:8;5393:16;5390:36;;;5422:1;5419;5412:12;5390:36;;5445:51;5488:7;5477:8;5466:9;5462:24;5445:51;:::i;:::-;5435:61;;;4431:1071;;;;;;;;:::o;5507:655::-;5676:2;5728:21;;;5798:13;;5701:18;;;5820:22;;;5647:4;;5676:2;5899:15;;;;5873:2;5858:18;;;5647:4;5942:194;5956:6;5953:1;5950:13;5942:194;;;6021:13;;-1:-1:-1;;;;;6017:38:21;6005:51;;6111:15;;;;6076:12;;;;5978:1;5971:9;5942:194;;;-1:-1:-1;6153:3:21;;5507:655;-1:-1:-1;;;;;;5507:655:21:o;6167:1277::-;6285:6;6293;6346:2;6334:9;6325:7;6321:23;6317:32;6314:52;;;6362:1;6359;6352:12;6314:52;6402:9;6389:23;-1:-1:-1;;;;;6472:2:21;6464:6;6461:14;6458:34;;;6488:1;6485;6478:12;6458:34;6526:6;6515:9;6511:22;6501:32;;6571:7;6564:4;6560:2;6556:13;6552:27;6542:55;;6593:1;6590;6583:12;6542:55;6629:2;6616:16;6651:4;6674:43;6714:2;6674:43;:::i;:::-;6746:2;6740:9;6758:31;6786:2;6778:6;6758:31;:::i;:::-;6824:18;;;6912:1;6908:10;;;;6900:19;;6896:28;;;6858:15;;;;-1:-1:-1;6936:19:21;;;6933:39;;;6968:1;6965;6958:12;6933:39;6992:11;;;;7012:217;7028:6;7023:3;7020:15;7012:217;;;7108:3;7095:17;7125:31;7150:5;7125:31;:::i;:::-;7169:18;;7045:12;;;;7207;;;;7012:217;;;7248:6;-1:-1:-1;;7292:18:21;;7279:32;;-1:-1:-1;;7323:16:21;;;7320:36;;;7352:1;7349;7342:12;7320:36;;7375:63;7430:7;7419:8;7408:9;7404:24;7375:63;:::i;:::-;7365:73;;;6167:1277;;;;;:::o;7449:435::-;7502:3;7540:5;7534:12;7567:6;7562:3;7555:19;7593:4;7622:2;7617:3;7613:12;7606:19;;7659:2;7652:5;7648:14;7680:1;7690:169;7704:6;7701:1;7698:13;7690:169;;;7765:13;;7753:26;;7799:12;;;;7834:15;;;;7726:1;7719:9;7690:169;;;-1:-1:-1;7875:3:21;;7449:435;-1:-1:-1;;;;;7449:435:21:o;7889:261::-;8068:2;8057:9;8050:21;8031:4;8088:56;8140:2;8129:9;8125:18;8117:6;8088:56;:::i;8155:1473::-;8307:6;8315;8323;8331;8384:3;8372:9;8363:7;8359:23;8355:33;8352:53;;;8401:1;8398;8391:12;8352:53;8440:9;8427:23;8459:31;8484:5;8459:31;:::i;:::-;8509:5;-1:-1:-1;8565:2:21;8550:18;;8537:32;-1:-1:-1;;;;;8618:14:21;;;8615:34;;;8645:1;8642;8635:12;8615:34;8668:22;;;;8724:4;8706:16;;;8702:27;8699:47;;;8742:1;8739;8732:12;8699:47;8770:17;;:::i;:::-;8825:2;8812:16;8803:7;8796:33;8884:2;8880;8876:11;8863:25;8858:2;8849:7;8845:16;8838:51;8944:2;8940;8936:11;8923:25;8918:2;8909:7;8905:16;8898:51;8995:2;8991;8987:11;8974:25;9024:2;9014:8;9011:16;9008:36;;;9040:1;9037;9030:12;9008:36;9078:56;9126:7;9115:8;9111:2;9107:17;9078:56;:::i;:::-;9073:2;9064:7;9060:16;9053:82;;9191:3;9187:2;9183:12;9170:26;9164:3;9155:7;9151:17;9144:53;9243:3;9239:2;9235:12;9222:26;9273:2;9263:8;9260:16;9257:36;;;9289:1;9286;9279:12;9257:36;9328:44;9364:7;9353:8;9349:2;9345:17;9328:44;:::i;:::-;9322:3;9309:17;;9302:71;-1:-1:-1;9313:7:21;-1:-1:-1;9446:2:21;9431:18;;9418:32;;-1:-1:-1;9503:2:21;9488:18;;9475:32;;-1:-1:-1;9519:16:21;;;9516:36;;;9548:1;9545;9538:12;9516:36;;9571:51;9614:7;9603:8;9592:9;9588:24;9571:51;:::i;:::-;9561:61;;;8155:1473;;;;;;;:::o;9633:596::-;9724:5;9718:12;9713:3;9706:25;9780:4;9773:5;9769:16;9763:23;9756:4;9751:3;9747:14;9740:47;9836:4;9829:5;9825:16;9819:23;9812:4;9807:3;9803:14;9796:47;9688:3;9889:4;9882:5;9878:16;9872:23;9927:4;9920;9915:3;9911:14;9904:28;9953:58;10005:4;10000:3;9996:14;9982:12;9953:58;:::i;:::-;9941:70;;10060:4;10053:5;10049:16;10043:23;10036:4;10031:3;10027:14;10020:47;10115:4;10108:5;10104:16;10098:23;10163:3;10157:4;10153:14;10146:4;10141:3;10137:14;10130:38;10184:39;10218:4;10202:14;10184:39;:::i;:::-;10177:46;9633:596;-1:-1:-1;;;;;9633:596:21:o;10234:587::-;10417:2;10406:9;10399:21;-1:-1:-1;;;;;10466:6:21;10460:13;10456:38;10451:2;10440:9;10436:18;10429:66;10576:1;10572;10567:3;10563:11;10559:19;10553:2;10545:6;10541:15;10535:22;10531:48;10526:2;10515:9;10511:18;10504:76;10634:2;10626:6;10622:15;10616:22;10611:2;10600:9;10596:18;10589:50;10380:4;10686:2;10678:6;10674:15;10668:22;10728:4;10721;10710:9;10706:20;10699:34;10750:65;10810:3;10799:9;10795:19;10781:12;10750:65;:::i;:::-;10742:73;10234:587;-1:-1:-1;;;;10234:587:21:o;11239:171::-;11306:20;;-1:-1:-1;;;;;11355:30:21;;11345:41;;11335:69;;11400:1;11397;11390:12;11335:69;11239:171;;;:::o;11415:184::-;11473:6;11526:2;11514:9;11505:7;11501:23;11497:32;11494:52;;;11542:1;11539;11532:12;11494:52;11565:28;11583:9;11565:28;:::i;11604:507::-;11865:6;11854:9;11847:25;11908:6;11903:2;11892:9;11888:18;11881:34;11951:6;11946:2;11935:9;11931:18;11924:34;11994:6;11989:2;11978:9;11974:18;11967:34;12038:3;12032;12021:9;12017:19;12010:32;11828:4;12059:46;12100:3;12089:9;12085:19;12077:6;12059:46;:::i;:::-;12051:54;11604:507;-1:-1:-1;;;;;;;11604:507:21:o;12116:367::-;12179:8;12189:6;12243:3;12236:4;12228:6;12224:17;12220:27;12210:55;;12261:1;12258;12251:12;12210:55;-1:-1:-1;12284:20:21;;-1:-1:-1;;;;;12316:30:21;;12313:50;;;12359:1;12356;12349:12;12313:50;12396:4;12388:6;12384:17;12372:29;;12456:3;12449:4;12439:6;12436:1;12432:14;12424:6;12420:27;12416:38;12413:47;12410:67;;;12473:1;12470;12463:12;12410:67;12116:367;;;;;:::o;12488:877::-;12644:6;12652;12660;12668;12676;12684;12692;12745:3;12733:9;12724:7;12720:23;12716:33;12713:53;;;12762:1;12759;12752:12;12713:53;12785:28;12803:9;12785:28;:::i;:::-;12775:38;;12863:2;12852:9;12848:18;12835:32;12876:31;12901:5;12876:31;:::i;:::-;12926:5;-1:-1:-1;12978:2:21;12963:18;;12950:32;;-1:-1:-1;13029:2:21;13014:18;;13001:32;;-1:-1:-1;13080:3:21;13065:19;;13052:33;;-1:-1:-1;13136:3:21;13121:19;;13108:33;-1:-1:-1;;;;;13153:30:21;;13150:50;;;13196:1;13193;13186:12;13150:50;13235:70;13297:7;13288:6;13277:9;13273:22;13235:70;:::i;:::-;12488:877;;;;-1:-1:-1;12488:877:21;;-1:-1:-1;12488:877:21;;;;13209:96;;-1:-1:-1;;;12488:877:21:o;13370:946::-;13535:6;13543;13551;13559;13567;13575;13583;13591;13644:3;13632:9;13623:7;13619:23;13615:33;13612:53;;;13661:1;13658;13651:12;13612:53;13684:28;13702:9;13684:28;:::i;:::-;13674:38;;13762:2;13751:9;13747:18;13734:32;13775:31;13800:5;13775:31;:::i;:::-;13825:5;-1:-1:-1;13877:2:21;13862:18;;13849:32;;-1:-1:-1;13928:2:21;13913:18;;13900:32;;-1:-1:-1;13979:3:21;13964:19;;13951:33;;-1:-1:-1;14035:3:21;14020:19;;14007:33;-1:-1:-1;;;;;14052:30:21;;14049:50;;;14095:1;14092;14085:12;14049:50;14134:70;14196:7;14187:6;14176:9;14172:22;14134:70;:::i;:::-;13370:946;;;;-1:-1:-1;13370:946:21;;;;;;14108:96;;14305:3;14290:19;14277:33;;13370:946;-1:-1:-1;;;;13370:946:21:o;14321:118::-;14407:5;14400:13;14393:21;14386:5;14383:32;14373:60;;14429:1;14426;14419:12;14444:382;14509:6;14517;14570:2;14558:9;14549:7;14545:23;14541:32;14538:52;;;14586:1;14583;14576:12;14538:52;14625:9;14612:23;14644:31;14669:5;14644:31;:::i;:::-;14694:5;-1:-1:-1;14751:2:21;14736:18;;14723:32;14764:30;14723:32;14764:30;:::i;:::-;14813:7;14803:17;;;14444:382;;;;;:::o;15065:319::-;15132:6;15140;15193:2;15181:9;15172:7;15168:23;15164:32;15161:52;;;15209:1;15206;15199:12;15161:52;15248:9;15235:23;15267:31;15292:5;15267:31;:::i;:::-;15317:5;-1:-1:-1;15341:37:21;15374:2;15359:18;;15341:37;:::i;:::-;15331:47;;15065:319;;;;;:::o;15389:159::-;15483:6;15516:2;15504:15;;15501:24;-1:-1:-1;15498:44:21;;;15538:1;15535;15528:12;15553:927;15774:6;15782;15790;15798;15806;15814;15867:3;15855:9;15846:7;15842:23;15838:33;15835:53;;;15884:1;15881;15874:12;15835:53;15907:28;15925:9;15907:28;:::i;:::-;15897:38;;15986:2;15975:9;15971:18;15958:32;-1:-1:-1;;;;;16005:6:21;16002:30;15999:50;;;16045:1;16042;16035:12;15999:50;16084:70;16146:7;16137:6;16126:9;16122:22;16084:70;:::i;:::-;16173:8;;-1:-1:-1;16058:96:21;-1:-1:-1;16227:62:21;;-1:-1:-1;16281:7:21;16276:2;16261:18;;16227:62;:::i;:::-;16217:72;;16323:3;16312:9;16308:19;16346:7;16342:2;16339:15;16336:35;;;16367:1;16364;16357:12;16336:35;16405:3;16394:9;16390:19;16380:29;;16428:46;16466:7;16462:2;16428:46;:::i;:::-;16418:56;;;15553:927;;;;;;;;:::o;16485:273::-;16674:2;16663:9;16656:21;16637:4;16694:58;16748:2;16737:9;16733:18;16725:6;16694:58;:::i;16763:388::-;16831:6;16839;16892:2;16880:9;16871:7;16867:23;16863:32;16860:52;;;16908:1;16905;16898:12;16860:52;16947:9;16934:23;16966:31;16991:5;16966:31;:::i;:::-;17016:5;-1:-1:-1;17073:2:21;17058:18;;17045:32;17086:33;17045:32;17086:33;:::i;17156:734::-;17260:6;17268;17276;17284;17292;17345:3;17333:9;17324:7;17320:23;17316:33;17313:53;;;17362:1;17359;17352:12;17313:53;17401:9;17388:23;17420:31;17445:5;17420:31;:::i;:::-;17470:5;-1:-1:-1;17527:2:21;17512:18;;17499:32;17540:33;17499:32;17540:33;:::i;:::-;17592:7;-1:-1:-1;17646:2:21;17631:18;;17618:32;;-1:-1:-1;17697:2:21;17682:18;;17669:32;;-1:-1:-1;17752:3:21;17737:19;;17724:33;-1:-1:-1;;;;;17769:30:21;;17766:50;;;17812:1;17809;17802:12;17766:50;17835:49;17876:7;17867:6;17856:9;17852:22;17835:49;:::i;17895:247::-;17954:6;18007:2;17995:9;17986:7;17982:23;17978:32;17975:52;;;18023:1;18020;18013:12;17975:52;18062:9;18049:23;18081:31;18106:5;18081:31;:::i;18558:380::-;18637:1;18633:12;;;;18680;;;18701:61;;18755:4;18747:6;18743:17;18733:27;;18701:61;18808:2;18800:6;18797:14;18777:18;18774:38;18771:161;;18854:10;18849:3;18845:20;18842:1;18835:31;18889:4;18886:1;18879:15;18917:4;18914:1;18907:15;18771:161;;18558:380;;;:::o;19069:1020::-;19245:3;19274:1;19307:6;19301:13;19337:36;19363:9;19337:36;:::i;:::-;19392:1;19409:18;;;19436:133;;;;19583:1;19578:356;;;;19402:532;;19436:133;-1:-1:-1;;19469:24:21;;19457:37;;19542:14;;19535:22;19523:35;;19514:45;;;-1:-1:-1;19436:133:21;;19578:356;19609:6;19606:1;19599:17;19639:4;19684:2;19681:1;19671:16;19709:1;19723:165;19737:6;19734:1;19731:13;19723:165;;;19815:14;;19802:11;;;19795:35;19858:16;;;;19752:10;;19723:165;;;19727:3;;;19917:6;19912:3;19908:16;19901:23;;19402:532;;;;;19965:6;19959:13;19981:68;20040:8;20035:3;20028:4;20020:6;20016:17;19981:68;:::i;:::-;20065:18;;19069:1020;-1:-1:-1;;;;19069:1020:21:o;20504:127::-;20565:10;20560:3;20556:20;20553:1;20546:31;20596:4;20593:1;20586:15;20620:4;20617:1;20610:15;20636:127;20697:10;20692:3;20688:20;20685:1;20678:31;20728:4;20725:1;20718:15;20752:4;20749:1;20742:15;20768:135;20807:3;20828:17;;;20825:43;;20848:18;;:::i;:::-;-1:-1:-1;20895:1:21;20884:13;;20768:135::o;20908:125::-;20973:9;;;20994:10;;;20991:36;;;21007:18;;:::i;21038:695::-;-1:-1:-1;;;;;21385:6:21;21381:31;21370:9;21363:50;21478:1;21474;21469:3;21465:11;21461:19;21453:6;21449:32;21444:2;21433:9;21429:18;21422:60;21518:6;21513:2;21502:9;21498:18;21491:34;21561:6;21556:2;21545:9;21541:18;21534:34;21605:6;21599:3;21588:9;21584:19;21577:35;21649:3;21643;21632:9;21628:19;21621:32;21344:4;21670:57;21722:3;21711:9;21707:19;21699:6;21670:57;:::i;:::-;21662:65;21038:695;-1:-1:-1;;;;;;;;21038:695:21:o;21738:245::-;21805:6;21858:2;21846:9;21837:7;21833:23;21829:32;21826:52;;;21874:1;21871;21864:12;21826:52;21906:9;21900:16;21925:28;21947:5;21925:28;:::i;21988:545::-;22090:2;22085:3;22082:11;22079:448;;;22126:1;22151:5;22147:2;22140:17;22196:4;22192:2;22182:19;22266:2;22254:10;22250:19;22247:1;22243:27;22237:4;22233:38;22302:4;22290:10;22287:20;22284:47;;;-1:-1:-1;22325:4:21;22284:47;22380:2;22375:3;22371:12;22368:1;22364:20;22358:4;22354:31;22344:41;;22435:82;22453:2;22446:5;22443:13;22435:82;;;22498:17;;;22479:1;22468:13;22435:82;;22079:448;21988:545;;;:::o;22709:1352::-;22835:3;22829:10;-1:-1:-1;;;;;22854:6:21;22851:30;22848:56;;;22884:18;;:::i;:::-;22913:97;23003:6;22963:38;22995:4;22989:11;22963:38;:::i;:::-;22957:4;22913:97;:::i;:::-;23065:4;;23129:2;23118:14;;23146:1;23141:663;;;;23848:1;23865:6;23862:89;;;-1:-1:-1;23917:19:21;;;23911:26;23862:89;-1:-1:-1;;22666:1:21;22662:11;;;22658:24;22654:29;22644:40;22690:1;22686:11;;;22641:57;23964:81;;23111:944;;23141:663;19016:1;19009:14;;;19053:4;19040:18;;-1:-1:-1;;23177:20:21;;;23295:236;23309:7;23306:1;23303:14;23295:236;;;23398:19;;;23392:26;23377:42;;23490:27;;;;23458:1;23446:14;;;;23325:19;;23295:236;;;23299:3;23559:6;23550:7;23547:19;23544:201;;;23620:19;;;23614:26;-1:-1:-1;;23703:1:21;23699:14;;;23715:3;23695:24;23691:37;23687:42;23672:58;23657:74;;23544:201;-1:-1:-1;;;;;23791:1:21;23775:14;;;23771:22;23758:36;;-1:-1:-1;22709:1352:21:o;24066:344::-;24283:6;24272:9;24265:25;24326:2;24321;24310:9;24306:18;24299:30;24246:4;24346:58;24400:2;24389:9;24385:18;24377:6;24346:58;:::i;24776:311::-;24864:19;;;24846:3;-1:-1:-1;;;;;24895:31:21;;24892:51;;;24939:1;24936;24929:12;24892:51;24975:6;24972:1;24968:14;25027:8;25020:5;25013:4;25008:3;25004:14;24991:45;25056:18;;;;25076:4;25052:29;;24776:311;-1:-1:-1;;;24776:311:21:o;25092:296::-;25289:2;25278:9;25271:21;25252:4;25309:73;25378:2;25367:9;25363:18;25355:6;25347;25309:73;:::i;25393:184::-;25463:6;25516:2;25504:9;25495:7;25491:23;25487:32;25484:52;;;25532:1;25529;25522:12;25484:52;-1:-1:-1;25555:16:21;;25393:184;-1:-1:-1;25393:184:21:o;25582:503::-;25770:3;25755:19;;25759:9;25851:6;25728:4;25885:194;25899:4;25896:1;25893:11;25885:194;;;25958:13;;25946:26;;25995:4;26019:12;;;;26054:15;;;;25919:1;25912:9;25885:194;;;25889:3;;;25582:503;;;;:::o;26090:703::-;26170:6;26223:2;26211:9;26202:7;26198:23;26194:32;26191:52;;;26239:1;26236;26229:12;26191:52;26272:9;26266:16;-1:-1:-1;;;;;26297:6:21;26294:30;26291:50;;;26337:1;26334;26327:12;26291:50;26360:22;;26413:4;26405:13;;26401:27;-1:-1:-1;26391:55:21;;26442:1;26439;26432:12;26391:55;26471:2;26465:9;26493:31;26521:2;26493:31;:::i;:::-;26553:2;26547:9;26565:31;26593:2;26585:6;26565:31;:::i;:::-;26620:2;26612:6;26605:18;26660:7;26655:2;26650;26646;26642:11;26638:20;26635:33;26632:53;;;26681:1;26678;26671:12;26632:53;26694:68;26759:2;26754;26746:6;26742:15;26737:2;26733;26729:11;26694:68;:::i;:::-;26781:6;26090:703;-1:-1:-1;;;;;;26090:703:21:o;27612:1072::-;28068:4;28097:3;28127:2;28116:9;28109:21;28147:73;28216:2;28205:9;28201:18;28193:6;28185;28147:73;:::i;:::-;28139:81;;;28239:4;28293:2;28285:6;28280:2;28269:9;28265:18;28252:44;28331:2;28320:9;28316:18;28376:6;28400:1;28410:170;28424:4;28421:1;28418:11;28410:170;;;28497:2;28489:6;28484:3;28471:29;28520:12;;;;28555:15;;;;28444:1;28437:9;28410:170;;;28414:3;;;28631:2;28623:6;28617:3;28606:9;28602:19;28589:45;;28671:6;28665:3;28654:9;28650:19;28643:35;27612:1072;;;;;;;;;:::o;29452:410::-;29654:2;29636:21;;;29693:2;29673:18;;;29666:30;29732:34;29727:2;29712:18;;29705:62;-1:-1:-1;;;29798:2:21;29783:18;;29776:44;29852:3;29837:19;;29452:410::o;32515:401::-;32717:2;32699:21;;;32756:2;32736:18;;;32729:30;32795:34;32790:2;32775:18;;32768:62;-1:-1:-1;;;32861:2:21;32846:18;;32839:35;32906:3;32891:19;;32515:401::o;32921:406::-;33123:2;33105:21;;;33162:2;33142:18;;;33135:30;33201:34;33196:2;33181:18;;33174:62;-1:-1:-1;;;33267:2:21;33252:18;;33245:40;33317:3;33302:19;;32921:406::o;33332:465::-;33589:2;33578:9;33571:21;33552:4;33615:56;33667:2;33656:9;33652:18;33644:6;33615:56;:::i;:::-;33719:9;33711:6;33707:22;33702:2;33691:9;33687:18;33680:50;33747:44;33784:6;33776;33747:44;:::i;33802:561::-;-1:-1:-1;;;;;34099:15:21;;;34081:34;;34151:15;;34146:2;34131:18;;34124:43;34198:2;34183:18;;34176:34;;;34241:2;34226:18;;34219:34;;;34061:3;34284;34269:19;;34262:32;;;34024:4;;34311:46;;34337:19;;34329:6;34311:46;:::i;34368:249::-;34437:6;34490:2;34478:9;34469:7;34465:23;34461:32;34458:52;;;34506:1;34503;34496:12;34458:52;34538:9;34532:16;34557:30;34581:5;34557:30;:::i;34622:179::-;34657:3;34699:1;34681:16;34678:23;34675:120;;;34745:1;34742;34739;34724:23;-1:-1:-1;34782:1:21;34776:8;34771:3;34767:18;34675:120;34622:179;:::o;34806:671::-;34845:3;34887:4;34869:16;34866:26;34863:39;;;34806:671;:::o;34863:39::-;34929:2;34923:9;-1:-1:-1;;34994:16:21;34990:25;;34987:1;34923:9;34966:50;35045:4;35039:11;35069:16;-1:-1:-1;;;;;35175:2:21;35168:4;35160:6;35156:17;35153:25;35148:2;35140:6;35137:14;35134:45;35131:58;;;35182:5;;;;;34806:671;:::o;35131:58::-;35219:6;35213:4;35209:17;35198:28;;35255:3;35249:10;35282:2;35274:6;35271:14;35268:27;;;35288:5;;;;;;34806:671;:::o;35268:27::-;35372:2;35353:16;35347:4;35343:27;35339:36;35332:4;35323:6;35318:3;35314:16;35310:27;35307:69;35304:82;;;35379:5;;;;;;34806:671;:::o;35304:82::-;35395:57;35446:4;35437:6;35429;35425:19;35421:30;35415:4;35395:57;:::i;:::-;-1:-1:-1;35468:3:21;;34806:671;-1:-1:-1;;;;;34806:671:21:o;35903:404::-;36105:2;36087:21;;;36144:2;36124:18;;;36117:30;36183:34;36178:2;36163:18;;36156:62;-1:-1:-1;;;36249:2:21;36234:18;;36227:38;36297:3;36282:19;;35903:404::o;36722:827::-;-1:-1:-1;;;;;37119:15:21;;;37101:34;;37171:15;;37166:2;37151:18;;37144:43;37081:3;37218:2;37203:18;;37196:31;;;37044:4;;37250:57;;37287:19;;37279:6;37250:57;:::i;:::-;37355:9;37347:6;37343:22;37338:2;37327:9;37323:18;37316:50;37389:44;37426:6;37418;37389:44;:::i;:::-;37375:58;;37482:9;37474:6;37470:22;37464:3;37453:9;37449:19;37442:51;37510:33;37536:6;37528;37510:33;:::i",
    "linkReferences": {
      "src/lib/Poseidon.sol": {
        "PoseidonUnit6L": [
          {
            "start": 3249,
            "length": 20
          }
        ]
      },
      "src/lib/SpongePoseidon.sol": {
        "SpongePoseidon": [
          {
            "start": 3136,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "convertUint256ToUint64(uint256)": "825747cb",
    "getSupportedRequests()": "37ba9523",
    "getZKPRequest(uint64)": "c76d0845",
    "initBadge(address,(uint256,uint256,uint256,uint256[],uint256,string),uint256,string)": "5bcca7ee",
    "isApprovedForAll(address,address)": "e985e9c5",
    "locked(uint256)": "b45a3c0e",
    "owner()": "8da5cb5b",
    "proofs(address,uint64)": "b45c0fdf",
    "renounceOwnership()": "715018a6",
    "requestQueries(uint64)": "96bf4741",
    "requestValidators(uint64)": "a8723114",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setZKPRequest(uint64,address,uint256,uint256,uint256,uint256[])": "9abdc645",
    "setZKPRequestRaw(uint64,address,uint256,uint256,uint256,uint256[],uint256)": "9e621bcf",
    "submitZKPResponse(uint64,uint256[],uint256[2],uint256[2][2],uint256[2])": "b68967e2",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenReptationData(uint256)": "76012526",
    "totalSupply()": "18160ddd",
    "transferOwnership(address)": "f2fde38b",
    "uri(uint256)": "0e89341c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ErrLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrNotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPathKey\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"queryHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"_query\",\"type\":\"tuple\"}],\"name\":\"InitBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"MintBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"convertUint256ToUint64\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedRequests\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"arr\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"}],\"name\":\"getZKPRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPathKey\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"queryHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICircuitValidator\",\"name\":\"_validator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPathKey\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"queryHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"_query\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"initBadge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"proofs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"requestQueries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPathKey\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"queryHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"requestValidators\",\"outputs\":[{\"internalType\":\"contract ICircuitValidator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"contract ICircuitValidator\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPathKey\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"name\":\"setZKPRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"contract ICircuitValidator\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPathKey\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"queryHash\",\"type\":\"uint256\"}],\"name\":\"setZKPRequestRaw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"name\":\"submitZKPResponse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenReptationData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expireTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPathKey\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"queryHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"query\",\"type\":\"tuple\"}],\"internalType\":\"struct ZKBadge.Reptation\",\"name\":\"reptation\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Locked(uint256)\":{\"details\":\"If a token is minted and the status is locked, this event should be emitted.\",\"params\":{\"tokenId\":\"The identifier for a token.\"}},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unlocked(uint256)\":{\"details\":\"If a token is minted and the status is unlocked, this event should be emitted.\",\"params\":{\"tokenId\":\"The identifier for a token.\"}}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"locked(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Locked(uint256)\":{\"notice\":\"Emitted when the locking status is changed to locked.\"},\"Unlocked(uint256)\":{\"notice\":\"Emitted when the locking status is changed to unlocked.\"}},\"kind\":\"user\",\"methods\":{\"locked(uint256)\":{\"notice\":\"Returns the locking status of an Soulbound Token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ZKBadge.sol\":\"ZKBadge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb\",\"dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0x4e7bcc6aa9b150e125df8afbfbca5dfb7c92fa4fb01985f2f595ce0c96153cff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75aa1a94e176c23d37e117daf8386cd6301119b1ca5cf521fe22de9ccc13dade\",\"dweb:/ipfs/QmfTfUFGRZ3iNavQgLmj2zNR7Pz2djKV5UPRTmDWnapbGg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/ZKBadge.sol\":{\"keccak256\":\"0xd4a7fcdedb10478b9aaba7baca78fa8cae42856b5678695102da907f83c68e22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a1659524237f52df894e626d7d82ab286b4183bd1d31f05afb889a392650583\",\"dweb:/ipfs/QmPD4T42Tc5gtyjQeFKgQHTqfuXEnvcrQGZvoeZwoEJsKw\"]},\"src/interfaces/ICircuitValidator.sol\":{\"keccak256\":\"0x4915f8e1e0798bdf97d3f607cd85f5223ad6d4905e4fdf4d39ab2b154dcae238\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f546eff63418f53225149db2bf8dc6de07ea4fd66e566106b57b945f62928dca\",\"dweb:/ipfs/QmPVwZWqXRJbrRgirdd4cuFFFnxN8QrwAX9zs6o3vLcs3L\"]},\"src/interfaces/IERC5192.sol\":{\"keccak256\":\"0x9cdc31a8c76505ebab5ab9d5241deb7c0850c2e2c22673d849e51f2d4b3fabf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://305e03eb560cdeee9a1ad1b36bf53bade1564b2e0526203214688c3bfacd8f67\",\"dweb:/ipfs/QmctEsjcSDdn84XTet2e1eVXWf7uoLj9WXB4TpSbjtKsY8\"]},\"src/interfaces/IZKPVerifier.sol\":{\"keccak256\":\"0xd1692e8114a0afc053bb8fb41055c3a992fccc98ce88fd5305c142564cc9a84e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://15496b1f49781de3a566a297712eb144f7ba5ddc3a888cf81263b0c369ed90c2\",\"dweb:/ipfs/QmNYR9VMjth3r5TVB9p4Dc28duA9fAwpzAWa9fF39e6xzh\"]},\"src/lib/BytesLib.sol\":{\"keccak256\":\"0x9c9f897bb957a5a2b70513bdf0a404e4470c5d307e2438e44e88bcaa7f46491c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b462fe1fbafdd2fd1bac7410fd2a34400fb367e3c33c2939a0d9d3a6f9926f2e\",\"dweb:/ipfs/QmYficvpVbPDbzxoQT4vA2rRW9LRAVuLMjyz5QB3usm9uA\"]},\"src/lib/GenesisUtils.sol\":{\"keccak256\":\"0x78cab77c4d0c5f3b4aaf75adf668526081e2c88b4ba2f45b1180adbabaee3596\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4b8075ab058a801ad412e163ca0e65162351415b705cb5c350fbbcdf0f8d2ffb\",\"dweb:/ipfs/QmfWYdUDrXuaUEWYhEesVsak5B6py6GhnDK6tNzyihSJnp\"]},\"src/lib/Poseidon.sol\":{\"keccak256\":\"0xb441289f934523886620044b2ba5c6f5537ba73f5d7103a4472d9c0f2044e523\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://459dc517d335a60ca9657f1e1039e527834128d1b759291bb5d8ea7b2d4e0540\",\"dweb:/ipfs/QmXJN31qLARgs93487jaog28QX2ZGBGWCabbYCt1SJAqhJ\"]},\"src/lib/SpongePoseidon.sol\":{\"keccak256\":\"0xa509e3b08317a27c08851096bf37c78a2fee6d18b23a04b88b1195befe1918f6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e32e509a0643d17e8dfc8395d062dfc924285053037f930f48940339383c2232\",\"dweb:/ipfs/QmdR5j3yknffNXeWnxdrJe492vwcYvSEN9fs5rNHaVUQmq\"]},\"src/verifiers/ZKPVerifier.sol\":{\"keccak256\":\"0x45d582dbc40282b3cedf23ecda2f56d3c438b53c7447b360a1048a97dc2caefc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0095270ac45d1124626bcbe4e085c9da779b2462824fb37eaf5fca812bc16e4\",\"dweb:/ipfs/QmcokkqbNZUvXNkdAmLLXS47akyUFmG3aLuigpjjYrhoAg\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ErrLocked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ErrNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_expireTimestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "_query",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimPathKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "queryHash",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitBadge",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Locked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MintBadge",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unlocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "convertUint256ToUint64",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupportedRequests",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "arr",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getZKPRequest",
          "outputs": [
            {
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimPathKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "queryHash",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ICircuitValidator",
              "name": "_validator",
              "type": "address"
            },
            {
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "_query",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimPathKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "queryHash",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "_expireTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initBadge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proofs",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requestQueries",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimPathKey",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "queryHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requestValidators",
          "outputs": [
            {
              "internalType": "contract ICircuitValidator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "contract ICircuitValidator",
              "name": "validator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimPathKey",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setZKPRequest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "contract ICircuitValidator",
              "name": "validator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimPathKey",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "queryHash",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setZKPRequestRaw",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "uint256[]",
              "name": "inputs",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[2]",
              "name": "a",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[2][2]",
              "name": "b",
              "type": "uint256[2][2]"
            },
            {
              "internalType": "uint256[2]",
              "name": "c",
              "type": "uint256[2]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitZKPResponse",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenReptationData",
          "outputs": [
            {
              "internalType": "struct ZKBadge.Reptation",
              "name": "reptation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "requestId",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "expireTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "struct ICircuitValidator.CircuitQuery",
                  "name": "query",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "schema",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "claimPathKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "operator",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "value",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "queryHash",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "circuitId",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "locked(uint256)": {
            "details": "SBTs assigned to zero address are considered invalid, and queries about them do throw.",
            "params": {
              "tokenId": "The identifier for an SBT."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC1155-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "uri(uint256)": {
            "details": "See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "locked(uint256)": {
            "notice": "Returns the locking status of an Soulbound Token"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ZKBadge.sol": "ZKBadge"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820",
        "urls": [
          "bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb",
          "dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol": {
        "keccak256": "0x4e7bcc6aa9b150e125df8afbfbca5dfb7c92fa4fb01985f2f595ce0c96153cff",
        "urls": [
          "bzz-raw://75aa1a94e176c23d37e117daf8386cd6301119b1ca5cf521fe22de9ccc13dade",
          "dweb:/ipfs/QmfTfUFGRZ3iNavQgLmj2zNR7Pz2djKV5UPRTmDWnapbGg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/ZKBadge.sol": {
        "keccak256": "0xd4a7fcdedb10478b9aaba7baca78fa8cae42856b5678695102da907f83c68e22",
        "urls": [
          "bzz-raw://6a1659524237f52df894e626d7d82ab286b4183bd1d31f05afb889a392650583",
          "dweb:/ipfs/QmPD4T42Tc5gtyjQeFKgQHTqfuXEnvcrQGZvoeZwoEJsKw"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICircuitValidator.sol": {
        "keccak256": "0x4915f8e1e0798bdf97d3f607cd85f5223ad6d4905e4fdf4d39ab2b154dcae238",
        "urls": [
          "bzz-raw://f546eff63418f53225149db2bf8dc6de07ea4fd66e566106b57b945f62928dca",
          "dweb:/ipfs/QmPVwZWqXRJbrRgirdd4cuFFFnxN8QrwAX9zs6o3vLcs3L"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IERC5192.sol": {
        "keccak256": "0x9cdc31a8c76505ebab5ab9d5241deb7c0850c2e2c22673d849e51f2d4b3fabf9",
        "urls": [
          "bzz-raw://305e03eb560cdeee9a1ad1b36bf53bade1564b2e0526203214688c3bfacd8f67",
          "dweb:/ipfs/QmctEsjcSDdn84XTet2e1eVXWf7uoLj9WXB4TpSbjtKsY8"
        ],
        "license": "MIT"
      },
      "src/interfaces/IZKPVerifier.sol": {
        "keccak256": "0xd1692e8114a0afc053bb8fb41055c3a992fccc98ce88fd5305c142564cc9a84e",
        "urls": [
          "bzz-raw://15496b1f49781de3a566a297712eb144f7ba5ddc3a888cf81263b0c369ed90c2",
          "dweb:/ipfs/QmNYR9VMjth3r5TVB9p4Dc28duA9fAwpzAWa9fF39e6xzh"
        ],
        "license": "GPL-3.0"
      },
      "src/lib/BytesLib.sol": {
        "keccak256": "0x9c9f897bb957a5a2b70513bdf0a404e4470c5d307e2438e44e88bcaa7f46491c",
        "urls": [
          "bzz-raw://b462fe1fbafdd2fd1bac7410fd2a34400fb367e3c33c2939a0d9d3a6f9926f2e",
          "dweb:/ipfs/QmYficvpVbPDbzxoQT4vA2rRW9LRAVuLMjyz5QB3usm9uA"
        ],
        "license": "Unlicense"
      },
      "src/lib/GenesisUtils.sol": {
        "keccak256": "0x78cab77c4d0c5f3b4aaf75adf668526081e2c88b4ba2f45b1180adbabaee3596",
        "urls": [
          "bzz-raw://4b8075ab058a801ad412e163ca0e65162351415b705cb5c350fbbcdf0f8d2ffb",
          "dweb:/ipfs/QmfWYdUDrXuaUEWYhEesVsak5B6py6GhnDK6tNzyihSJnp"
        ],
        "license": "GPL-3.0"
      },
      "src/lib/Poseidon.sol": {
        "keccak256": "0xb441289f934523886620044b2ba5c6f5537ba73f5d7103a4472d9c0f2044e523",
        "urls": [
          "bzz-raw://459dc517d335a60ca9657f1e1039e527834128d1b759291bb5d8ea7b2d4e0540",
          "dweb:/ipfs/QmXJN31qLARgs93487jaog28QX2ZGBGWCabbYCt1SJAqhJ"
        ],
        "license": "GPL-3.0"
      },
      "src/lib/SpongePoseidon.sol": {
        "keccak256": "0xa509e3b08317a27c08851096bf37c78a2fee6d18b23a04b88b1195befe1918f6",
        "urls": [
          "bzz-raw://e32e509a0643d17e8dfc8395d062dfc924285053037f930f48940339383c2232",
          "dweb:/ipfs/QmdR5j3yknffNXeWnxdrJe492vwcYvSEN9fs5rNHaVUQmq"
        ],
        "license": "GPL-3.0"
      },
      "src/verifiers/ZKPVerifier.sol": {
        "keccak256": "0x45d582dbc40282b3cedf23ecda2f56d3c438b53c7447b360a1048a97dc2caefc",
        "urls": [
          "bzz-raw://c0095270ac45d1124626bcbe4e085c9da779b2462824fb37eaf5fca812bc16e4",
          "dweb:/ipfs/QmcokkqbNZUvXNkdAmLLXS47akyUFmG3aLuigpjjYrhoAg"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ZKBadge.sol",
    "id": 3429,
    "exportedSymbols": {
      "Address": [
        1931
      ],
      "BytesLib": [
        3909
      ],
      "Context": [
        1953
      ],
      "ERC1155": [
        1335
      ],
      "ERC1155URIStorage": [
        1586
      ],
      "ERC165": [
        2152
      ],
      "GenesisUtils": [
        4309
      ],
      "ICircuitValidator": [
        3479
      ],
      "IERC1155": [
        1457
      ],
      "IERC1155MetadataURI": [
        1601
      ],
      "IERC1155Receiver": [
        1498
      ],
      "IERC165": [
        2164
      ],
      "IERC5192": [
        3500
      ],
      "IZKPVerifier": [
        3576
      ],
      "Math": [
        3029
      ],
      "Ownable": [
        112
      ],
      "Poseidon": [
        4390
      ],
      "PoseidonUnit1L": [
        4401
      ],
      "PoseidonUnit2": [
        4322
      ],
      "PoseidonUnit2L": [
        4412
      ],
      "PoseidonUnit3": [
        4333
      ],
      "PoseidonUnit3L": [
        4423
      ],
      "PoseidonUnit4L": [
        4434
      ],
      "PoseidonUnit5L": [
        4445
      ],
      "PoseidonUnit6L": [
        4456
      ],
      "SpongePoseidon": [
        4652
      ],
      "Strings": [
        2128
      ],
      "ZKBadge": [
        3428
      ],
      "ZKPVerifier": [
        4975
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4497:12",
    "nodes": [
      {
        "id": 3031,
        "nodeType": "PragmaDirective",
        "src": "32:24:12",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 3032,
        "nodeType": "ImportDirective",
        "src": "94:96:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3429,
        "sourceUnit": 1587,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3033,
        "nodeType": "ImportDirective",
        "src": "191:67:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "../lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3429,
        "sourceUnit": 2129,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3034,
        "nodeType": "ImportDirective",
        "src": "259:35:12",
        "nodes": [],
        "absolutePath": "src/interfaces/IERC5192.sol",
        "file": "./interfaces/IERC5192.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3429,
        "sourceUnit": 3501,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3035,
        "nodeType": "ImportDirective",
        "src": "295:44:12",
        "nodes": [],
        "absolutePath": "src/interfaces/ICircuitValidator.sol",
        "file": "./interfaces/ICircuitValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3429,
        "sourceUnit": 3480,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3036,
        "nodeType": "ImportDirective",
        "src": "340:37:12",
        "nodes": [],
        "absolutePath": "src/verifiers/ZKPVerifier.sol",
        "file": "./verifiers/ZKPVerifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3429,
        "sourceUnit": 4976,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3037,
        "nodeType": "ImportDirective",
        "src": "378:32:12",
        "nodes": [],
        "absolutePath": "src/lib/GenesisUtils.sol",
        "file": "./lib/GenesisUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3429,
        "sourceUnit": 4310,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3428,
        "nodeType": "ContractDefinition",
        "src": "412:4116:12",
        "nodes": [
          {
            "id": 3053,
            "nodeType": "StructDefinition",
            "src": "528:153:12",
            "nodes": [],
            "canonicalName": "ZKBadge.Reptation",
            "members": [
              {
                "constant": false,
                "id": 3045,
                "mutability": "mutable",
                "name": "requestId",
                "nameLocation": "562:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 3053,
                "src": "555:16:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 3044,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "555:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3047,
                "mutability": "mutable",
                "name": "issuer",
                "nameLocation": "589:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 3053,
                "src": "581:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3046,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3049,
                "mutability": "mutable",
                "name": "expireTimestamp",
                "nameLocation": "613:15:12",
                "nodeType": "VariableDeclaration",
                "scope": 3053,
                "src": "605:23:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3048,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "605:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3052,
                "mutability": "mutable",
                "name": "query",
                "nameLocation": "669:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 3053,
                "src": "638:36:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_CircuitQuery_$3444_storage_ptr",
                  "typeString": "struct ICircuitValidator.CircuitQuery"
                },
                "typeName": {
                  "id": 3051,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3050,
                    "name": "ICircuitValidator.CircuitQuery",
                    "nameLocations": [
                      "638:17:12",
                      "656:12:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3444,
                    "src": "638:30:12"
                  },
                  "referencedDeclaration": 3444,
                  "src": "638:30:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CircuitQuery_$3444_storage_ptr",
                    "typeString": "struct ICircuitValidator.CircuitQuery"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Reptation",
            "nameLocation": "535:9:12",
            "scope": 3428,
            "visibility": "public"
          },
          {
            "id": 3056,
            "nodeType": "UsingForDirective",
            "src": "687:26:12",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3054,
              "name": "Strings",
              "nameLocations": [
                "693:7:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2128,
              "src": "693:7:12"
            },
            "typeName": {
              "id": 3055,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "705:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3059,
            "nodeType": "VariableDeclaration",
            "src": "719:28:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "isLocked",
            "nameLocation": "732:8:12",
            "scope": 3428,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3057,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "719:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 3058,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "743:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "id": 3061,
            "nodeType": "VariableDeclaration",
            "src": "753:24:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenId",
            "nameLocation": "769:8:12",
            "scope": 3428,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3060,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "753:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 3068,
            "nodeType": "VariableDeclaration",
            "src": "783:38:12",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_UINT64",
            "nameLocation": "799:10:12",
            "scope": 3428,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 3062,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "783:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_18446744073709551615_by_1",
                "typeString": "int_const 18446744073709551615"
              },
              "id": 3067,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_18446744073709551616_by_1",
                  "typeString": "int_const 18446744073709551616"
                },
                "id": 3065,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 3063,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "812:1:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3634",
                  "id": 3064,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "815:2:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_64_by_1",
                    "typeString": "int_const 64"
                  },
                  "value": "64"
                },
                "src": "812:5:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18446744073709551616_by_1",
                  "typeString": "int_const 18446744073709551616"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 3066,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "820:1:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "812:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18446744073709551615_by_1",
                "typeString": "int_const 18446744073709551615"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3073,
            "nodeType": "VariableDeclaration",
            "src": "827:55:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenToReptation",
            "nameLocation": "865:17:12",
            "scope": 3428,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Reptation_$3053_storage_$",
              "typeString": "mapping(uint256 => struct ZKBadge.Reptation)"
            },
            "typeName": {
              "id": 3072,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3069,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "835:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "827:29:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Reptation_$3053_storage_$",
                "typeString": "mapping(uint256 => struct ZKBadge.Reptation)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3071,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3070,
                  "name": "Reptation",
                  "nameLocations": [
                    "846:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3053,
                  "src": "846:9:12"
                },
                "referencedDeclaration": 3053,
                "src": "846:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Reptation_$3053_storage_ptr",
                  "typeString": "struct ZKBadge.Reptation"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 3075,
            "nodeType": "ErrorDefinition",
            "src": "889:18:12",
            "nodes": [],
            "errorSelector": "bd291a95",
            "name": "ErrLocked",
            "nameLocation": "895:9:12",
            "parameters": {
              "id": 3074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "904:2:12"
            }
          },
          {
            "id": 3077,
            "nodeType": "ErrorDefinition",
            "src": "912:20:12",
            "nodes": [],
            "errorSelector": "ae9a63f5",
            "name": "ErrNotFound",
            "nameLocation": "918:11:12",
            "parameters": {
              "id": 3076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:2:12"
            }
          },
          {
            "id": 3086,
            "nodeType": "ModifierDefinition",
            "src": "938:81:12",
            "nodes": [],
            "body": {
              "id": 3085,
              "nodeType": "Block",
              "src": "959:60:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 3079,
                    "name": "isLocked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3059,
                    "src": "973:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3083,
                  "nodeType": "IfStatement",
                  "src": "969:32:12",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3080,
                        "name": "ErrLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3075,
                        "src": "990:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "990:11:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3082,
                    "nodeType": "RevertStatement",
                    "src": "983:18:12"
                  }
                },
                {
                  "id": 3084,
                  "nodeType": "PlaceholderStatement",
                  "src": "1011:1:12"
                }
              ]
            },
            "name": "checkLock",
            "nameLocation": "947:9:12",
            "parameters": {
              "id": 3078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:2:12"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3093,
            "nodeType": "FunctionDefinition",
            "src": "1070:28:12",
            "nodes": [],
            "body": {
              "id": 3092,
              "nodeType": "Block",
              "src": "1096:2:12",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 3089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1092:2:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 3090,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3088,
                  "name": "ERC1155",
                  "nameLocations": [
                    "1084:7:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1335,
                  "src": "1084:7:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1084:11:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:2:12"
            },
            "returnParameters": {
              "id": 3091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:12"
            },
            "scope": 3428,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3101,
            "nodeType": "FunctionDefinition",
            "src": "1152:85:12",
            "nodes": [],
            "body": {
              "id": 3100,
              "nodeType": "Block",
              "src": "1205:32:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3098,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3061,
                    "src": "1222:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3097,
                  "id": 3099,
                  "nodeType": "Return",
                  "src": "1215:15:12"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1161:11:12",
            "parameters": {
              "id": 3094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:2:12"
            },
            "returnParameters": {
              "id": 3097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3101,
                  "src": "1196:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1195:9:12"
            },
            "scope": 3428,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3122,
            "nodeType": "FunctionDefinition",
            "src": "1243:196:12",
            "nodes": [],
            "body": {
              "id": 3121,
              "nodeType": "Block",
              "src": "1334:105:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 3114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3109,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3103,
                        "src": "1351:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3111,
                              "name": "IERC5192",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3500,
                              "src": "1371:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC5192_$3500_$",
                                "typeString": "type(contract IERC5192)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC5192_$3500_$",
                                "typeString": "type(contract IERC5192)"
                              }
                            ],
                            "id": 3110,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1366:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1366:14:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC5192_$3500",
                            "typeString": "type(contract IERC5192)"
                          }
                        },
                        "id": 3113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1381:11:12",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1366:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1351:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3117,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3103,
                          "src": "1420:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 3115,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1396:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ZKBadge_$3428_$",
                            "typeString": "type(contract super ZKBadge)"
                          }
                        },
                        "id": 3116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1402:17:12",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 188,
                        "src": "1396:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 3118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1396:36:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1351:81:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3108,
                  "id": 3120,
                  "nodeType": "Return",
                  "src": "1344:88:12"
                }
              ]
            },
            "baseFunctions": [
              188
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1252:17:12",
            "overrides": {
              "id": 3105,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1310:8:12"
            },
            "parameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3103,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1277:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3122,
                  "src": "1270:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:20:12"
            },
            "returnParameters": {
              "id": 3108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3122,
                  "src": "1328:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3106,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:6:12"
            },
            "scope": 3428,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3139,
            "nodeType": "FunctionDefinition",
            "src": "1445:148:12",
            "nodes": [],
            "body": {
              "id": 3138,
              "nodeType": "Block",
              "src": "1507:86:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3129,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3124,
                      "src": "1521:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 3130,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3061,
                      "src": "1531:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1521:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3135,
                  "nodeType": "IfStatement",
                  "src": "1517:44:12",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3132,
                        "name": "ErrNotFound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3077,
                        "src": "1548:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1548:13:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3134,
                    "nodeType": "RevertStatement",
                    "src": "1541:20:12"
                  }
                },
                {
                  "expression": {
                    "id": 3136,
                    "name": "isLocked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3059,
                    "src": "1578:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3128,
                  "id": 3137,
                  "nodeType": "Return",
                  "src": "1571:15:12"
                }
              ]
            },
            "baseFunctions": [
              3499
            ],
            "functionSelector": "b45a3c0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "locked",
            "nameLocation": "1454:6:12",
            "parameters": {
              "id": 3125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3124,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1469:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3139,
                  "src": "1461:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1460:17:12"
            },
            "returnParameters": {
              "id": 3128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3127,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3139,
                  "src": "1501:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3126,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1500:6:12"
            },
            "scope": 3428,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3152,
            "nodeType": "FunctionDefinition",
            "src": "1599:134:12",
            "nodes": [],
            "body": {
              "id": 3151,
              "nodeType": "Block",
              "src": "1688:45:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3147,
                      "name": "_tokenToReptation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3073,
                      "src": "1705:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Reptation_$3053_storage_$",
                        "typeString": "mapping(uint256 => struct ZKBadge.Reptation storage ref)"
                      }
                    },
                    "id": 3149,
                    "indexExpression": {
                      "id": 3148,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3141,
                      "src": "1723:2:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1705:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Reptation_$3053_storage",
                      "typeString": "struct ZKBadge.Reptation storage ref"
                    }
                  },
                  "functionReturnParameters": 3146,
                  "id": 3150,
                  "nodeType": "Return",
                  "src": "1698:28:12"
                }
              ]
            },
            "functionSelector": "76012526",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenReptationData",
            "nameLocation": "1608:18:12",
            "parameters": {
              "id": 3142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3141,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1635:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3152,
                  "src": "1627:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1626:12:12"
            },
            "returnParameters": {
              "id": 3146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3145,
                  "mutability": "mutable",
                  "name": "reptation",
                  "nameLocation": "1677:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3152,
                  "src": "1660:26:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Reptation_$3053_memory_ptr",
                    "typeString": "struct ZKBadge.Reptation"
                  },
                  "typeName": {
                    "id": 3144,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3143,
                      "name": "Reptation",
                      "nameLocations": [
                        "1660:9:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3053,
                      "src": "1660:9:12"
                    },
                    "referencedDeclaration": 3053,
                    "src": "1660:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Reptation_$3053_storage_ptr",
                      "typeString": "struct ZKBadge.Reptation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1659:28:12"
            },
            "scope": 3428,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3179,
            "nodeType": "FunctionDefinition",
            "src": "1791:230:12",
            "nodes": [],
            "body": {
              "id": 3178,
              "nodeType": "Block",
              "src": "1949:72:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3171,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "1982:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3172,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3156,
                        "src": "1988:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3173,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "1992:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3174,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3160,
                        "src": "2001:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3175,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "2009:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3168,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1959:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ZKBadge_$3428_$",
                          "typeString": "type(contract super ZKBadge)"
                        }
                      },
                      "id": 3170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1965:16:12",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 365,
                      "src": "1959:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1959:55:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3177,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:55:12"
                }
              ]
            },
            "baseFunctions": [
              365
            ],
            "functionSelector": "f242432a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3166,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3165,
                  "name": "checkLock",
                  "nameLocations": [
                    "1935:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3086,
                  "src": "1935:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1935:9:12"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "1800:16:12",
            "overrides": {
              "id": 3164,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1918:8:12"
            },
            "parameters": {
              "id": 3163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3154,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1825:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3179,
                  "src": "1817:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3156,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1839:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3179,
                  "src": "1831:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3158,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1851:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3179,
                  "src": "1843:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3160,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1868:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3179,
                  "src": "1860:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3162,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1889:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3179,
                  "src": "1876:17:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3161,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1816:78:12"
            },
            "returnParameters": {
              "id": 3167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1949:0:12"
            },
            "scope": 3428,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3208,
            "nodeType": "FunctionDefinition",
            "src": "2027:270:12",
            "nodes": [],
            "body": {
              "id": 3207,
              "nodeType": "Block",
              "src": "2223:74:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3200,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3181,
                        "src": "2261:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3201,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "2267:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3202,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3186,
                        "src": "2271:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3203,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3189,
                        "src": "2276:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3204,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3191,
                        "src": "2285:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3197,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2233:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ZKBadge_$3428_$",
                          "typeString": "type(contract super ZKBadge)"
                        }
                      },
                      "id": 3199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2239:21:12",
                      "memberName": "safeBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 405,
                      "src": "2233:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 3205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:57:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3206,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:57:12"
                }
              ]
            },
            "baseFunctions": [
              405
            ],
            "functionSelector": "2eb2c2d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3195,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3194,
                  "name": "checkLock",
                  "nameLocations": [
                    "2213:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3086,
                  "src": "2213:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2213:9:12"
              }
            ],
            "name": "safeBatchTransferFrom",
            "nameLocation": "2036:21:12",
            "overrides": {
              "id": 3193,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2204:8:12"
            },
            "parameters": {
              "id": 3192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3181,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2075:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "2067:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3183,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2097:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "2089:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3186,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2126:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "2109:20:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3184,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2109:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3185,
                    "nodeType": "ArrayTypeName",
                    "src": "2109:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3189,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "2156:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "2139:24:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3187,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2139:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3188,
                    "nodeType": "ArrayTypeName",
                    "src": "2139:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3191,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2186:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "2173:17:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3190,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2057:139:12"
            },
            "returnParameters": {
              "id": 3196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2223:0:12"
            },
            "scope": 3428,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3226,
            "nodeType": "FunctionDefinition",
            "src": "2303:146:12",
            "nodes": [],
            "body": {
              "id": 3225,
              "nodeType": "Block",
              "src": "2389:60:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3221,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3210,
                        "src": "2423:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3222,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3212,
                        "src": "2433:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3218,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2399:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ZKBadge_$3428_$",
                          "typeString": "type(contract super ZKBadge)"
                        }
                      },
                      "id": 3220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2405:17:12",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 309,
                      "src": "2399:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 3223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3224,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:43:12"
                }
              ]
            },
            "baseFunctions": [
              309
            ],
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3215,
                  "name": "checkLock",
                  "nameLocations": [
                    "2379:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3086,
                  "src": "2379:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2379:9:12"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "2312:17:12",
            "overrides": {
              "id": 3214,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2370:8:12"
            },
            "parameters": {
              "id": 3213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3210,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2338:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3226,
                  "src": "2330:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3212,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "2353:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3226,
                  "src": "2348:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3211,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2329:33:12"
            },
            "returnParameters": {
              "id": 3217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:0:12"
            },
            "scope": 3428,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3246,
            "nodeType": "FunctionDefinition",
            "src": "2455:187:12",
            "nodes": [],
            "body": {
              "id": 3245,
              "nodeType": "Block",
              "src": "2531:111:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3234,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3228,
                          "src": "2549:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 3235,
                          "name": "MAX_UINT64",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3068,
                          "src": "2558:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "2549:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c756520746f6f206c6172676520746f2066697420696e2075696e743634",
                        "id": 3237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2570:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1457b3c4c108daf8580941141aca5983ebc8057054dbeecf76d6dd58fe80496",
                          "typeString": "literal_string \"Value too large to fit in uint64\""
                        },
                        "value": "Value too large to fit in uint64"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1457b3c4c108daf8580941141aca5983ebc8057054dbeecf76d6dd58fe80496",
                          "typeString": "literal_string \"Value too large to fit in uint64\""
                        }
                      ],
                      "id": 3233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2541:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2541:64:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3239,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:64:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3242,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3228,
                        "src": "2629:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2622:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 3240,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2622:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:13:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 3232,
                  "id": 3244,
                  "nodeType": "Return",
                  "src": "2615:20:12"
                }
              ]
            },
            "functionSelector": "825747cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertUint256ToUint64",
            "nameLocation": "2464:22:12",
            "parameters": {
              "id": 3229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3228,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2495:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3246,
                  "src": "2487:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2486:15:12"
            },
            "returnParameters": {
              "id": 3232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3231,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3246,
                  "src": "2523:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3230,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2522:8:12"
            },
            "scope": 3428,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3320,
            "nodeType": "FunctionDefinition",
            "src": "2648:780:12",
            "nodes": [],
            "body": {
              "id": 3319,
              "nodeType": "Block",
              "src": "2839:589:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3260,
                      "mutability": "mutable",
                      "name": "_requestId",
                      "nameLocation": "2906:10:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3319,
                      "src": "2898:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2898:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3264,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3261,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3061,
                      "src": "2919:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2930:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2919:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2898:33:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3269,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3260,
                            "src": "2983:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3268,
                          "name": "convertUint256ToUint64",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3246,
                          "src": "2960:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$",
                            "typeString": "function (uint256) pure returns (uint64)"
                          }
                        },
                        "id": 3270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2960:34:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 3271,
                        "name": "_validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3249,
                        "src": "2996:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICircuitValidator_$3479",
                          "typeString": "contract ICircuitValidator"
                        }
                      },
                      {
                        "expression": {
                          "id": 3272,
                          "name": "_query",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3252,
                          "src": "3008:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                            "typeString": "struct ICircuitValidator.CircuitQuery memory"
                          }
                        },
                        "id": 3273,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3015:6:12",
                        "memberName": "schema",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3432,
                        "src": "3008:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3274,
                          "name": "_query",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3252,
                          "src": "3023:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                            "typeString": "struct ICircuitValidator.CircuitQuery memory"
                          }
                        },
                        "id": 3275,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3030:12:12",
                        "memberName": "claimPathKey",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3434,
                        "src": "3023:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3276,
                          "name": "_query",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3252,
                          "src": "3044:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                            "typeString": "struct ICircuitValidator.CircuitQuery memory"
                          }
                        },
                        "id": 3277,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3051:8:12",
                        "memberName": "operator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3436,
                        "src": "3044:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3278,
                          "name": "_query",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3252,
                          "src": "3061:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                            "typeString": "struct ICircuitValidator.CircuitQuery memory"
                          }
                        },
                        "id": 3279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3068:5:12",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3439,
                        "src": "3061:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_contract$_ICircuitValidator_$3479",
                          "typeString": "contract ICircuitValidator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 3265,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2941:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZKBadge_$3428",
                          "typeString": "contract ZKBadge"
                        }
                      },
                      "id": 3267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2946:13:12",
                      "memberName": "setZKPRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4844,
                      "src": "2941:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$_t_contract$_ICircuitValidator_$3479_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint64,contract ICircuitValidator,uint256,uint256,uint256,uint256[] memory) external returns (bool)"
                      }
                    },
                    "id": 3280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:133:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3281,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:133:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3285,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3098:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZKBadge_$3428",
                              "typeString": "contract ZKBadge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZKBadge_$3428",
                              "typeString": "contract ZKBadge"
                            }
                          ],
                          "id": 3284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3090:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3090:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3090:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3287,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3260,
                        "src": "3105:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 3288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3117:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 3289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3120:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 3282,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "3084:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 3290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3084:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3291,
                  "nodeType": "ExpressionStatement",
                  "src": "3084:39:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3293,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3260,
                        "src": "3141:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3294,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3256,
                        "src": "3153:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3292,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1574,
                        668
                      ],
                      "referencedDeclaration": 1574,
                      "src": "3133:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 3295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3133:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3296,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:30:12"
                },
                {
                  "expression": {
                    "id": 3309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3297,
                        "name": "_tokenToReptation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "3173:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Reptation_$3053_storage_$",
                          "typeString": "mapping(uint256 => struct ZKBadge.Reptation storage ref)"
                        }
                      },
                      "id": 3299,
                      "indexExpression": {
                        "id": 3298,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3260,
                        "src": "3191:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3173:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reptation_$3053_storage",
                        "typeString": "struct ZKBadge.Reptation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3302,
                              "name": "_requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3260,
                              "src": "3250:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3301,
                            "name": "convertUint256ToUint64",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3246,
                            "src": "3227:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$",
                              "typeString": "function (uint256) pure returns (uint64)"
                            }
                          },
                          "id": 3303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3227:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3304,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1943,
                            "src": "3271:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3271:12:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3306,
                          "name": "_expireTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3254,
                          "src": "3302:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3307,
                          "name": "_query",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3252,
                          "src": "3327:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                            "typeString": "struct ICircuitValidator.CircuitQuery memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                            "typeString": "struct ICircuitValidator.CircuitQuery memory"
                          }
                        ],
                        "id": 3300,
                        "name": "Reptation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3053,
                        "src": "3205:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Reptation_$3053_storage_ptr_$",
                          "typeString": "type(struct ZKBadge.Reptation storage pointer)"
                        }
                      },
                      "id": 3308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3216:9:12",
                        "3263:6:12",
                        "3285:15:12",
                        "3320:5:12"
                      ],
                      "names": [
                        "requestId",
                        "issuer",
                        "expireTimestamp",
                        "query"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3205:130:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reptation_$3053_memory_ptr",
                        "typeString": "struct ZKBadge.Reptation memory"
                      }
                    },
                    "src": "3173:162:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Reptation_$3053_storage",
                      "typeString": "struct ZKBadge.Reptation storage ref"
                    }
                  },
                  "id": 3310,
                  "nodeType": "ExpressionStatement",
                  "src": "3173:162:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3313,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3260,
                            "src": "3383:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3312,
                          "name": "convertUint256ToUint64",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3246,
                          "src": "3360:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$",
                            "typeString": "function (uint256) pure returns (uint64)"
                          }
                        },
                        "id": 3314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3360:34:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 3315,
                        "name": "_expireTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3254,
                        "src": "3396:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3316,
                        "name": "_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3252,
                        "src": "3414:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                          "typeString": "struct ICircuitValidator.CircuitQuery memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                          "typeString": "struct ICircuitValidator.CircuitQuery memory"
                        }
                      ],
                      "id": 3311,
                      "name": "InitBadge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "3350:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_CircuitQuery_$3444_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct ICircuitValidator.CircuitQuery memory)"
                      }
                    },
                    "id": 3317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:71:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3318,
                  "nodeType": "EmitStatement",
                  "src": "3345:76:12"
                }
              ]
            },
            "functionSelector": "5bcca7ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initBadge",
            "nameLocation": "2657:9:12",
            "parameters": {
              "id": 3257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3249,
                  "mutability": "mutable",
                  "name": "_validator",
                  "nameLocation": "2694:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "2676:28:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICircuitValidator_$3479",
                    "typeString": "contract ICircuitValidator"
                  },
                  "typeName": {
                    "id": 3248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3247,
                      "name": "ICircuitValidator",
                      "nameLocations": [
                        "2676:17:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3479,
                      "src": "2676:17:12"
                    },
                    "referencedDeclaration": 3479,
                    "src": "2676:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICircuitValidator_$3479",
                      "typeString": "contract ICircuitValidator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3252,
                  "mutability": "mutable",
                  "name": "_query",
                  "nameLocation": "2752:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "2714:44:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                    "typeString": "struct ICircuitValidator.CircuitQuery"
                  },
                  "typeName": {
                    "id": 3251,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3250,
                      "name": "ICircuitValidator.CircuitQuery",
                      "nameLocations": [
                        "2714:17:12",
                        "2732:12:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3444,
                      "src": "2714:30:12"
                    },
                    "referencedDeclaration": 3444,
                    "src": "2714:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CircuitQuery_$3444_storage_ptr",
                      "typeString": "struct ICircuitValidator.CircuitQuery"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3254,
                  "mutability": "mutable",
                  "name": "_expireTimestamp",
                  "nameLocation": "2776:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "2768:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3256,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "2816:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "2802:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3255,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2802:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2666:165:12"
            },
            "returnParameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:12"
            },
            "scope": 3428,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3352,
            "nodeType": "FunctionDefinition",
            "src": "3434:342:12",
            "nodes": [],
            "body": {
              "id": 3351,
              "nodeType": "Block",
              "src": "3589:187:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3333
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3333,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "3607:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3351,
                      "src": "3599:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3332,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3599:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3342,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3336,
                          "name": "inputs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3325,
                          "src": "3643:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 3340,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3337,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3328,
                              "src": "3650:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICircuitValidator_$3479",
                                "typeString": "contract ICircuitValidator"
                              }
                            },
                            "id": 3338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3660:22:12",
                            "memberName": "getChallengeInputIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3478,
                            "src": "3650:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure external returns (uint256)"
                            }
                          },
                          "id": 3339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3650:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3643:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3334,
                        "name": "GenesisUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4309,
                        "src": "3614:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GenesisUtils_$4309_$",
                          "typeString": "type(library GenesisUtils)"
                        }
                      },
                      "id": 3335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3627:15:12",
                      "memberName": "int256ToAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4308,
                      "src": "3614:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 3341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:72:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3599:87:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3344,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1943,
                            "src": "3704:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3704:12:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3346,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3333,
                          "src": "3720:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3704:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6164647265737320696e2070726f6f66206973206e6f7420612073656e6465722061646472657373",
                        "id": 3348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3726:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_253cb6ac95c90afe726d0e84299219411a6fb56302f5b7684abd252802ccad60",
                          "typeString": "literal_string \"address in proof is not a sender address\""
                        },
                        "value": "address in proof is not a sender address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_253cb6ac95c90afe726d0e84299219411a6fb56302f5b7684abd252802ccad60",
                          "typeString": "literal_string \"address in proof is not a sender address\""
                        }
                      ],
                      "id": 3343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3696:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3696:73:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3350,
                  "nodeType": "ExpressionStatement",
                  "src": "3696:73:12"
                }
              ]
            },
            "baseFunctions": [
              4961
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeProofSubmit",
            "nameLocation": "3443:18:12",
            "overrides": {
              "id": 3330,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3576:8:12"
            },
            "parameters": {
              "id": 3329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3322,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3352,
                  "src": "3462:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3321,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3325,
                  "mutability": "mutable",
                  "name": "inputs",
                  "nameLocation": "3501:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3352,
                  "src": "3484:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3323,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3484:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3324,
                    "nodeType": "ArrayTypeName",
                    "src": "3484:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3328,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "3527:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3352,
                  "src": "3509:27:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICircuitValidator_$3479",
                    "typeString": "contract ICircuitValidator"
                  },
                  "typeName": {
                    "id": 3327,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3326,
                      "name": "ICircuitValidator",
                      "nameLocations": [
                        "3509:17:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3479,
                      "src": "3509:17:12"
                    },
                    "referencedDeclaration": 3479,
                    "src": "3509:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICircuitValidator_$3479",
                      "typeString": "contract ICircuitValidator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3461:76:12"
            },
            "returnParameters": {
              "id": 3331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3589:0:12"
            },
            "scope": 3428,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3412,
            "nodeType": "FunctionDefinition",
            "src": "3782:522:12",
            "nodes": [],
            "body": {
              "id": 3411,
              "nodeType": "Block",
              "src": "3919:385:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3365,
                      "mutability": "mutable",
                      "name": "prover",
                      "nameLocation": "3937:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3411,
                      "src": "3929:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3364,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3929:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3368,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3366,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1943,
                      "src": "3946:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 3367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:12:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3929:29:12"
                },
                {
                  "assignments": [
                    3370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3370,
                      "mutability": "mutable",
                      "name": "tokenId_",
                      "nameLocation": "3973:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3411,
                      "src": "3968:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3369,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3968:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3375,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3373,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "3992:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 3372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3984:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 3371,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3984:7:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3984:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3968:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3377,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3370,
                          "src": "4020:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 3378,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3061,
                          "src": "4032:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4020:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686520676976656e207265717565737420696420646f6573206e6f74206578697374",
                        "id": 3380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4042:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1084e6d571f34eceb1353d6bb67b74e3c73d120113d10b3729803da2e225e23",
                          "typeString": "literal_string \"the given request id does not exist\""
                        },
                        "value": "the given request id does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1084e6d571f34eceb1353d6bb67b74e3c73d120113d10b3729803da2e225e23",
                          "typeString": "literal_string \"the given request id does not exist\""
                        }
                      ],
                      "id": 3376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4012:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:68:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3382,
                  "nodeType": "ExpressionStatement",
                  "src": "4012:68:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4098:26:12",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3384,
                              "name": "proofs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4670,
                              "src": "4099:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint64 => bool))"
                              }
                            },
                            "id": 3386,
                            "indexExpression": {
                              "id": 3385,
                              "name": "prover",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3365,
                              "src": "4106:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4099:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
                              "typeString": "mapping(uint64 => bool)"
                            }
                          },
                          "id": 3388,
                          "indexExpression": {
                            "id": 3387,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3354,
                            "src": "4114:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4099:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f6f662063616e206e6f74206265207375626d6974746564206d6f7265207468616e206f6e6365",
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4126:43:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c5636987605ef00ebb2eac665411909dea2229752722af9de06c52a928a2cfa",
                          "typeString": "literal_string \"proof can not be submitted more than once\""
                        },
                        "value": "proof can not be submitted more than once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c5636987605ef00ebb2eac665411909dea2229752722af9de06c52a928a2cfa",
                          "typeString": "literal_string \"proof can not be submitted more than once\""
                        }
                      ],
                      "id": 3383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4090:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4090:80:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3392,
                  "nodeType": "ExpressionStatement",
                  "src": "4090:80:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3394,
                        "name": "prover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3365,
                        "src": "4186:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3395,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3370,
                        "src": "4194:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 3396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4204:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 3397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4207:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 3393,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "4180:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 3398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4180:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3399,
                  "nodeType": "ExpressionStatement",
                  "src": "4180:30:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3401,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3370,
                        "src": "4235:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3402,
                        "name": "prover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3365,
                        "src": "4245:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3400,
                      "name": "MintBadge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3427,
                      "src": "4225:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4225:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3404,
                  "nodeType": "EmitStatement",
                  "src": "4220:32:12"
                },
                {
                  "condition": {
                    "id": 3405,
                    "name": "isLocked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3059,
                    "src": "4266:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3410,
                  "nodeType": "IfStatement",
                  "src": "4262:35:12",
                  "trueBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 3407,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3370,
                          "src": "4288:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3406,
                        "name": "Locked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3486,
                        "src": "4281:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 3408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4281:16:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3409,
                    "nodeType": "EmitStatement",
                    "src": "4276:21:12"
                  }
                }
              ]
            },
            "baseFunctions": [
              4974
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterProofSubmit",
            "nameLocation": "3791:17:12",
            "overrides": {
              "id": 3362,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3906:8:12"
            },
            "parameters": {
              "id": 3361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3354,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3816:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3412,
                  "src": "3809:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3353,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3809:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3357,
                  "mutability": "mutable",
                  "name": "inputs",
                  "nameLocation": "3844:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3412,
                  "src": "3827:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3355,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3827:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3356,
                    "nodeType": "ArrayTypeName",
                    "src": "3827:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3360,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "3870:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3412,
                  "src": "3852:27:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICircuitValidator_$3479",
                    "typeString": "contract ICircuitValidator"
                  },
                  "typeName": {
                    "id": 3359,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3358,
                      "name": "ICircuitValidator",
                      "nameLocations": [
                        "3852:17:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3479,
                      "src": "3852:17:12"
                    },
                    "referencedDeclaration": 3479,
                    "src": "3852:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICircuitValidator_$3479",
                      "typeString": "contract ICircuitValidator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3808:72:12"
            },
            "returnParameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3919:0:12"
            },
            "scope": 3428,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3421,
            "nodeType": "EventDefinition",
            "src": "4350:107:12",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "2aba27ed08081e16430401a2939882ee0396bdb45facc7ba9f6fabecdbd044ad",
            "name": "InitBadge",
            "nameLocation": "4356:9:12",
            "parameters": {
              "id": 3420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3414,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4382:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3421,
                  "src": "4366:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4366:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3416,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_expireTimestamp",
                  "nameLocation": "4400:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3421,
                  "src": "4392:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4392:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3419,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_query",
                  "nameLocation": "4449:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3421,
                  "src": "4418:37:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CircuitQuery_$3444_memory_ptr",
                    "typeString": "struct ICircuitValidator.CircuitQuery"
                  },
                  "typeName": {
                    "id": 3418,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3417,
                      "name": "ICircuitValidator.CircuitQuery",
                      "nameLocations": [
                        "4418:17:12",
                        "4436:12:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3444,
                      "src": "4418:30:12"
                    },
                    "referencedDeclaration": 3444,
                    "src": "4418:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CircuitQuery_$3444_storage_ptr",
                      "typeString": "struct ICircuitValidator.CircuitQuery"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4365:91:12"
            }
          },
          {
            "id": 3427,
            "nodeType": "EventDefinition",
            "src": "4463:63:12",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "3bd96af6938a26c69f7495d25501517707ff4dbdeed3f615989247d2176aa2b6",
            "name": "MintBadge",
            "nameLocation": "4469:9:12",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3423,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4495:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3427,
                  "src": "4479:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4479:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3425,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4521:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3427,
                  "src": "4505:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4505:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4478:47:12"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3038,
              "name": "ERC1155URIStorage",
              "nameLocations": [
                "432:17:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1586,
              "src": "432:17:12"
            },
            "id": 3039,
            "nodeType": "InheritanceSpecifier",
            "src": "432:17:12"
          },
          {
            "baseName": {
              "id": 3040,
              "name": "IERC5192",
              "nameLocations": [
                "451:8:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3500,
              "src": "451:8:12"
            },
            "id": 3041,
            "nodeType": "InheritanceSpecifier",
            "src": "451:8:12"
          },
          {
            "baseName": {
              "id": 3042,
              "name": "ZKPVerifier",
              "nameLocations": [
                "461:11:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4975,
              "src": "461:11:12"
            },
            "id": 3043,
            "nodeType": "InheritanceSpecifier",
            "src": "461:11:12"
          }
        ],
        "canonicalName": "ZKBadge",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3428,
          4975,
          112,
          3500,
          1586,
          1335,
          1601,
          1457,
          2152,
          2164,
          1953,
          3576
        ],
        "name": "ZKBadge",
        "nameLocation": "421:7:12",
        "scope": 3429,
        "usedErrors": [
          3075,
          3077
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 12
}