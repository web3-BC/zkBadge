{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ErrLocked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ErrNotFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_expireTimestamp",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "_query",
          "type": "tuple"
        }
      ],
      "name": "InitBadge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "MintBadge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Unlocked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "convertUint256ToUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedRequests",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "arr",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        }
      ],
      "name": "getZKPRequest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICircuitValidator",
          "name": "_validator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "_query",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_expireTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "initBadge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "proofs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "requestExist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "requestQueries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "schema",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slotIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "operator",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "circuitId",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "requestValidators",
      "outputs": [
        {
          "internalType": "contract ICircuitValidator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        },
        {
          "internalType": "contract ICircuitValidator",
          "name": "validator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "query",
          "type": "tuple"
        }
      ],
      "name": "setZKPRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        },
        {
          "internalType": "uint256[]",
          "name": "inputs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        }
      ],
      "name": "submitZKPResponse",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "supportedRequests",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenReptationData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expireTimestamp",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slotIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ],
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "query",
              "type": "tuple"
            }
          ],
          "internalType": "struct ZKBadge.Reptation",
          "name": "reptation",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052600060809081526003906200001a90826200016b565b50600b805460ff191660011790553480156200003557600080fd5b50604080516020810190915260008152620000508162000062565b506200005c3362000074565b62000237565b60026200007082826200016b565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000f157607f821691505b6020821081036200011257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200016657600081815260208120601f850160051c81016020861015620001415750805b601f850160051c820191505b8181101562000162578281556001016200014d565b5050505b505050565b81516001600160401b03811115620001875762000187620000c6565b6200019f81620001988454620000dc565b8462000118565b602080601f831160018114620001d75760008415620001be5750858301515b600019600386901b1c1916600185901b17855562000162565b600085815260208120601f198616915b828110156200020857888601518255948401946001909101908401620001e7565b5085821015620002275787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6131f380620002476000396000f3fe608060405234801561001057600080fd5b50600436106101725760003560e01c8063a22cb465116100de578063c76d084511610097578063f242432a11610071578063f242432a146103ef578063f2fde38b14610402578063fe1ea8ed14610415578063fee207e61461042857600080fd5b8063c76d084514610380578063e985e9c5146103a0578063f1435326146103dc57600080fd5b8063a22cb465146102cd578063a5a40e16146102e0578063a872311414610303578063b45a3c0e1461032c578063b45c0fdf1461033f578063b68967e21461036d57600080fd5b80634e1273f4116101305780634e1273f414610212578063715018a614610232578063760125261461023a578063825747cb1461025a5780638da5cb5b1461028557806396bf4741146102aa57600080fd5b8062fdd58e1461017757806301ffc9a71461019d5780630e89341c146101c057806318160ddd146101e05780632eb2c2d6146101e857806337ba9523146101fd575b600080fd5b61018a61018536600461218a565b61043b565b6040519081526020015b60405180910390f35b6101b06101ab3660046121cc565b6104d4565b6040519015158152602001610194565b6101d36101ce3660046121e9565b6104f9565b6040516101949190612252565b600c5461018a565b6101fb6101f63660046123d3565b6105d9565b005b610205610611565b6040516101949190612480565b6102256102203660046124cd565b61069b565b60405161019491906125d4565b6101fb6107c4565b61024d6102483660046121e9565b6107d8565b604051610194919061263c565b61026d6102683660046121e9565b610945565b6040516001600160401b039091168152602001610194565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610194565b6102bd6102b83660046126aa565b6109a2565b60405161019494939291906126c5565b6101fb6102db366004612702565b610a55565b6101b06102ee3660046126aa565b60096020526000908152604090205460ff1681565b6102926103113660046126aa565b6008602052600090815260409020546001600160a01b031681565b6101b061033a3660046121e9565b610a87565b6101b061034d36600461273b565b600660209081526000928352604080842090915290825290205460ff1681565b6101b061037b3660046127c4565b610ab7565b61039361038e3660046126aa565b610d15565b6040516101949190612891565b6101b06103ae3660046128a4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61026d6103ea3660046121e9565b610e72565b6101fb6103fd3660046128d2565b610eaf565b6101fb61041036600461293a565b610ee0565b6101fb6104233660046129fe565b610f59565b6101b0610436366004612a7d565b611135565b60006001600160a01b0383166104ab5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216635a2d1e0760e11b14806104ce57506104ce826112c9565b60008181526004602052604081208054606092919061051790612adc565b80601f016020809104026020016040519081016040528092919081815260200182805461054390612adc565b80156105905780601f1061056557610100808354040283529160200191610590565b820191906000526020600020905b81548152906001019060200180831161057357829003601f168201915b5050505050905060008151116105ae576105a983611319565b6105d2565b6003816040516020016105c2929190612b16565b6040516020818303038152906040525b9392505050565b600b5460ff16156105fd5760405163bd291a9560e01b815260040160405180910390fd5b61060a85858585856113ad565b5050505050565b6060600a80548060200260200160405190810160405280929190818152602001828054801561069157602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b03168152602001906008019060208260070104928301926001038202915080841161064e5790505b5050505050905090565b606081518351146107005760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016104a2565b600083516001600160401b0381111561071b5761071b612265565b604051908082528060200260200182016040528015610744578160200160208202803683370190505b50905060005b84518110156107bc5761078f85828151811061076857610768612b9d565b602002602001015185838151811061078257610782612b9d565b602002602001015161043b565b8282815181106107a1576107a1612b9d565b60209081029190910101526107b581612bc9565b905061074a565b509392505050565b6107cc6113f2565b6107d6600061144c565b565b6107e06120b5565b6000828152600d6020908152604091829020825160808101845281546001600160401b0381168252600160401b90046001600160a01b031681840152600182015481850152835160a08101855260028301805482526003840154828601526004840154828701526005840180548751818802810188019098528088529396949560608089019694959394908601939092918301828280156108a057602002820191906000526020600020905b81548152602001906001019080831161088c575b505050505081526020016004820180546108b990612adc565b80601f01602080910402602001604051908101604052809291908181526020018280546108e590612adc565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b5050509190925250505090525092915050565b60006001600160401b0382111561099e5760405162461bcd60e51b815260206004820181905260248201527f56616c756520746f6f206c6172676520746f2066697420696e2075696e74363460448201526064016104a2565b5090565b6007602052600090815260409020805460018201546002830154600484018054939492939192916109d290612adc565b80601f01602080910402602001604051908101604052809291908181526020018280546109fe90612adc565b8015610a4b5780601f10610a2057610100808354040283529160200191610a4b565b820191906000526020600020905b815481529060010190602001808311610a2e57829003601f168201915b5050505050905084565b600b5460ff1615610a795760405163bd291a9560e01b815260040160405180910390fd5b610a83828261149e565b5050565b6000600c54821115610aac5760405163ae9a63f560e01b815260040160405180910390fd5b5050600b5460ff1690565b6001600160401b0385166000908152600860205260408120546001600160a01b0316610b365760405162461bcd60e51b815260206004820152602860248201527f76616c696461746f72206973206e6f742073657420666f7220746869732072656044820152671c5d595cdd081a5960c21b60648201526084016104a2565b6001600160401b0386166000908152600760205260408120549003610ba95760405162461bcd60e51b8152602060048201526024808201527f7175657279206973206e6f742073657420666f722074686973207265717565736044820152631d081a5960e21b60648201526084016104a2565b6001600160401b038616600090815260086020526040902054610bd890879087906001600160a01b03166114a9565b6001600160401b03861660009081526008602090815260408083205460079092529182902091516319f8754160e21b81526001600160a01b03909116916367e1d50491610c3091899189918991899190600401612c82565b602060405180830381865afa158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c719190612d6f565b610cbd5760405162461bcd60e51b815260206004820152601b60248201527f70726f6f6620726573706f6e7365206973206e6f742076616c6964000000000060448201526064016104a2565b3360009081526006602090815260408083206001600160401b038a1684528252808320805460ff191660011790556008909152902054610d0990879087906001600160a01b031661159f565b50600195945050505050565b610d476040518060a0016040528060008152602001600081526020016000815260200160608152602001606081525090565b6001600160401b038216600090815260076020908152604091829020825160a081018452815481526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015610dd057602002820191906000526020600020905b815481526020019060010190808311610dbc575b50505050508152602001600482018054610de990612adc565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1590612adc565b8015610e625780601f10610e3757610100808354040283529160200191610e62565b820191906000526020600020905b815481529060010190602001808311610e4557829003601f168201915b5050505050815250509050919050565b600a8181548110610e8257600080fd5b9060005260206000209060049182820401919006600802915054906101000a90046001600160401b031681565b600b5460ff1615610ed35760405163bd291a9560e01b815260040160405180910390fd5b61060a8585858585611730565b610ee86113f2565b6001600160a01b038116610f4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a2565b610f568161144c565b50565b6000600c546001610f6a9190612d8c565b90503063fee207e6610f7b83610945565b87876040518463ffffffff1660e01b8152600401610f9b93929190612d9f565b6020604051808303816000875af1158015610fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fde9190612d6f565b50610ffb3082600160405180602001604052806000815250611775565b6110058183611889565b604051806080016040528061101983610945565b6001600160401b03168152602001336001600160a01b039081168252602080830187905260409283018890526000858152600d82528390208451815486840151909416600160401b026001600160e01b03199094166001600160401b03909116179290921782558383015160018301556060808501518051600285019081558184015160038601559481015160048501559081015180519394919391926110c89260058701929091019061211e565b50608082015160048201906110dd9082612e1d565b5050509050506110ec81610945565b6001600160401b03167f107a25ab6a1875140ef0e9fa07a7eedd55dd4a14047da808ad938cf2d12b22d18486604051611126929190612edc565b60405180910390a25050505050565b600061113f6113f2565b6001600160401b0384166000908152600860205260409020546001600160a01b03166111d957600a80546001818101909255600481047fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160401b0380891660086003909516949094026101000a8481029102199091161790556000908152600960205260409020805460ff191690911790555b60608201516001600160401b0385166000908152600760209081526040909120825161120e936003909201929091019061211e565b506040808301516001600160401b03861660009081526007602052919091206002810191909155608083015160049091019061124a9082612e1d565b506020808301516001600160401b038616600090815260079092526040909120600181019190915582518155608083015160049091019061128b9082612e1d565b50506001600160401b038316600090815260086020526040902080546001600160a01b0384166001600160a01b031990911617905560019392505050565b60006001600160e01b03198216636cdb3d1360e11b14806112fa57506001600160e01b031982166303a24d0760e21b145b806104ce57506301ffc9a760e01b6001600160e01b03198316146104ce565b60606002805461132890612adc565b80601f016020809104026020016040519081016040528092919081815260200182805461135490612adc565b80156113a15780601f10611376576101008083540402835291602001916113a1565b820191906000526020600020905b81548152906001019060200180831161138457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806113c957506113c985336103ae565b6113e55760405162461bcd60e51b81526004016104a290612ef5565b61060a85858585856118e6565b6005546001600160a01b031633146107d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a2565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a83338383611ac3565b600061152e83836001600160a01b0316639f442afa6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115119190612f43565b8151811061152157611521612b9d565b6020026020010151611ba3565b9050336001600160a01b038216146115995760405162461bcd60e51b815260206004820152602860248201527f6164647265737320696e2070726f6f66206973206e6f7420612073656e646572604482015267206164647265737360c01b60648201526084016104a2565b50505050565b600c5433906001600160401b0385169081111561160a5760405162461bcd60e51b815260206004820152602360248201527f74686520676976656e207265717565737420696420646f6573206e6f742065786044820152621a5cdd60ea1b60648201526084016104a2565b6001600160a01b03821660009081526006602090815260408083206001600160401b038916845290915290205460ff16156116995760405162461bcd60e51b815260206004820152602960248201527f70726f6f662063616e206e6f74206265207375626d6974746564206d6f7265206044820152687468616e206f6e636560b81b60648201526084016104a2565b6116b58282600160405180602001604052806000815250611775565b6040516001600160a01b0383169082907f3bd96af6938a26c69f7495d25501517707ff4dbdeed3f615989247d2176aa2b690600090a3600b5460ff161561060a576040518181527f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a16119060200160405180910390a15050505050565b6001600160a01b03851633148061174c575061174c85336103ae565b6117685760405162461bcd60e51b81526004016104a290612ef5565b61060a8585858585611d00565b6001600160a01b0384166117d55760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016104a2565b3360006117e185611e2a565b905060006117ee85611e2a565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290611820908490612d8c565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461188083600089898989611e75565b50505050505050565b60008281526004602052604090206118a18282612e1d565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b6118cd846104f9565b6040516118da9190612252565b60405180910390a25050565b81518351146119485760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104a2565b6001600160a01b03841661196e5760405162461bcd60e51b81526004016104a290612f5c565b3360005b8451811015611a5557600085828151811061198f5761198f612b9d565b6020026020010151905060008583815181106119ad576119ad612b9d565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156119fd5760405162461bcd60e51b81526004016104a290612fa1565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611a3a908490612d8c565b9250508190555050505080611a4e90612bc9565b9050611972565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611aa5929190612feb565b60405180910390a4611abb818787878787611fd0565b505050505050565b816001600160a01b0316836001600160a01b031603611b365760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016104a2565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60006104ce611cf9611cf48460008190506008817eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff16901b6008827fff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff0016901c1790506010817dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff16901b6010827fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000016901c1790506020817bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16901b6020827fffffffff00000000ffffffff00000000ffffffff00000000ffffffff0000000016901c17905060408177ffffffffffffffff0000000000000000ffffffffffffffff16901b60408277ffffffffffffffff0000000000000000ffffffffffffffff1916901c179050608081901b608082901c179050919050565b61208b565b6014015190565b6001600160a01b038416611d265760405162461bcd60e51b81526004016104a290612f5c565b336000611d3285611e2a565b90506000611d3f85611e2a565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015611d825760405162461bcd60e51b81526004016104a290612fa1565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611dbf908490612d8c565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611e1f848a8a8a8a8a611e75565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611e6457611e64612b9d565b602090810291909101015292915050565b6001600160a01b0384163b15611abb5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611eb99089908990889088908890600401613010565b6020604051808303816000875af1925050508015611ef4575060408051601f3d908101601f19168201909252611ef191810190613055565b60015b611fa057611f00613072565b806308c379a003611f395750611f1461308e565b80611f1f5750611f3b565b8060405162461bcd60e51b81526004016104a29190612252565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016104a2565b6001600160e01b0319811663f23a6e6160e01b146118805760405162461bcd60e51b81526004016104a290613117565b6001600160a01b0384163b15611abb5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190612014908990899088908890889060040161315f565b6020604051808303816000875af192505050801561204f575060408051601f3d908101601f1916820190925261204c91810190613055565b60015b61205b57611f00613072565b6001600160e01b0319811663bc197c8160e01b146118805760405162461bcd60e51b81526004016104a290613117565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b604051806080016040528060006001600160401b0316815260200160006001600160a01b03168152602001600081526020016121196040518060a0016040528060008152602001600081526020016000815260200160608152602001606081525090565b905290565b828054828255906000526020600020908101928215612159579160200282015b8281111561215957825182559160200191906001019061213e565b5061099e9291505b8082111561099e5760008155600101612161565b6001600160a01b0381168114610f5657600080fd5b6000806040838503121561219d57600080fd5b82356121a881612175565b946020939093013593505050565b6001600160e01b031981168114610f5657600080fd5b6000602082840312156121de57600080fd5b81356105d2816121b6565b6000602082840312156121fb57600080fd5b5035919050565b60005b8381101561221d578181015183820152602001612205565b50506000910152565b6000815180845261223e816020860160208601612202565b601f01601f19169290920160200192915050565b6020815260006105d26020830184612226565b634e487b7160e01b600052604160045260246000fd5b604081018181106001600160401b038211171561229a5761229a612265565b60405250565b601f8201601f191681016001600160401b03811182821017156122c5576122c5612265565b6040525050565b60006001600160401b038211156122e5576122e5612265565b5060051b60200190565b600082601f83011261230057600080fd5b8135602061230d826122cc565b60405161231a82826122a0565b83815260059390931b850182019282810191508684111561233a57600080fd5b8286015b84811015612355578035835291830191830161233e565b509695505050505050565b600082601f83011261237157600080fd5b81356001600160401b0381111561238a5761238a612265565b6040516123a1601f8301601f1916602001826122a0565b8181528460208386010111156123b657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156123eb57600080fd5b85356123f681612175565b9450602086013561240681612175565b935060408601356001600160401b038082111561242257600080fd5b61242e89838a016122ef565b9450606088013591508082111561244457600080fd5b61245089838a016122ef565b9350608088013591508082111561246657600080fd5b5061247388828901612360565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156124c15783516001600160401b03168352928401929184019160010161249c565b50909695505050505050565b600080604083850312156124e057600080fd5b82356001600160401b03808211156124f757600080fd5b818501915085601f83011261250b57600080fd5b81356020612518826122cc565b60405161252582826122a0565b83815260059390931b850182019282810191508984111561254557600080fd5b948201945b8386101561256c57853561255d81612175565b8252948201949082019061254a565b9650508601359250508082111561258257600080fd5b5061258f858286016122ef565b9150509250929050565b600081518084526020808501945080840160005b838110156125c9578151875295820195908201906001016125ad565b509495945050505050565b6020815260006105d26020830184612599565b8051825260208101516020830152604081015160408301526000606082015160a0606085015261261a60a0850182612599565b9050608083015184820360808601526126338282612226565b95945050505050565b602081526001600160401b03825116602082015260018060a01b036020830151166040820152604082015160608201526000606083015160808084015261268660a08401826125e7565b949350505050565b80356001600160401b03811681146126a557600080fd5b919050565b6000602082840312156126bc57600080fd5b6105d28261268e565b8481528360208201528260408201526080606082015260006126ea6080830184612226565b9695505050505050565b8015158114610f5657600080fd5b6000806040838503121561271557600080fd5b823561272081612175565b91506020830135612730816126f4565b809150509250929050565b6000806040838503121561274e57600080fd5b823561275981612175565b91506127676020840161268e565b90509250929050565b600082601f83011261278157600080fd5b60405161278d8161227b565b80604084018581111561279f57600080fd5b845b818110156127b95780358352602092830192016127a1565b509195945050505050565b600080600080600061014086880312156127dd57600080fd5b6127e68661268e565b94506020808701356001600160401b0381111561280257600080fd5b61280e89828a016122ef565b955050604061281f89828a01612770565b945088609f89011261283057600080fd5b805161283b8161227b565b806101008a018b81111561284e57600080fd5b60808b015b81811015612872576128658d82612770565b8352918501918401612853565b508296506128808c82612770565b955050505050509295509295909350565b6020815260006105d260208301846125e7565b600080604083850312156128b757600080fd5b82356128c281612175565b9150602083013561273081612175565b600080600080600060a086880312156128ea57600080fd5b85356128f581612175565b9450602086013561290581612175565b9350604086013592506060860135915060808601356001600160401b0381111561292e57600080fd5b61247388828901612360565b60006020828403121561294c57600080fd5b81356105d281612175565b600060a0828403121561296957600080fd5b60405160a081016001600160401b03828210818311171561298c5761298c612265565b8160405282935084358352602085013560208401526040850135604084015260608501359150808211156129bf57600080fd5b6129cb868387016122ef565b606084015260808501359150808211156129e457600080fd5b506129f185828601612360565b6080830152505092915050565b60008060008060808587031215612a1457600080fd5b8435612a1f81612175565b935060208501356001600160401b0380821115612a3b57600080fd5b612a4788838901612957565b9450604087013593506060870135915080821115612a6457600080fd5b50612a7187828801612360565b91505092959194509250565b600080600060608486031215612a9257600080fd5b612a9b8461268e565b92506020840135612aab81612175565b915060408401356001600160401b03811115612ac657600080fd5b612ad286828701612957565b9150509250925092565b600181811c90821680612af057607f821691505b602082108103612b1057634e487b7160e01b600052602260045260246000fd5b50919050565b6000808454612b2481612adc565b60018281168015612b3c5760018114612b5157612b80565b60ff1984168752821515830287019450612b80565b8860005260208060002060005b85811015612b775781548a820152908401908201612b5e565b50505082870194505b505050508351612b94818360208801612202565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612bdb57612bdb612bb3565b5060010190565b8060005b6002811015611599578151845260209384019390910190600101612be6565b60008154612c1281612adc565b808552602060018381168015612c2f5760018114612c4957612c77565b60ff1985168884015283151560051b880183019550612c77565b866000528260002060005b85811015612c6f5781548a8201860152908301908401612c54565b890184019650505b505050505092915050565b6000610140808352612c9681840189612599565b90506020612ca681850189612be2565b606084018760005b6002811015612cd557612cc2838351612be2565b6040929092019190830190600101612cae565b505050612ce560e0850187612be2565b83820361012085015284548252600180860154828401526002860154604084015260a0606084018190526003870180549185018290526000908152838120929160c08601905b80831015612d485784548252938301939183019190850190612d2b565b508581036080870152612d5e8160048b01612c05565b9d9c50505050505050505050505050565b600060208284031215612d8157600080fd5b81516105d2816126f4565b808201808211156104ce576104ce612bb3565b6001600160401b03841681526001600160a01b0383166020820152606060408201819052600090612633908301846125e7565b601f821115612e1857600081815260208120601f850160051c81016020861015612df95750805b601f850160051c820191505b81811015611abb57828155600101612e05565b505050565b81516001600160401b03811115612e3657612e36612265565b612e4a81612e448454612adc565b84612dd2565b602080601f831160018114612e7f5760008415612e675750858301515b600019600386901b1c1916600185901b178555611abb565b600085815260208120601f198616915b82811015612eae57888601518255948401946001909101908401612e8f565b5085821015612ecc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061268660408301846125e7565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b600060208284031215612f5557600080fd5b5051919050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000612ffe6040830185612599565b82810360208401526126338185612599565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061304a90830184612226565b979650505050505050565b60006020828403121561306757600080fd5b81516105d2816121b6565b600060033d111561308b5760046000803e5060005160e01c5b90565b600060443d101561309c5790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156130cb57505050505090565b82850191508151818111156130e35750505050505090565b843d87010160208285010111156130fd5750505050505090565b61310c602082860101876122a0565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061318b90830186612599565b828103606084015261319d8186612599565b905082810360808401526131b18185612226565b9897505050505050505056fea26469706673582212205be4ccd432bf7ac93ff0aba50247d569544af86ba11469c383e850d9f45b059a64736f6c63430008130033",
    "sourceMap": "475:28:4:-:0;481:4057:12;475:28:4;-1:-1:-1;481:4057:12;475:28:4;;;;;;;;;:::i;:::-;-1:-1:-1;788:28:12;;;-1:-1:-1;;788:28:12;812:4;788:28;;;1139;;;;;;;;;-1:-1:-1;1107:62:1;;;;;;;;;-1:-1:-1;1107:62:1;;1149:13;1107:62;1149:7;:13::i;:::-;-1:-1:-1;936:32:0;719:10:7;936:18:0;:32::i;:::-;481:4057:12;;8171:86:1;8237:4;:13;8244:6;8237:4;:13;:::i;:::-;;8171:86;:::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:19:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:19;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:19;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:19;;;2580:26;2531:89;-1:-1:-1;;1335:1:19;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:19;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:19;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:19;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:19:o;:::-;481:4057:12;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101725760003560e01c8063a22cb465116100de578063c76d084511610097578063f242432a11610071578063f242432a146103ef578063f2fde38b14610402578063fe1ea8ed14610415578063fee207e61461042857600080fd5b8063c76d084514610380578063e985e9c5146103a0578063f1435326146103dc57600080fd5b8063a22cb465146102cd578063a5a40e16146102e0578063a872311414610303578063b45a3c0e1461032c578063b45c0fdf1461033f578063b68967e21461036d57600080fd5b80634e1273f4116101305780634e1273f414610212578063715018a614610232578063760125261461023a578063825747cb1461025a5780638da5cb5b1461028557806396bf4741146102aa57600080fd5b8062fdd58e1461017757806301ffc9a71461019d5780630e89341c146101c057806318160ddd146101e05780632eb2c2d6146101e857806337ba9523146101fd575b600080fd5b61018a61018536600461218a565b61043b565b6040519081526020015b60405180910390f35b6101b06101ab3660046121cc565b6104d4565b6040519015158152602001610194565b6101d36101ce3660046121e9565b6104f9565b6040516101949190612252565b600c5461018a565b6101fb6101f63660046123d3565b6105d9565b005b610205610611565b6040516101949190612480565b6102256102203660046124cd565b61069b565b60405161019491906125d4565b6101fb6107c4565b61024d6102483660046121e9565b6107d8565b604051610194919061263c565b61026d6102683660046121e9565b610945565b6040516001600160401b039091168152602001610194565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610194565b6102bd6102b83660046126aa565b6109a2565b60405161019494939291906126c5565b6101fb6102db366004612702565b610a55565b6101b06102ee3660046126aa565b60096020526000908152604090205460ff1681565b6102926103113660046126aa565b6008602052600090815260409020546001600160a01b031681565b6101b061033a3660046121e9565b610a87565b6101b061034d36600461273b565b600660209081526000928352604080842090915290825290205460ff1681565b6101b061037b3660046127c4565b610ab7565b61039361038e3660046126aa565b610d15565b6040516101949190612891565b6101b06103ae3660046128a4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61026d6103ea3660046121e9565b610e72565b6101fb6103fd3660046128d2565b610eaf565b6101fb61041036600461293a565b610ee0565b6101fb6104233660046129fe565b610f59565b6101b0610436366004612a7d565b611135565b60006001600160a01b0383166104ab5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216635a2d1e0760e11b14806104ce57506104ce826112c9565b60008181526004602052604081208054606092919061051790612adc565b80601f016020809104026020016040519081016040528092919081815260200182805461054390612adc565b80156105905780601f1061056557610100808354040283529160200191610590565b820191906000526020600020905b81548152906001019060200180831161057357829003601f168201915b5050505050905060008151116105ae576105a983611319565b6105d2565b6003816040516020016105c2929190612b16565b6040516020818303038152906040525b9392505050565b600b5460ff16156105fd5760405163bd291a9560e01b815260040160405180910390fd5b61060a85858585856113ad565b5050505050565b6060600a80548060200260200160405190810160405280929190818152602001828054801561069157602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b03168152602001906008019060208260070104928301926001038202915080841161064e5790505b5050505050905090565b606081518351146107005760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016104a2565b600083516001600160401b0381111561071b5761071b612265565b604051908082528060200260200182016040528015610744578160200160208202803683370190505b50905060005b84518110156107bc5761078f85828151811061076857610768612b9d565b602002602001015185838151811061078257610782612b9d565b602002602001015161043b565b8282815181106107a1576107a1612b9d565b60209081029190910101526107b581612bc9565b905061074a565b509392505050565b6107cc6113f2565b6107d6600061144c565b565b6107e06120b5565b6000828152600d6020908152604091829020825160808101845281546001600160401b0381168252600160401b90046001600160a01b031681840152600182015481850152835160a08101855260028301805482526003840154828601526004840154828701526005840180548751818802810188019098528088529396949560608089019694959394908601939092918301828280156108a057602002820191906000526020600020905b81548152602001906001019080831161088c575b505050505081526020016004820180546108b990612adc565b80601f01602080910402602001604051908101604052809291908181526020018280546108e590612adc565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b5050509190925250505090525092915050565b60006001600160401b0382111561099e5760405162461bcd60e51b815260206004820181905260248201527f56616c756520746f6f206c6172676520746f2066697420696e2075696e74363460448201526064016104a2565b5090565b6007602052600090815260409020805460018201546002830154600484018054939492939192916109d290612adc565b80601f01602080910402602001604051908101604052809291908181526020018280546109fe90612adc565b8015610a4b5780601f10610a2057610100808354040283529160200191610a4b565b820191906000526020600020905b815481529060010190602001808311610a2e57829003601f168201915b5050505050905084565b600b5460ff1615610a795760405163bd291a9560e01b815260040160405180910390fd5b610a83828261149e565b5050565b6000600c54821115610aac5760405163ae9a63f560e01b815260040160405180910390fd5b5050600b5460ff1690565b6001600160401b0385166000908152600860205260408120546001600160a01b0316610b365760405162461bcd60e51b815260206004820152602860248201527f76616c696461746f72206973206e6f742073657420666f7220746869732072656044820152671c5d595cdd081a5960c21b60648201526084016104a2565b6001600160401b0386166000908152600760205260408120549003610ba95760405162461bcd60e51b8152602060048201526024808201527f7175657279206973206e6f742073657420666f722074686973207265717565736044820152631d081a5960e21b60648201526084016104a2565b6001600160401b038616600090815260086020526040902054610bd890879087906001600160a01b03166114a9565b6001600160401b03861660009081526008602090815260408083205460079092529182902091516319f8754160e21b81526001600160a01b03909116916367e1d50491610c3091899189918991899190600401612c82565b602060405180830381865afa158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c719190612d6f565b610cbd5760405162461bcd60e51b815260206004820152601b60248201527f70726f6f6620726573706f6e7365206973206e6f742076616c6964000000000060448201526064016104a2565b3360009081526006602090815260408083206001600160401b038a1684528252808320805460ff191660011790556008909152902054610d0990879087906001600160a01b031661159f565b50600195945050505050565b610d476040518060a0016040528060008152602001600081526020016000815260200160608152602001606081525090565b6001600160401b038216600090815260076020908152604091829020825160a081018452815481526001820154818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015610dd057602002820191906000526020600020905b815481526020019060010190808311610dbc575b50505050508152602001600482018054610de990612adc565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1590612adc565b8015610e625780601f10610e3757610100808354040283529160200191610e62565b820191906000526020600020905b815481529060010190602001808311610e4557829003601f168201915b5050505050815250509050919050565b600a8181548110610e8257600080fd5b9060005260206000209060049182820401919006600802915054906101000a90046001600160401b031681565b600b5460ff1615610ed35760405163bd291a9560e01b815260040160405180910390fd5b61060a8585858585611730565b610ee86113f2565b6001600160a01b038116610f4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a2565b610f568161144c565b50565b6000600c546001610f6a9190612d8c565b90503063fee207e6610f7b83610945565b87876040518463ffffffff1660e01b8152600401610f9b93929190612d9f565b6020604051808303816000875af1158015610fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fde9190612d6f565b50610ffb3082600160405180602001604052806000815250611775565b6110058183611889565b604051806080016040528061101983610945565b6001600160401b03168152602001336001600160a01b039081168252602080830187905260409283018890526000858152600d82528390208451815486840151909416600160401b026001600160e01b03199094166001600160401b03909116179290921782558383015160018301556060808501518051600285019081558184015160038601559481015160048501559081015180519394919391926110c89260058701929091019061211e565b50608082015160048201906110dd9082612e1d565b5050509050506110ec81610945565b6001600160401b03167f107a25ab6a1875140ef0e9fa07a7eedd55dd4a14047da808ad938cf2d12b22d18486604051611126929190612edc565b60405180910390a25050505050565b600061113f6113f2565b6001600160401b0384166000908152600860205260409020546001600160a01b03166111d957600a80546001818101909255600481047fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160401b0380891660086003909516949094026101000a8481029102199091161790556000908152600960205260409020805460ff191690911790555b60608201516001600160401b0385166000908152600760209081526040909120825161120e936003909201929091019061211e565b506040808301516001600160401b03861660009081526007602052919091206002810191909155608083015160049091019061124a9082612e1d565b506020808301516001600160401b038616600090815260079092526040909120600181019190915582518155608083015160049091019061128b9082612e1d565b50506001600160401b038316600090815260086020526040902080546001600160a01b0384166001600160a01b031990911617905560019392505050565b60006001600160e01b03198216636cdb3d1360e11b14806112fa57506001600160e01b031982166303a24d0760e21b145b806104ce57506301ffc9a760e01b6001600160e01b03198316146104ce565b60606002805461132890612adc565b80601f016020809104026020016040519081016040528092919081815260200182805461135490612adc565b80156113a15780601f10611376576101008083540402835291602001916113a1565b820191906000526020600020905b81548152906001019060200180831161138457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806113c957506113c985336103ae565b6113e55760405162461bcd60e51b81526004016104a290612ef5565b61060a85858585856118e6565b6005546001600160a01b031633146107d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a2565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a83338383611ac3565b600061152e83836001600160a01b0316639f442afa6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115119190612f43565b8151811061152157611521612b9d565b6020026020010151611ba3565b9050336001600160a01b038216146115995760405162461bcd60e51b815260206004820152602860248201527f6164647265737320696e2070726f6f66206973206e6f7420612073656e646572604482015267206164647265737360c01b60648201526084016104a2565b50505050565b600c5433906001600160401b0385169081111561160a5760405162461bcd60e51b815260206004820152602360248201527f74686520676976656e207265717565737420696420646f6573206e6f742065786044820152621a5cdd60ea1b60648201526084016104a2565b6001600160a01b03821660009081526006602090815260408083206001600160401b038916845290915290205460ff16156116995760405162461bcd60e51b815260206004820152602960248201527f70726f6f662063616e206e6f74206265207375626d6974746564206d6f7265206044820152687468616e206f6e636560b81b60648201526084016104a2565b6116b58282600160405180602001604052806000815250611775565b6040516001600160a01b0383169082907f3bd96af6938a26c69f7495d25501517707ff4dbdeed3f615989247d2176aa2b690600090a3600b5460ff161561060a576040518181527f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a16119060200160405180910390a15050505050565b6001600160a01b03851633148061174c575061174c85336103ae565b6117685760405162461bcd60e51b81526004016104a290612ef5565b61060a8585858585611d00565b6001600160a01b0384166117d55760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016104a2565b3360006117e185611e2a565b905060006117ee85611e2a565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290611820908490612d8c565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461188083600089898989611e75565b50505050505050565b60008281526004602052604090206118a18282612e1d565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b6118cd846104f9565b6040516118da9190612252565b60405180910390a25050565b81518351146119485760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104a2565b6001600160a01b03841661196e5760405162461bcd60e51b81526004016104a290612f5c565b3360005b8451811015611a5557600085828151811061198f5761198f612b9d565b6020026020010151905060008583815181106119ad576119ad612b9d565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156119fd5760405162461bcd60e51b81526004016104a290612fa1565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611a3a908490612d8c565b9250508190555050505080611a4e90612bc9565b9050611972565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611aa5929190612feb565b60405180910390a4611abb818787878787611fd0565b505050505050565b816001600160a01b0316836001600160a01b031603611b365760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016104a2565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60006104ce611cf9611cf48460008190506008817eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff16901b6008827fff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff0016901c1790506010817dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff16901b6010827fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000016901c1790506020817bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16901b6020827fffffffff00000000ffffffff00000000ffffffff00000000ffffffff0000000016901c17905060408177ffffffffffffffff0000000000000000ffffffffffffffff16901b60408277ffffffffffffffff0000000000000000ffffffffffffffff1916901c179050608081901b608082901c179050919050565b61208b565b6014015190565b6001600160a01b038416611d265760405162461bcd60e51b81526004016104a290612f5c565b336000611d3285611e2a565b90506000611d3f85611e2a565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015611d825760405162461bcd60e51b81526004016104a290612fa1565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611dbf908490612d8c565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611e1f848a8a8a8a8a611e75565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611e6457611e64612b9d565b602090810291909101015292915050565b6001600160a01b0384163b15611abb5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611eb99089908990889088908890600401613010565b6020604051808303816000875af1925050508015611ef4575060408051601f3d908101601f19168201909252611ef191810190613055565b60015b611fa057611f00613072565b806308c379a003611f395750611f1461308e565b80611f1f5750611f3b565b8060405162461bcd60e51b81526004016104a29190612252565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016104a2565b6001600160e01b0319811663f23a6e6160e01b146118805760405162461bcd60e51b81526004016104a290613117565b6001600160a01b0384163b15611abb5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190612014908990899088908890889060040161315f565b6020604051808303816000875af192505050801561204f575060408051601f3d908101601f1916820190925261204c91810190613055565b60015b61205b57611f00613072565b6001600160e01b0319811663bc197c8160e01b146118805760405162461bcd60e51b81526004016104a290613117565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b604051806080016040528060006001600160401b0316815260200160006001600160a01b03168152602001600081526020016121196040518060a0016040528060008152602001600081526020016000815260200160608152602001606081525090565b905290565b828054828255906000526020600020908101928215612159579160200282015b8281111561215957825182559160200191906001019061213e565b5061099e9291505b8082111561099e5760008155600101612161565b6001600160a01b0381168114610f5657600080fd5b6000806040838503121561219d57600080fd5b82356121a881612175565b946020939093013593505050565b6001600160e01b031981168114610f5657600080fd5b6000602082840312156121de57600080fd5b81356105d2816121b6565b6000602082840312156121fb57600080fd5b5035919050565b60005b8381101561221d578181015183820152602001612205565b50506000910152565b6000815180845261223e816020860160208601612202565b601f01601f19169290920160200192915050565b6020815260006105d26020830184612226565b634e487b7160e01b600052604160045260246000fd5b604081018181106001600160401b038211171561229a5761229a612265565b60405250565b601f8201601f191681016001600160401b03811182821017156122c5576122c5612265565b6040525050565b60006001600160401b038211156122e5576122e5612265565b5060051b60200190565b600082601f83011261230057600080fd5b8135602061230d826122cc565b60405161231a82826122a0565b83815260059390931b850182019282810191508684111561233a57600080fd5b8286015b84811015612355578035835291830191830161233e565b509695505050505050565b600082601f83011261237157600080fd5b81356001600160401b0381111561238a5761238a612265565b6040516123a1601f8301601f1916602001826122a0565b8181528460208386010111156123b657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156123eb57600080fd5b85356123f681612175565b9450602086013561240681612175565b935060408601356001600160401b038082111561242257600080fd5b61242e89838a016122ef565b9450606088013591508082111561244457600080fd5b61245089838a016122ef565b9350608088013591508082111561246657600080fd5b5061247388828901612360565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156124c15783516001600160401b03168352928401929184019160010161249c565b50909695505050505050565b600080604083850312156124e057600080fd5b82356001600160401b03808211156124f757600080fd5b818501915085601f83011261250b57600080fd5b81356020612518826122cc565b60405161252582826122a0565b83815260059390931b850182019282810191508984111561254557600080fd5b948201945b8386101561256c57853561255d81612175565b8252948201949082019061254a565b9650508601359250508082111561258257600080fd5b5061258f858286016122ef565b9150509250929050565b600081518084526020808501945080840160005b838110156125c9578151875295820195908201906001016125ad565b509495945050505050565b6020815260006105d26020830184612599565b8051825260208101516020830152604081015160408301526000606082015160a0606085015261261a60a0850182612599565b9050608083015184820360808601526126338282612226565b95945050505050565b602081526001600160401b03825116602082015260018060a01b036020830151166040820152604082015160608201526000606083015160808084015261268660a08401826125e7565b949350505050565b80356001600160401b03811681146126a557600080fd5b919050565b6000602082840312156126bc57600080fd5b6105d28261268e565b8481528360208201528260408201526080606082015260006126ea6080830184612226565b9695505050505050565b8015158114610f5657600080fd5b6000806040838503121561271557600080fd5b823561272081612175565b91506020830135612730816126f4565b809150509250929050565b6000806040838503121561274e57600080fd5b823561275981612175565b91506127676020840161268e565b90509250929050565b600082601f83011261278157600080fd5b60405161278d8161227b565b80604084018581111561279f57600080fd5b845b818110156127b95780358352602092830192016127a1565b509195945050505050565b600080600080600061014086880312156127dd57600080fd5b6127e68661268e565b94506020808701356001600160401b0381111561280257600080fd5b61280e89828a016122ef565b955050604061281f89828a01612770565b945088609f89011261283057600080fd5b805161283b8161227b565b806101008a018b81111561284e57600080fd5b60808b015b81811015612872576128658d82612770565b8352918501918401612853565b508296506128808c82612770565b955050505050509295509295909350565b6020815260006105d260208301846125e7565b600080604083850312156128b757600080fd5b82356128c281612175565b9150602083013561273081612175565b600080600080600060a086880312156128ea57600080fd5b85356128f581612175565b9450602086013561290581612175565b9350604086013592506060860135915060808601356001600160401b0381111561292e57600080fd5b61247388828901612360565b60006020828403121561294c57600080fd5b81356105d281612175565b600060a0828403121561296957600080fd5b60405160a081016001600160401b03828210818311171561298c5761298c612265565b8160405282935084358352602085013560208401526040850135604084015260608501359150808211156129bf57600080fd5b6129cb868387016122ef565b606084015260808501359150808211156129e457600080fd5b506129f185828601612360565b6080830152505092915050565b60008060008060808587031215612a1457600080fd5b8435612a1f81612175565b935060208501356001600160401b0380821115612a3b57600080fd5b612a4788838901612957565b9450604087013593506060870135915080821115612a6457600080fd5b50612a7187828801612360565b91505092959194509250565b600080600060608486031215612a9257600080fd5b612a9b8461268e565b92506020840135612aab81612175565b915060408401356001600160401b03811115612ac657600080fd5b612ad286828701612957565b9150509250925092565b600181811c90821680612af057607f821691505b602082108103612b1057634e487b7160e01b600052602260045260246000fd5b50919050565b6000808454612b2481612adc565b60018281168015612b3c5760018114612b5157612b80565b60ff1984168752821515830287019450612b80565b8860005260208060002060005b85811015612b775781548a820152908401908201612b5e565b50505082870194505b505050508351612b94818360208801612202565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612bdb57612bdb612bb3565b5060010190565b8060005b6002811015611599578151845260209384019390910190600101612be6565b60008154612c1281612adc565b808552602060018381168015612c2f5760018114612c4957612c77565b60ff1985168884015283151560051b880183019550612c77565b866000528260002060005b85811015612c6f5781548a8201860152908301908401612c54565b890184019650505b505050505092915050565b6000610140808352612c9681840189612599565b90506020612ca681850189612be2565b606084018760005b6002811015612cd557612cc2838351612be2565b6040929092019190830190600101612cae565b505050612ce560e0850187612be2565b83820361012085015284548252600180860154828401526002860154604084015260a0606084018190526003870180549185018290526000908152838120929160c08601905b80831015612d485784548252938301939183019190850190612d2b565b508581036080870152612d5e8160048b01612c05565b9d9c50505050505050505050505050565b600060208284031215612d8157600080fd5b81516105d2816126f4565b808201808211156104ce576104ce612bb3565b6001600160401b03841681526001600160a01b0383166020820152606060408201819052600090612633908301846125e7565b601f821115612e1857600081815260208120601f850160051c81016020861015612df95750805b601f850160051c820191505b81811015611abb57828155600101612e05565b505050565b81516001600160401b03811115612e3657612e36612265565b612e4a81612e448454612adc565b84612dd2565b602080601f831160018114612e7f5760008415612e675750858301515b600019600386901b1c1916600185901b178555611abb565b600085815260208120601f198616915b82811015612eae57888601518255948401946001909101908401612e8f565b5085821015612ecc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061268660408301846125e7565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b600060208284031215612f5557600080fd5b5051919050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000612ffe6040830185612599565b82810360208401526126338185612599565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061304a90830184612226565b979650505050505050565b60006020828403121561306757600080fd5b81516105d2816121b6565b600060033d111561308b5760046000803e5060005160e01c5b90565b600060443d101561309c5790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156130cb57505050505090565b82850191508151818111156130e35750505050505090565b843d87010160208285010111156130fd5750505050505090565b61310c602082860101876122a0565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061318b90830186612599565b828103606084015261319d8186612599565b905082810360808401526131b18185612226565b9897505050505050505056fea26469706673582212205be4ccd432bf7ac93ff0aba50247d569544af86ba11469c383e850d9f45b059a64736f6c63430008130033",
    "sourceMap": "481:4057:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:1;;;;;;:::i;:::-;;:::i;:::-;;;616:25:19;;;604:2;589:18;2185:227:1;;;;;;;;1312:196:12;;;;;;:::i;:::-;;:::i;:::-;;;1203:14:19;;1196:22;1178:41;;1166:2;1151:18;1312:196:12;1038:187:19;1322:346:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1221:85:12:-;1291:8;;1221:85;;2096:270;;;;;;:::i;:::-;;:::i;:::-;;2900:117:18;;;:::i;:::-;;;;;;;:::i;2569:508:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1831:101:0:-;;;:::i;1668:134:12:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2524:187::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;9285:31:19;;;9267:50;;9255:2;9240:18;2524:187:12;9123:200:19;1201:85:0;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;9492:32:19;;;9474:51;;9462:2;9447:18;1201:85:0;9328:203:19;545:71:18;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2372:146:12:-;;;;;;:::i;:::-;;:::i;689:43:18:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;622:61;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;622:61:18;;;1514:148:12;;;;;;:::i;:::-;;:::i;482:57:18:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;841:930;;;;;;:::i;:::-;;:::i;1819:161::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3365:166:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:27:1;;;3464:4;3487:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3365:166;738:33:18;;;;;;:::i;:::-;;:::i;1860:230:12:-;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;2717:721:12:-;;;;;;:::i;:::-;;:::i;2028:817:18:-;;;;;;:::i;:::-;;:::i;2185:227:1:-;2271:7;-1:-1:-1;;;;;2298:21:1;;2290:76;;;;-1:-1:-1;;;2290:76:1;;17379:2:19;2290:76:1;;;17361:21:19;17418:2;17398:18;;;17391:30;17457:34;17437:18;;;17430:62;-1:-1:-1;;;17508:18:19;;;17501:40;17558:19;;2290:76:1;;;;;;;;;-1:-1:-1;2383:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:1;;;;;;;;;;2185:227;;;;;:::o;1312:196:12:-;1397:4;-1:-1:-1;;;;;;1420:41:12;;-1:-1:-1;;;1420:41:12;;:81;;;1465:36;1489:11;1465:23;:36::i;1322:346:4:-;1415:22;1440:19;;;:10;:19;;;;;1415:44;;1390:13;;1415:22;1440:19;1415:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:1;1573:8;1567:22;:26;:94;;1643:18;1653:7;1643:9;:18::i;:::-;1567:94;;;1620:8;1630;1603:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1567:94;1560:101;1322:346;-1:-1:-1;;;1322:346:4:o;2096:270:12:-;1042:8;;;;1038:32;;;1059:11;;-1:-1:-1;;;1059:11:12;;;;;;;;;;;1038:32;2302:57:::1;2330:4;2336:2;2340:3;2345:7;2354:4;2302:27;:57::i;:::-;2096:270:::0;;;;;:::o;2900:117:18:-;2955:19;2993:17;2986:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2986:24:18;-1:-1:-1;;;;;2986:24:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2900:117;:::o;2569:508:1:-;2720:16;2779:3;:10;2760:8;:15;:29;2752:83;;;;-1:-1:-1;;;2752:83:1;;19326:2:19;2752:83:1;;;19308:21:19;19365:2;19345:18;;;19338:30;19404:34;19384:18;;;19377:62;-1:-1:-1;;;19455:18:19;;;19448:39;19504:19;;2752:83:1;19124:405:19;2752:83:1;2846:30;2893:8;:15;-1:-1:-1;;;;;2879:30:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2879:30:1;;2846:63;;2925:9;2920:120;2944:8;:15;2940:1;:19;2920:120;;;2999:30;3009:8;3018:1;3009:11;;;;;;;;:::i;:::-;;;;;;;3022:3;3026:1;3022:6;;;;;;;;:::i;:::-;;;;;;;2999:9;:30::i;:::-;2980:13;2994:1;2980:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2961:3;;;:::i;:::-;;;2920:120;;;-1:-1:-1;3057:13:1;2569:508;-1:-1:-1;;;2569:508:1:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1668:134:12:-;1729:26;;:::i;:::-;1774:21;;;;:17;:21;;;;;;;;;1767:28;;;;;;;;;-1:-1:-1;;;;;1767:28:12;;;;-1:-1:-1;;;1767:28:12;;-1:-1:-1;;;;;1767:28:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:21;;1767:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1767:28:12;;;;-1:-1:-1;;;1767:28:12;;-1:-1:-1;1767:28:12;1668:134;-1:-1:-1;;1668:134:12:o;2524:187::-;2592:6;-1:-1:-1;;;;;2618:19:12;;;2610:64;;;;-1:-1:-1;;;2610:64:12;;20140:2:19;2610:64:12;;;20122:21:19;;;20159:18;;;20152:30;20218:34;20198:18;;;20191:62;20270:18;;2610:64:12;19938:356:19;2610:64:12;-1:-1:-1;2698:5:12;2524:187::o;545:71:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2372:146:12:-;1042:8;;;;1038:32;;;1059:11;;-1:-1:-1;;;1059:11:12;;;;;;;;;;;1038:32;2468:43:::1;2492:8;2502;2468:23;:43::i;:::-;2372:146:::0;;:::o;1514:148::-;1570:4;1600:8;;1590:7;:18;1586:44;;;1617:13;;-1:-1:-1;;;1617:13:12;;;;;;;;;;;1586:44;-1:-1:-1;;1647:8:12;;;;;1514:148::o;841:930:18:-;-1:-1:-1;;;;;1087:28:18;;1050:4;1087:28;;;:17;:28;;;;;;-1:-1:-1;;;;;1087:28:18;1066:136;;;;-1:-1:-1;;;1066:136:18;;20501:2:19;1066:136:18;;;20483:21:19;20540:2;20520:18;;;20513:30;20579:34;20559:18;;;20552:62;-1:-1:-1;;;20630:18:19;;;20623:38;20678:19;;1066:136:18;20299:404:19;1066:136:18;-1:-1:-1;;;;;1240:25:18;;;;;;:14;:25;;;;;:32;:37;;1232:86;;;;-1:-1:-1;;;1232:86:18;;20910:2:19;1232:86:18;;;20892:21:19;20949:2;20929:18;;;20922:30;20988:34;20968:18;;;20961:62;-1:-1:-1;;;21039:18:19;;;21032:34;21083:19;;1232:86:18;20708:400:19;1232:86:18;-1:-1:-1;;;;;1383:28:18;;;;;;:17;:28;;;;;;1345:67;;1364:9;;1375:6;;-1:-1:-1;;;;;1383:28:18;1345:18;:67::i;:::-;-1:-1:-1;;;;;1444:28:18;;;;;;:17;:28;;;;;;;;;1497:14;:25;;;;;;;1444:79;;-1:-1:-1;;;1444:79:18;;-1:-1:-1;;;;;1444:28:18;;;;:35;;:79;;1480:6;;1488:1;;1491;;1494;;1497:25;1444:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1423:153;;;;-1:-1:-1;;;1423:153:18;;24671:2:19;1423:153:18;;;24653:21:19;24710:2;24690:18;;;24683:30;24749:29;24729:18;;;24722:57;24796:18;;1423:153:18;24469:351:19;1423:153:18;1594:10;1587:18;;;;:6;:18;;;;;;;;-1:-1:-1;;;;;1587:29:18;;;;;;;;;:36;;-1:-1:-1;;1587:36:18;1619:4;1587:36;;;1714:17;:28;;;;;;1677:66;;1606:9;;1706:6;;-1:-1:-1;;;;;1714:28:18;1677:17;:66::i;:::-;-1:-1:-1;1760:4:18;841:930;;;;;;;:::o;1819:161::-;1892:37;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1892:37:18;-1:-1:-1;;;;;1948:25:18;;;;;;:14;:25;;;;;;;;;1941:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1948:25;;1941:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:161;;;:::o;738:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;738:33:18;;:::o;1860:230:12:-;1042:8;;;;1038:32;;;1059:11;;-1:-1:-1;;;1059:11:12;;;;;;;;;;;1038:32;2028:55:::1;2051:4;2057:2;2061:7;2070:6;2078:4;2028:22;:55::i;2081:198:0:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;25027:2:19;2161:73:0::1;::::0;::::1;25009:21:19::0;25066:2;25046:18;;;25039:30;25105:34;25085:18;;;25078:62;-1:-1:-1;;;25156:18:19;;;25149:36;25202:19;;2161:73:0::1;24825:402:19::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2717:721:12:-;2967:18;2988:8;;2999:1;2988:12;;;;:::i;:::-;2967:33;-1:-1:-1;3010:4:12;:18;3029:34;2967:33;3029:22;:34::i;:::-;3065:10;3077:6;3010:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3094:39;3108:4;3115:10;3127:1;3094:39;;;;;;;;;;;;:5;:39::i;:::-;3143:30;3151:10;3163:9;3143:7;:30::i;:::-;3215:130;;;;;;;;3237:34;3260:10;3237:22;:34::i;:::-;-1:-1:-1;;;;;3215:130:12;;;;;719:10:7;-1:-1:-1;;;;;3215:130:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;3183:29:12;;;:17;:29;;;;;:162;;;;;;;;;;;-1:-1:-1;;;3183:162:12;-1:-1:-1;;;;;;3183:162:12;;;-1:-1:-1;;;;;3183:162:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;:162;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3183:162:12;;;;;;;;;;;;:::i;:::-;;;;;;;3370:34;3393:10;3370:22;:34::i;:::-;-1:-1:-1;;;;;3360:71:12;;3406:16;3424:6;3360:71;;;;;;;:::i;:::-;;;;;;;;2908:530;2717:721;;;;:::o;2028:817:18:-;2212:4;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2236:28:18;::::1;2294:4;2236:28:::0;;;:17:::1;:28;::::0;;;;;-1:-1:-1;;;;;2236:28:18::1;2232:172;;2316:17;:33:::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2316:33:18;;::::1;;::::0;;;;;;;::::1;;;::::0;;::::1;::::0;::::1;;::::0;;::::1;;::::0;;-1:-1:-1;2363:23:18;;;:12:::1;2316:33;2363:23:::0;;;;:30;;-1:-1:-1;;2363:30:18::1;::::0;;::::1;::::0;;2232:172:::1;2447:11;::::0;::::1;::::0;-1:-1:-1;;;;;2413:25:18;::::1;;::::0;;;:14:::1;:25;::::0;;;;;;;:45;;::::1;::::0;:31:::1;::::0;;::::1;::::0;:45;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2505:14:18::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2468:25:18;::::1;;::::0;;;:14:::1;:25;::::0;;;;;:34:::1;::::0;::::1;:51:::0;;;;2567:15:::1;::::0;::::1;::::0;2529:35:::1;::::0;;::::1;::::0;:53:::1;::::0;:35;:53:::1;:::i;:::-;-1:-1:-1::0;2630:15:18::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2592:25:18;::::1;;::::0;;;:14:::1;:25:::0;;;;;;;:35:::1;::::0;::::1;:53:::0;;;;2690:12;;2655:47;;2751:15:::1;::::0;::::1;::::0;2713:35:::1;::::0;;::::1;::::0;:53:::1;::::0;:35;:53:::1;:::i;:::-;-1:-1:-1::0;;;;;;;2777:28:18;::::1;;::::0;;;:17:::1;:28;::::0;;;;:40;;-1:-1:-1;;;;;2777:40:18;::::1;-1:-1:-1::0;;;;;;2777:40:18;;::::1;;::::0;;;2028:817;;;;;:::o;1236:305:1:-;1338:4;-1:-1:-1;;;;;;1373:41:1;;-1:-1:-1;;;1373:41:1;;:109;;-1:-1:-1;;;;;;;1430:52:1;;-1:-1:-1;;;1430:52:1;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1498:36:1;829:155:9;1940:103:1;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4064:426::-;-1:-1:-1;;;;;4289:20:1;;719:10:7;4289:20:1;;:60;;-1:-1:-1;4313:36:1;4330:4;719:10:7;3365:166:1;:::i;4313:36::-;4268:153;;;;-1:-1:-1;;;4268:153:1;;;;;;;:::i;:::-;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:7;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;28901:2:19;1414:68:0;;;28883:21:19;;;28920:18;;;28913:30;28979:34;28959:18;;;28952:62;29031:18;;1414:68:0;28699:356:19;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;3145:153:1:-;3239:52;719:10:7;3272:8:1;3282;3239:18;:52::i;3444:342:12:-;3609:12;3624:72;3653:6;3660:9;-1:-1:-1;;;;;3660:32:12;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3653:42;;;;;;;;:::i;:::-;;;;;;;3624:28;:72::i;:::-;3609:87;-1:-1:-1;719:10:7;-1:-1:-1;;;;;3714:20:12;;;3706:73;;;;-1:-1:-1;;;3706:73:12;;29451:2:19;3706:73:12;;;29433:21:19;29490:2;29470:18;;;29463:30;29529:34;29509:18;;;29502:62;-1:-1:-1;;;29580:18:19;;;29573:38;29628:19;;3706:73:12;29249:404:19;3706:73:12;3599:187;3444:342;;;:::o;3792:522::-;4042:8;;719:10:7;;-1:-1:-1;;;;;3994:18:12;;;4030:20;;;4022:68;;;;-1:-1:-1;;;4022:68:12;;29860:2:19;4022:68:12;;;29842:21:19;29899:2;29879:18;;;29872:30;29938:34;29918:18;;;29911:62;-1:-1:-1;;;29989:18:19;;;29982:33;30032:19;;4022:68:12;29658:399:19;4022:68:12;-1:-1:-1;;;;;4109:14:12;;;;;;:6;:14;;;;;;;;-1:-1:-1;;;;;4109:25:12;;;;;;;;;;;;4108:26;4100:80;;;;-1:-1:-1;;;4100:80:12;;30264:2:19;4100:80:12;;;30246:21:19;30303:2;30283:18;;;30276:30;30342:34;30322:18;;;30315:62;-1:-1:-1;;;30393:18:19;;;30386:39;30442:19;;4100:80:12;30062:405:19;4100:80:12;4190:30;4196:6;4204:8;4214:1;4190:30;;;;;;;;;;;;:5;:30::i;:::-;4235:27;;-1:-1:-1;;;;;4235:27:12;;;4245:8;;4235:27;;;;;4276:8;;;;4272:35;;;4291:16;;616:25:19;;;4291:16:12;;604:2:19;589:18;4291:16:12;;;;;;;3929:385;;3792:522;;;:::o;3598:394:1:-;-1:-1:-1;;;;;3798:20:1;;719:10:7;3798:20:1;;:60;;-1:-1:-1;3822:36:1;3839:4;719:10:7;3365:166:1;:::i;3822:36::-;3777:153;;;;-1:-1:-1;;;3777:153:1;;;;;;;:::i;:::-;3940:45;3958:4;3964:2;3968;3972:6;3980:4;3940:17;:45::i;8630:709::-;-1:-1:-1;;;;;8777:16:1;;8769:62;;;;-1:-1:-1;;;8769:62:1;;30674:2:19;8769:62:1;;;30656:21:19;30713:2;30693:18;;;30686:30;30752:34;30732:18;;;30725:62;-1:-1:-1;;;30803:18:19;;;30796:31;30844:19;;8769:62:1;30472:397:19;8769:62:1;719:10:7;8842:16:1;8906:21;8924:2;8906:17;:21::i;:::-;8883:44;;8937:24;8964:25;8982:6;8964:17;:25::i;:::-;8937:52;;9077:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9077:17:1;;;;;;;;;:27;;9098:6;;9077:9;:27;;9098:6;;9077:27;:::i;:::-;;;;-1:-1:-1;;9119:52:1;;;31048:25:19;;;31104:2;31089:18;;31082:34;;;-1:-1:-1;;;;;9119:52:1;;;;9152:1;;9119:52;;;;;;31021:18:19;9119:52:1;;;;;;;9258:74;9289:8;9307:1;9311:2;9315;9319:6;9327:4;9258:30;:74::i;:::-;8759:580;;;8630:709;;;;:::o;1748:163:4:-;1833:19;;;;:10;:19;;;;;:30;1855:8;1833:19;:30;:::i;:::-;;1896:7;1878:26;1882:12;1886:7;1882:3;:12::i;:::-;1878:26;;;;;;:::i;:::-;;;;;;;;1748:163;;:::o;6233:1115:1:-;6453:7;:14;6439:3;:10;:28;6431:81;;;;-1:-1:-1;;;6431:81:1;;31329:2:19;6431:81:1;;;31311:21:19;31368:2;31348:18;;;31341:30;31407:34;31387:18;;;31380:62;-1:-1:-1;;;31458:18:19;;;31451:38;31506:19;;6431:81:1;31127:404:19;6431:81:1;-1:-1:-1;;;;;6530:16:1;;6522:66;;;;-1:-1:-1;;;6522:66:1;;;;;;;:::i;:::-;719:10:7;6599:16:1;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6842:19;6864:13;;;;;;;;;;-1:-1:-1;;;;;6864:19:1;;;;;;;;;;;;6817:10;;-1:-1:-1;6905:21:1;;;;6897:76;;;;-1:-1:-1;;;6897:76:1;;;;;;;:::i;:::-;7015:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7015:19:1;;;;;;;;;;7037:20;;;7015:42;;7085:17;;;;;;;:27;;7037:20;;7015:9;7085:27;;7037:20;;7085:27;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;-1:-1:-1;;;;;7138:47:1;7162:4;-1:-1:-1;;;;;7138:47:1;7152:8;-1:-1:-1;;;;;7138:47:1;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;12910:323::-;13060:8;-1:-1:-1;;;;;13051:17:1;:5;-1:-1:-1;;;;;13051:17:1;;13043:71;;;;-1:-1:-1;;;13043:71:1;;33025:2:19;13043:71:1;;;33007:21:19;33064:2;33044:18;;;33037:30;33103:34;33083:18;;;33076:62;-1:-1:-1;;;33154:18:19;;;33147:39;33203:19;;13043:71:1;32823:405:19;13043:71:1;-1:-1:-1;;;;;13124:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13124:46:1;;;;;;;;;;13185:41;;1178::19;;;13185::1;;1151:18:19;13185:41:1;;;;;;;12910:323;;;:::o;3985:141:17:-;4048:7;4074:45;4089:29;4103:14;4111:5;566:9;591:5;587:9;;804:1;729;733:66;729:70;728:77;;710:1;635;639:66;635:70;634:77;;633:173;629:177;;1027:2;952:1;956:66;952:70;951:78;;932:2;857:1;861:66;857:70;856:78;;855:175;851:179;;1251:2;1176:1;1180:66;1176:70;1175:78;;1156:2;1081:1;1085:66;1081:70;1080:78;;1079:175;1075:179;;1475:2;1400:1;1404:66;1400:70;1399:78;;1380:2;1305:1;-1:-1:-1;;1305:70:17;1304:78;;1303:175;1299:179;;1547:3;1542:1;:8;;1534:3;1529:1;:8;;1528:23;1524:27;;511:1047;;;;4103:14;4089:13;:29::i;:::-;3915:2;3906:12;3900:19;;3780:155;4940:947:1;-1:-1:-1;;;;;5121:16:1;;5113:66;;;;-1:-1:-1;;;5113:66:1;;;;;;;:::i;:::-;719:10:7;5190:16:1;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5419:19;5441:13;;;;;;;;;;;-1:-1:-1;;;;;5441:19:1;;;;;;;;;;5478:21;;;;5470:76;;;;-1:-1:-1;;;5470:76:1;;;;;;;:::i;:::-;5580:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5580:19:1;;;;;;;;;;5602:20;;;5580:42;;5642:17;;;;;;;:27;;5602:20;;5580:9;5642:27;;5602:20;;5642:27;:::i;:::-;;;;-1:-1:-1;;5685:46:1;;;31048:25:19;;;31104:2;31089:18;;31082:34;;;-1:-1:-1;;;;;5685:46:1;;;;;;;;;;;;;;31021:18:19;5685:46:1;;;;;;;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;17064:193::-;17183:16;;;17197:1;17183:16;;;;;;;;;17130;;17158:22;;17183:16;;;;;;;;;;;;-1:-1:-1;17183:16:1;17158:41;;17220:7;17209:5;17215:1;17209:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17245:5;17064:193;-1:-1:-1;;17064:193:1:o;15535:725::-;-1:-1:-1;;;;;15742:13:1;;1465:19:6;:23;15738:516:1;;15777:72;;-1:-1:-1;;;15777:72:1;;-1:-1:-1;;;;;15777:38:1;;;;;:72;;15816:8;;15826:4;;15832:2;;15836:6;;15844:4;;15777:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15777:72:1;;;;;;;;-1:-1:-1;;15777:72:1;;;;;;;;;;;;:::i;:::-;;;15773:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16120:6;16113:14;;-1:-1:-1;;;16113:14:1;;;;;;;;:::i;15773:471::-;;;16167:62;;-1:-1:-1;;;16167:62:1;;35115:2:19;16167:62:1;;;35097:21:19;35154:2;35134:18;;;35127:30;35193:34;35173:18;;;35166:62;-1:-1:-1;;;35244:18:19;;;35237:50;35304:19;;16167:62:1;34913:416:19;15773:471:1;-1:-1:-1;;;;;;15898:55:1;;-1:-1:-1;;;15898:55:1;15894:152;;15977:50;;-1:-1:-1;;;15977:50:1;;;;;;;:::i;16266:792::-;-1:-1:-1;;;;;16498:13:1;;1465:19:6;:23;16494:558:1;;16533:79;;-1:-1:-1;;;16533:79:1;;-1:-1:-1;;;;;16533:43:1;;;;;:79;;16577:8;;16587:4;;16593:3;;16598:7;;16607:4;;16533:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16533:79:1;;;;;;;;-1:-1:-1;;16533:79:1;;;;;;;;;;;;:::i;:::-;;;16529:513;;;;:::i;:::-;-1:-1:-1;;;;;;16691:60:1;;-1:-1:-1;;;16691:60:1;16687:157;;16775:50;;-1:-1:-1;;;16775:50:1;;;;;;;:::i;299:170:17:-;386:13;;;396:2;386:13;;;;;;;;;356:14;;386:13;;;;;;;;-1:-1:-1;;;446:2:17;439:10;;432:21;;;;-1:-1:-1;439:10:17;299:170::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:19;-1:-1:-1;;;;;89:31:19;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:19:o;652:131::-;-1:-1:-1;;;;;;726:32:19;;716:43;;706:71;;773:1;770;763:12;788:245;846:6;899:2;887:9;878:7;874:23;870:32;867:52;;;915:1;912;905:12;867:52;954:9;941:23;973:30;997:5;973:30;:::i;1230:180::-;1289:6;1342:2;1330:9;1321:7;1317:23;1313:32;1310:52;;;1358:1;1355;1348:12;1310:52;-1:-1:-1;1381:23:19;;1230:180;-1:-1:-1;1230:180:19:o;1415:250::-;1500:1;1510:113;1524:6;1521:1;1518:13;1510:113;;;1600:11;;;1594:18;1581:11;;;1574:39;1546:2;1539:10;1510:113;;;-1:-1:-1;;1657:1:19;1639:16;;1632:27;1415:250::o;1670:271::-;1712:3;1750:5;1744:12;1777:6;1772:3;1765:19;1793:76;1862:6;1855:4;1850:3;1846:14;1839:4;1832:5;1828:16;1793:76;:::i;:::-;1923:2;1902:15;-1:-1:-1;;1898:29:19;1889:39;;;;1930:4;1885:50;;1670:271;-1:-1:-1;;1670:271:19:o;1946:220::-;2095:2;2084:9;2077:21;2058:4;2115:45;2156:2;2145:9;2141:18;2133:6;2115:45;:::i;2171:127::-;2232:10;2227:3;2223:20;2220:1;2213:31;2263:4;2260:1;2253:15;2287:4;2284:1;2277:15;2303:223;2389:2;2381:6;2377:15;2458:6;2446:10;2443:22;-1:-1:-1;;;;;2410:10:19;2407:34;2404:62;2401:88;;;2469:18;;:::i;:::-;2505:2;2498:22;-1:-1:-1;2303:223:19:o;2531:249::-;2641:2;2622:13;;-1:-1:-1;;2618:27:19;2606:40;;-1:-1:-1;;;;;2661:34:19;;2697:22;;;2658:62;2655:88;;;2723:18;;:::i;:::-;2759:2;2752:22;-1:-1:-1;;2531:249:19:o;2785:183::-;2845:4;-1:-1:-1;;;;;2870:6:19;2867:30;2864:56;;;2900:18;;:::i;:::-;-1:-1:-1;2945:1:19;2941:14;2957:4;2937:25;;2785:183::o;2973:724::-;3027:5;3080:3;3073:4;3065:6;3061:17;3057:27;3047:55;;3098:1;3095;3088:12;3047:55;3134:6;3121:20;3160:4;3183:43;3223:2;3183:43;:::i;:::-;3255:2;3249:9;3267:31;3295:2;3287:6;3267:31;:::i;:::-;3333:18;;;3425:1;3421:10;;;;3409:23;;3405:32;;;3367:15;;;;-1:-1:-1;3449:15:19;;;3446:35;;;3477:1;3474;3467:12;3446:35;3513:2;3505:6;3501:15;3525:142;3541:6;3536:3;3533:15;3525:142;;;3607:17;;3595:30;;3645:12;;;;3558;;3525:142;;;-1:-1:-1;3685:6:19;2973:724;-1:-1:-1;;;;;;2973:724:19:o;3702:555::-;3744:5;3797:3;3790:4;3782:6;3778:17;3774:27;3764:55;;3815:1;3812;3805:12;3764:55;3851:6;3838:20;-1:-1:-1;;;;;3873:2:19;3870:26;3867:52;;;3899:18;;:::i;:::-;3948:2;3942:9;3960:67;4015:2;3996:13;;-1:-1:-1;;3992:27:19;4021:4;3988:38;3942:9;3960:67;:::i;:::-;4051:2;4043:6;4036:18;4097:3;4090:4;4085:2;4077:6;4073:15;4069:26;4066:35;4063:55;;;4114:1;4111;4104:12;4063:55;4178:2;4171:4;4163:6;4159:17;4152:4;4144:6;4140:17;4127:54;4225:1;4201:15;;;4218:4;4197:26;4190:37;;;;4205:6;3702:555;-1:-1:-1;;;3702:555:19:o;4262:1071::-;4416:6;4424;4432;4440;4448;4501:3;4489:9;4480:7;4476:23;4472:33;4469:53;;;4518:1;4515;4508:12;4469:53;4557:9;4544:23;4576:31;4601:5;4576:31;:::i;:::-;4626:5;-1:-1:-1;4683:2:19;4668:18;;4655:32;4696:33;4655:32;4696:33;:::i;:::-;4748:7;-1:-1:-1;4806:2:19;4791:18;;4778:32;-1:-1:-1;;;;;4859:14:19;;;4856:34;;;4886:1;4883;4876:12;4856:34;4909:61;4962:7;4953:6;4942:9;4938:22;4909:61;:::i;:::-;4899:71;;5023:2;5012:9;5008:18;4995:32;4979:48;;5052:2;5042:8;5039:16;5036:36;;;5068:1;5065;5058:12;5036:36;5091:63;5146:7;5135:8;5124:9;5120:24;5091:63;:::i;:::-;5081:73;;5207:3;5196:9;5192:19;5179:33;5163:49;;5237:2;5227:8;5224:16;5221:36;;;5253:1;5250;5243:12;5221:36;;5276:51;5319:7;5308:8;5297:9;5293:24;5276:51;:::i;:::-;5266:61;;;4262:1071;;;;;;;;:::o;5338:655::-;5507:2;5559:21;;;5629:13;;5532:18;;;5651:22;;;5478:4;;5507:2;5730:15;;;;5704:2;5689:18;;;5478:4;5773:194;5787:6;5784:1;5781:13;5773:194;;;5852:13;;-1:-1:-1;;;;;5848:38:19;5836:51;;5942:15;;;;5907:12;;;;5809:1;5802:9;5773:194;;;-1:-1:-1;5984:3:19;;5338:655;-1:-1:-1;;;;;;5338:655:19:o;5998:1277::-;6116:6;6124;6177:2;6165:9;6156:7;6152:23;6148:32;6145:52;;;6193:1;6190;6183:12;6145:52;6233:9;6220:23;-1:-1:-1;;;;;6303:2:19;6295:6;6292:14;6289:34;;;6319:1;6316;6309:12;6289:34;6357:6;6346:9;6342:22;6332:32;;6402:7;6395:4;6391:2;6387:13;6383:27;6373:55;;6424:1;6421;6414:12;6373:55;6460:2;6447:16;6482:4;6505:43;6545:2;6505:43;:::i;:::-;6577:2;6571:9;6589:31;6617:2;6609:6;6589:31;:::i;:::-;6655:18;;;6743:1;6739:10;;;;6731:19;;6727:28;;;6689:15;;;;-1:-1:-1;6767:19:19;;;6764:39;;;6799:1;6796;6789:12;6764:39;6823:11;;;;6843:217;6859:6;6854:3;6851:15;6843:217;;;6939:3;6926:17;6956:31;6981:5;6956:31;:::i;:::-;7000:18;;6876:12;;;;7038;;;;6843:217;;;7079:6;-1:-1:-1;;7123:18:19;;7110:32;;-1:-1:-1;;7154:16:19;;;7151:36;;;7183:1;7180;7173:12;7151:36;;7206:63;7261:7;7250:8;7239:9;7235:24;7206:63;:::i;:::-;7196:73;;;5998:1277;;;;;:::o;7280:435::-;7333:3;7371:5;7365:12;7398:6;7393:3;7386:19;7424:4;7453:2;7448:3;7444:12;7437:19;;7490:2;7483:5;7479:14;7511:1;7521:169;7535:6;7532:1;7529:13;7521:169;;;7596:13;;7584:26;;7630:12;;;;7665:15;;;;7557:1;7550:9;7521:169;;;-1:-1:-1;7706:3:19;;7280:435;-1:-1:-1;;;;;7280:435:19:o;7720:261::-;7899:2;7888:9;7881:21;7862:4;7919:56;7971:2;7960:9;7956:18;7948:6;7919:56;:::i;7986:540::-;8077:5;8071:12;8066:3;8059:25;8133:4;8126:5;8122:16;8116:23;8109:4;8104:3;8100:14;8093:47;8189:4;8182:5;8178:16;8172:23;8165:4;8160:3;8156:14;8149:47;8041:3;8242:4;8235:5;8231:16;8225:23;8280:4;8273;8268:3;8264:14;8257:28;8306:58;8358:4;8353:3;8349:14;8335:12;8306:58;:::i;:::-;8294:70;;8412:4;8405:5;8401:16;8395:23;8460:3;8454:4;8450:14;8443:4;8438:3;8434:14;8427:38;8481:39;8515:4;8499:14;8481:39;:::i;:::-;8474:46;7986:540;-1:-1:-1;;;;;7986:540:19:o;8531:587::-;8714:2;8703:9;8696:21;-1:-1:-1;;;;;8763:6:19;8757:13;8753:38;8748:2;8737:9;8733:18;8726:66;8873:1;8869;8864:3;8860:11;8856:19;8850:2;8842:6;8838:15;8832:22;8828:48;8823:2;8812:9;8808:18;8801:76;8931:2;8923:6;8919:15;8913:22;8908:2;8897:9;8893:18;8886:50;8677:4;8983:2;8975:6;8971:15;8965:22;9025:4;9018;9007:9;9003:20;8996:34;9047:65;9107:3;9096:9;9092:19;9078:12;9047:65;:::i;:::-;9039:73;8531:587;-1:-1:-1;;;;8531:587:19:o;9536:171::-;9603:20;;-1:-1:-1;;;;;9652:30:19;;9642:41;;9632:69;;9697:1;9694;9687:12;9632:69;9536:171;;;:::o;9712:184::-;9770:6;9823:2;9811:9;9802:7;9798:23;9794:32;9791:52;;;9839:1;9836;9829:12;9791:52;9862:28;9880:9;9862:28;:::i;9901:435::-;10134:6;10123:9;10116:25;10177:6;10172:2;10161:9;10157:18;10150:34;10220:6;10215:2;10204:9;10200:18;10193:34;10263:3;10258:2;10247:9;10243:18;10236:31;10097:4;10284:46;10325:3;10314:9;10310:19;10302:6;10284:46;:::i;:::-;10276:54;9901:435;-1:-1:-1;;;;;;9901:435:19:o;10341:118::-;10427:5;10420:13;10413:21;10406:5;10403:32;10393:60;;10449:1;10446;10439:12;10464:382;10529:6;10537;10590:2;10578:9;10569:7;10565:23;10561:32;10558:52;;;10606:1;10603;10596:12;10558:52;10645:9;10632:23;10664:31;10689:5;10664:31;:::i;:::-;10714:5;-1:-1:-1;10771:2:19;10756:18;;10743:32;10784:30;10743:32;10784:30;:::i;:::-;10833:7;10823:17;;;10464:382;;;;;:::o;11085:319::-;11152:6;11160;11213:2;11201:9;11192:7;11188:23;11184:32;11181:52;;;11229:1;11226;11219:12;11181:52;11268:9;11255:23;11287:31;11312:5;11287:31;:::i;:::-;11337:5;-1:-1:-1;11361:37:19;11394:2;11379:18;;11361:37;:::i;:::-;11351:47;;11085:319;;;;;:::o;11409:517::-;11459:5;11512:3;11505:4;11497:6;11493:17;11489:27;11479:55;;11530:1;11527;11520:12;11479:55;11563:2;11557:9;11575:32;11600:6;11575:32;:::i;:::-;11627:6;11668:2;11660:6;11656:15;11694:3;11686:6;11683:15;11680:35;;;11711:1;11708;11701:12;11680:35;11735:6;11750:146;11766:6;11761:3;11758:15;11750:146;;;11834:17;;11822:30;;11881:4;11872:14;;;;11783;11750:146;;;-1:-1:-1;11914:6:19;;11409:517;-1:-1:-1;;;;;11409:517:19:o;11931:1233::-;12142:6;12150;12158;12166;12174;12227:3;12215:9;12206:7;12202:23;12198:33;12195:53;;;12244:1;12241;12234:12;12195:53;12267:28;12285:9;12267:28;:::i;:::-;12257:38;;12314:2;12367;12356:9;12352:18;12339:32;-1:-1:-1;;;;;12386:6:19;12383:30;12380:50;;;12426:1;12423;12416:12;12380:50;12449:61;12502:7;12493:6;12482:9;12478:22;12449:61;:::i;:::-;12439:71;;;12529:2;12550:53;12595:7;12590:2;12579:9;12575:18;12550:53;:::i;:::-;12540:63;;12647:7;12641:3;12630:9;12626:19;12622:33;12612:61;;12669:1;12666;12659:12;12612:61;12702:2;12696:9;12714:32;12739:6;12714:32;:::i;:::-;12766:6;12810:3;12799:9;12795:19;12837:7;12829:6;12826:19;12823:39;;;12858:1;12855;12848:12;12823:39;12897:3;12886:9;12882:19;12910:163;12926:6;12921:3;12918:15;12910:163;;;12992:38;13022:7;13017:3;12992:38;:::i;:::-;12980:51;;13051:12;;;;12943;;12910:163;;;12914:3;13092:6;13082:16;;13117:41;13150:7;13142:6;13117:41;:::i;:::-;13107:51;;;;;;;11931:1233;;;;;;;;:::o;13169:273::-;13358:2;13347:9;13340:21;13321:4;13378:58;13432:2;13421:9;13417:18;13409:6;13378:58;:::i;13447:388::-;13515:6;13523;13576:2;13564:9;13555:7;13551:23;13547:32;13544:52;;;13592:1;13589;13582:12;13544:52;13631:9;13618:23;13650:31;13675:5;13650:31;:::i;:::-;13700:5;-1:-1:-1;13757:2:19;13742:18;;13729:32;13770:33;13729:32;13770:33;:::i;13840:734::-;13944:6;13952;13960;13968;13976;14029:3;14017:9;14008:7;14004:23;14000:33;13997:53;;;14046:1;14043;14036:12;13997:53;14085:9;14072:23;14104:31;14129:5;14104:31;:::i;:::-;14154:5;-1:-1:-1;14211:2:19;14196:18;;14183:32;14224:33;14183:32;14224:33;:::i;:::-;14276:7;-1:-1:-1;14330:2:19;14315:18;;14302:32;;-1:-1:-1;14381:2:19;14366:18;;14353:32;;-1:-1:-1;14436:3:19;14421:19;;14408:33;-1:-1:-1;;;;;14453:30:19;;14450:50;;;14496:1;14493;14486:12;14450:50;14519:49;14560:7;14551:6;14540:9;14536:22;14519:49;:::i;14579:247::-;14638:6;14691:2;14679:9;14670:7;14666:23;14662:32;14659:52;;;14707:1;14704;14697:12;14659:52;14746:9;14733:23;14765:31;14790:5;14765:31;:::i;14831:938::-;14890:5;14938:4;14926:9;14921:3;14917:19;14913:30;14910:50;;;14956:1;14953;14946:12;14910:50;14989:2;14983:9;15031:4;15023:6;15019:17;-1:-1:-1;;;;;15123:6:19;15111:10;15108:22;15103:2;15091:10;15088:18;15085:46;15082:72;;;15134:18;;:::i;:::-;15174:10;15170:2;15163:22;15203:6;15194:15;;15246:9;15233:23;15225:6;15218:39;15318:2;15307:9;15303:18;15290:32;15285:2;15277:6;15273:15;15266:57;15384:2;15373:9;15369:18;15356:32;15351:2;15343:6;15339:15;15332:57;15440:2;15429:9;15425:18;15412:32;15398:46;;15467:2;15459:6;15456:14;15453:34;;;15483:1;15480;15473:12;15453:34;15520:57;15573:3;15564:6;15553:9;15549:22;15520:57;:::i;:::-;15515:2;15507:6;15503:15;15496:82;15631:3;15620:9;15616:19;15603:33;15587:49;;15661:2;15651:8;15648:16;15645:36;;;15677:1;15674;15667:12;15645:36;;15715:47;15758:3;15747:8;15736:9;15732:24;15715:47;:::i;:::-;15709:3;15701:6;15697:16;15690:73;;;14831:938;;;;:::o;15774:805::-;15926:6;15934;15942;15950;16003:3;15991:9;15982:7;15978:23;15974:33;15971:53;;;16020:1;16017;16010:12;15971:53;16059:9;16046:23;16078:31;16103:5;16078:31;:::i;:::-;16128:5;-1:-1:-1;16184:2:19;16169:18;;16156:32;-1:-1:-1;;;;;16237:14:19;;;16234:34;;;16264:1;16261;16254:12;16234:34;16287:63;16342:7;16333:6;16322:9;16318:22;16287:63;:::i;:::-;16277:73;;16397:2;16386:9;16382:18;16369:32;16359:42;;16454:2;16443:9;16439:18;16426:32;16410:48;;16483:2;16473:8;16470:16;16467:36;;;16499:1;16496;16489:12;16467:36;;16522:51;16565:7;16554:8;16543:9;16539:24;16522:51;:::i;:::-;16512:61;;;15774:805;;;;;;;:::o;16584:588::-;16716:6;16724;16732;16785:2;16773:9;16764:7;16760:23;16756:32;16753:52;;;16801:1;16798;16791:12;16753:52;16824:28;16842:9;16824:28;:::i;:::-;16814:38;;16902:2;16891:9;16887:18;16874:32;16915:31;16940:5;16915:31;:::i;:::-;16965:5;-1:-1:-1;17021:2:19;17006:18;;16993:32;-1:-1:-1;;;;;17037:30:19;;17034:50;;;17080:1;17077;17070:12;17034:50;17103:63;17158:7;17149:6;17138:9;17134:22;17103:63;:::i;:::-;17093:73;;;16584:588;;;;;:::o;17588:380::-;17667:1;17663:12;;;;17710;;;17731:61;;17785:4;17777:6;17773:17;17763:27;;17731:61;17838:2;17830:6;17827:14;17807:18;17804:38;17801:161;;17884:10;17879:3;17875:20;17872:1;17865:31;17919:4;17916:1;17909:15;17947:4;17944:1;17937:15;17801:161;;17588:380;;;:::o;18099:1020::-;18275:3;18304:1;18337:6;18331:13;18367:36;18393:9;18367:36;:::i;:::-;18422:1;18439:18;;;18466:133;;;;18613:1;18608:356;;;;18432:532;;18466:133;-1:-1:-1;;18499:24:19;;18487:37;;18572:14;;18565:22;18553:35;;18544:45;;;-1:-1:-1;18466:133:19;;18608:356;18639:6;18636:1;18629:17;18669:4;18714:2;18711:1;18701:16;18739:1;18753:165;18767:6;18764:1;18761:13;18753:165;;;18845:14;;18832:11;;;18825:35;18888:16;;;;18782:10;;18753:165;;;18757:3;;;18947:6;18942:3;18938:16;18931:23;;18432:532;;;;;18995:6;18989:13;19011:68;19070:8;19065:3;19058:4;19050:6;19046:17;19011:68;:::i;:::-;19095:18;;18099:1020;-1:-1:-1;;;;18099:1020:19:o;19534:127::-;19595:10;19590:3;19586:20;19583:1;19576:31;19626:4;19623:1;19616:15;19650:4;19647:1;19640:15;19666:127;19727:10;19722:3;19718:20;19715:1;19708:31;19758:4;19755:1;19748:15;19782:4;19779:1;19772:15;19798:135;19837:3;19858:17;;;19855:43;;19878:18;;:::i;:::-;-1:-1:-1;19925:1:19;19914:13;;19798:135::o;21113:326::-;21206:5;21229:1;21239:194;21253:4;21250:1;21247:11;21239:194;;;21312:13;;21300:26;;21349:4;21373:12;;;;21408:15;;;;21273:1;21266:9;21239:194;;21444:772;21494:3;21535:5;21529:12;21564:36;21590:9;21564:36;:::i;:::-;21609:19;;;21647:4;21670:1;21687:18;;;21714:146;;;;21874:1;21869:341;;;;21680:530;;21714:146;-1:-1:-1;;21756:24:19;;21742:12;;;21735:46;21828:14;;21821:22;21818:1;21814:30;21805:40;;21801:49;;;-1:-1:-1;21714:146:19;;21869:341;21900:5;21897:1;21890:16;21947:2;21944:1;21934:16;21972:1;21986:174;22000:6;21997:1;21994:13;21986:174;;;22087:14;;22069:11;;;22065:20;;22058:44;22130:16;;;;22015:10;;21986:174;;;22184:11;;22180:20;;;-1:-1:-1;;21680:530:19;;;;;;21444:772;;;;:::o;22221:1993::-;22716:4;22745:3;22775:2;22764:9;22757:21;22801:56;22853:2;22842:9;22838:18;22830:6;22801:56;:::i;:::-;22787:70;;22876:2;22887:52;22935:2;22924:9;22920:18;22912:6;22887:52;:::i;:::-;22974:2;22963:9;22959:18;23019:6;23043:1;23053:187;23067:4;23064:1;23061:11;23053:187;;;23114:44;23154:3;23145:6;23139:13;23114:44;:::i;:::-;23187:4;23178:14;;;;;23215:15;;;;23087:1;23080:9;23053:187;;;23057:3;;;23249:53;23297:3;23286:9;23282:19;23274:6;23249:53;:::i;:::-;23339:22;;;23333:3;23318:19;;23311:51;23426:13;;23411:29;;23459:1;23499:15;;;23493:22;23476:15;;;23469:47;23569:4;23557:17;;23551:24;23544:4;23532:17;;23525:51;23397:4;23650:2;23638:15;;23631:29;;;23617:4;23605:17;;23711:19;;23385:17;;;23739:22;;;-1:-1:-1;23804:23:19;;;23852:16;;;;23459:1;23791:3;23779:16;;;23898:188;23914:6;23909:3;23906:15;23898:188;;;23982:15;;23968:30;;24059:17;;;;23931:12;;;;24020:14;;;;23898:188;;;23902:3;24132:6;24125:5;24121:18;24114:4;24106:6;24102:17;24095:45;24157:51;24202:5;24195:4;24187:6;24183:17;24157:51;:::i;:::-;24149:59;22221:1993;-1:-1:-1;;;;;;;;;;;;;22221:1993:19:o;24219:245::-;24286:6;24339:2;24327:9;24318:7;24314:23;24310:32;24307:52;;;24355:1;24352;24345:12;24307:52;24387:9;24381:16;24406:28;24428:5;24406:28;:::i;25232:125::-;25297:9;;;25318:10;;;25315:36;;;25331:18;;:::i;25362:490::-;-1:-1:-1;;;;;25631:31:19;;25613:50;;-1:-1:-1;;;;;25699:32:19;;25694:2;25679:18;;25672:60;25768:2;25763;25748:18;;25741:30;;;-1:-1:-1;;25788:58:19;;25827:18;;25819:6;25788:58;:::i;25857:545::-;25959:2;25954:3;25951:11;25948:448;;;25995:1;26020:5;26016:2;26009:17;26065:4;26061:2;26051:19;26135:2;26123:10;26119:19;26116:1;26112:27;26106:4;26102:38;26171:4;26159:10;26156:20;26153:47;;;-1:-1:-1;26194:4:19;26153:47;26249:2;26244:3;26240:12;26237:1;26233:20;26227:4;26223:31;26213:41;;26304:82;26322:2;26315:5;26312:13;26304:82;;;26367:17;;;26348:1;26337:13;26304:82;;25948:448;25857:545;;;:::o;26578:1352::-;26704:3;26698:10;-1:-1:-1;;;;;26723:6:19;26720:30;26717:56;;;26753:18;;:::i;:::-;26782:97;26872:6;26832:38;26864:4;26858:11;26832:38;:::i;:::-;26826:4;26782:97;:::i;:::-;26934:4;;26998:2;26987:14;;27015:1;27010:663;;;;27717:1;27734:6;27731:89;;;-1:-1:-1;27786:19:19;;;27780:26;27731:89;-1:-1:-1;;26535:1:19;26531:11;;;26527:24;26523:29;26513:40;26559:1;26555:11;;;26510:57;27833:81;;26980:944;;27010:663;18046:1;18039:14;;;18083:4;18070:18;;-1:-1:-1;;27046:20:19;;;27164:236;27178:7;27175:1;27172:14;27164:236;;;27267:19;;;27261:26;27246:42;;27359:27;;;;27327:1;27315:14;;;;27194:19;;27164:236;;;27168:3;27428:6;27419:7;27416:19;27413:201;;;27489:19;;;27483:26;-1:-1:-1;;27572:1:19;27568:14;;;27584:3;27564:24;27560:37;27556:42;27541:58;27526:74;;27413:201;-1:-1:-1;;;;;27660:1:19;27644:14;;;27640:22;27627:36;;-1:-1:-1;26578:1352:19:o;27935:344::-;28152:6;28141:9;28134:25;28195:2;28190;28179:9;28175:18;28168:30;28115:4;28215:58;28269:2;28258:9;28254:18;28246:6;28215:58;:::i;28284:410::-;28486:2;28468:21;;;28525:2;28505:18;;;28498:30;28564:34;28559:2;28544:18;;28537:62;-1:-1:-1;;;28630:2:19;28615:18;;28608:44;28684:3;28669:19;;28284:410::o;29060:184::-;29130:6;29183:2;29171:9;29162:7;29158:23;29154:32;29151:52;;;29199:1;29196;29189:12;29151:52;-1:-1:-1;29222:16:19;;29060:184;-1:-1:-1;29060:184:19:o;31536:401::-;31738:2;31720:21;;;31777:2;31757:18;;;31750:30;31816:34;31811:2;31796:18;;31789:62;-1:-1:-1;;;31882:2:19;31867:18;;31860:35;31927:3;31912:19;;31536:401::o;31942:406::-;32144:2;32126:21;;;32183:2;32163:18;;;32156:30;32222:34;32217:2;32202:18;;32195:62;-1:-1:-1;;;32288:2:19;32273:18;;32266:40;32338:3;32323:19;;31942:406::o;32353:465::-;32610:2;32599:9;32592:21;32573:4;32636:56;32688:2;32677:9;32673:18;32665:6;32636:56;:::i;:::-;32740:9;32732:6;32728:22;32723:2;32712:9;32708:18;32701:50;32768:44;32805:6;32797;32768:44;:::i;33233:561::-;-1:-1:-1;;;;;33530:15:19;;;33512:34;;33582:15;;33577:2;33562:18;;33555:43;33629:2;33614:18;;33607:34;;;33672:2;33657:18;;33650:34;;;33492:3;33715;33700:19;;33693:32;;;33455:4;;33742:46;;33768:19;;33760:6;33742:46;:::i;:::-;33734:54;33233:561;-1:-1:-1;;;;;;;33233:561:19:o;33799:249::-;33868:6;33921:2;33909:9;33900:7;33896:23;33892:32;33889:52;;;33937:1;33934;33927:12;33889:52;33969:9;33963:16;33988:30;34012:5;33988:30;:::i;34053:179::-;34088:3;34130:1;34112:16;34109:23;34106:120;;;34176:1;34173;34170;34155:23;-1:-1:-1;34213:1:19;34207:8;34202:3;34198:18;34106:120;34053:179;:::o;34237:671::-;34276:3;34318:4;34300:16;34297:26;34294:39;;;34237:671;:::o;34294:39::-;34360:2;34354:9;-1:-1:-1;;34425:16:19;34421:25;;34418:1;34354:9;34397:50;34476:4;34470:11;34500:16;-1:-1:-1;;;;;34606:2:19;34599:4;34591:6;34587:17;34584:25;34579:2;34571:6;34568:14;34565:45;34562:58;;;34613:5;;;;;34237:671;:::o;34562:58::-;34650:6;34644:4;34640:17;34629:28;;34686:3;34680:10;34713:2;34705:6;34702:14;34699:27;;;34719:5;;;;;;34237:671;:::o;34699:27::-;34803:2;34784:16;34778:4;34774:27;34770:36;34763:4;34754:6;34749:3;34745:16;34741:27;34738:69;34735:82;;;34810:5;;;;;;34237:671;:::o;34735:82::-;34826:57;34877:4;34868:6;34860;34856:19;34852:30;34846:4;34826:57;:::i;:::-;-1:-1:-1;34899:3:19;;34237:671;-1:-1:-1;;;;;34237:671:19:o;35334:404::-;35536:2;35518:21;;;35575:2;35555:18;;;35548:30;35614:34;35609:2;35594:18;;35587:62;-1:-1:-1;;;35680:2:19;35665:18;;35658:38;35728:3;35713:19;;35334:404::o;35743:827::-;-1:-1:-1;;;;;36140:15:19;;;36122:34;;36192:15;;36187:2;36172:18;;36165:43;36102:3;36239:2;36224:18;;36217:31;;;36065:4;;36271:57;;36308:19;;36300:6;36271:57;:::i;:::-;36376:9;36368:6;36364:22;36359:2;36348:9;36344:18;36337:50;36410:44;36447:6;36439;36410:44;:::i;:::-;36396:58;;36503:9;36495:6;36491:22;36485:3;36474:9;36470:19;36463:51;36531:33;36557:6;36549;36531:33;:::i;:::-;36523:41;35743:827;-1:-1:-1;;;;;;;;35743:827:19:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "convertUint256ToUint64(uint256)": "825747cb",
    "getSupportedRequests()": "37ba9523",
    "getZKPRequest(uint64)": "c76d0845",
    "initBadge(address,(uint256,uint256,uint256,uint256[],string),uint256,string)": "fe1ea8ed",
    "isApprovedForAll(address,address)": "e985e9c5",
    "locked(uint256)": "b45a3c0e",
    "owner()": "8da5cb5b",
    "proofs(address,uint64)": "b45c0fdf",
    "renounceOwnership()": "715018a6",
    "requestExist(uint64)": "a5a40e16",
    "requestQueries(uint64)": "96bf4741",
    "requestValidators(uint64)": "a8723114",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setZKPRequest(uint64,address,(uint256,uint256,uint256,uint256[],string))": "fee207e6",
    "submitZKPResponse(uint64,uint256[],uint256[2],uint256[2][2],uint256[2])": "b68967e2",
    "supportedRequests(uint256)": "f1435326",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokenReptationData(uint256)": "76012526",
    "totalSupply()": "18160ddd",
    "transferOwnership(address)": "f2fde38b",
    "uri(uint256)": "0e89341c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ErrLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrNotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"_query\",\"type\":\"tuple\"}],\"name\":\"InitBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"MintBadge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"convertUint256ToUint64\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedRequests\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"arr\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"}],\"name\":\"getZKPRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICircuitValidator\",\"name\":\"_validator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"_query\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_expireTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"initBadge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"proofs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"requestExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"requestQueries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"requestValidators\",\"outputs\":[{\"internalType\":\"contract ICircuitValidator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"contract ICircuitValidator\",\"name\":\"validator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"query\",\"type\":\"tuple\"}],\"name\":\"setZKPRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"name\":\"submitZKPResponse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedRequests\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenReptationData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expireTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"query\",\"type\":\"tuple\"}],\"internalType\":\"struct ZKBadge.Reptation\",\"name\":\"reptation\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Locked(uint256)\":{\"details\":\"If a token is minted and the status is locked, this event should be emitted.\",\"params\":{\"tokenId\":\"The identifier for a token.\"}},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unlocked(uint256)\":{\"details\":\"If a token is minted and the status is unlocked, this event should be emitted.\",\"params\":{\"tokenId\":\"The identifier for a token.\"}}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getSupportedRequests()\":{\"details\":\"getSupportedRequests\"},\"getZKPRequest(uint64)\":{\"details\":\"getZKPRequest\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"locked(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setZKPRequest(uint64,address,(uint256,uint256,uint256,uint256[],string))\":{\"details\":\"setZKPRequest\"},\"submitZKPResponse(uint64,uint256[],uint256[2],uint256[2][2],uint256[2])\":{\"details\":\"submitZKPResponse\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Locked(uint256)\":{\"notice\":\"Emitted when the locking status is changed to locked.\"},\"Unlocked(uint256)\":{\"notice\":\"Emitted when the locking status is changed to unlocked.\"}},\"kind\":\"user\",\"methods\":{\"locked(uint256)\":{\"notice\":\"Returns the locking status of an Soulbound Token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ZKBadge.sol\":\"ZKBadge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb\",\"dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0x4e7bcc6aa9b150e125df8afbfbca5dfb7c92fa4fb01985f2f595ce0c96153cff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75aa1a94e176c23d37e117daf8386cd6301119b1ca5cf521fe22de9ccc13dade\",\"dweb:/ipfs/QmfTfUFGRZ3iNavQgLmj2zNR7Pz2djKV5UPRTmDWnapbGg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/ZKBadge.sol\":{\"keccak256\":\"0x01c3c5fb6591858aaa610a5a49e5baa92c2c2fc04d45eeab7423e67f31243f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d2229b72b8eb8ab780536a93e04ab6d979a9f16506c045758f2ad2d7eeed8fc\",\"dweb:/ipfs/QmT263GSSLCzqmJULYRXvhhaznXnYwEGAwHogJ5SDduP1x\"]},\"src/interfaces/ICircuitValidator.sol\":{\"keccak256\":\"0x24070c43c25ac6a9769b324bfb2b7e19feafd2048e454a2843b4a1078c75767c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b699a4a72cf153098868b22d996cea40cfa9bef61df80a0353f404499e4689b\",\"dweb:/ipfs/QmchZXgNaBS5oF4xTjLZPhKAcBjyLVT6uHfp21pzyqPhiD\"]},\"src/interfaces/IERC5192.sol\":{\"keccak256\":\"0x9cdc31a8c76505ebab5ab9d5241deb7c0850c2e2c22673d849e51f2d4b3fabf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://305e03eb560cdeee9a1ad1b36bf53bade1564b2e0526203214688c3bfacd8f67\",\"dweb:/ipfs/QmctEsjcSDdn84XTet2e1eVXWf7uoLj9WXB4TpSbjtKsY8\"]},\"src/interfaces/IZKPVerifier.sol\":{\"keccak256\":\"0xf77384c4a967e9396e383be0ec3dcb7ee11e7c75115991193e6976f9da0d9aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8dd155f9f8c174444edb8066a57112b51de3470bbbeb386874406f3659125\",\"dweb:/ipfs/QmXdAZAEeDmrv8nLfQUHmS7KghWrMN1z3uDr7R9vfAwy6X\"]},\"src/lib/BytesLib.sol\":{\"keccak256\":\"0x9c9f897bb957a5a2b70513bdf0a404e4470c5d307e2438e44e88bcaa7f46491c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b462fe1fbafdd2fd1bac7410fd2a34400fb367e3c33c2939a0d9d3a6f9926f2e\",\"dweb:/ipfs/QmYficvpVbPDbzxoQT4vA2rRW9LRAVuLMjyz5QB3usm9uA\"]},\"src/lib/GenesisUtils.sol\":{\"keccak256\":\"0x78cab77c4d0c5f3b4aaf75adf668526081e2c88b4ba2f45b1180adbabaee3596\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4b8075ab058a801ad412e163ca0e65162351415b705cb5c350fbbcdf0f8d2ffb\",\"dweb:/ipfs/QmfWYdUDrXuaUEWYhEesVsak5B6py6GhnDK6tNzyihSJnp\"]},\"src/verifiers/ZKPVerifier.sol\":{\"keccak256\":\"0x5546bdf97d452661d75ec656ce38473a749681c6d10eaa6cdc9b9253f56afcc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://039e45e162d36fca4b1fbf197f4dad17ba9bf6c6043bb9e867248b1374f06271\",\"dweb:/ipfs/Qmb844KQXRnFZQxk6gdqTqqb16DCXiVYw489PNR1BkjuDk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ErrLocked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ErrNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_expireTimestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "_query",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slotIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitBadge",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Locked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MintBadge",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unlocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "convertUint256ToUint64",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupportedRequests",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "arr",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getZKPRequest",
          "outputs": [
            {
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slotIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ICircuitValidator",
              "name": "_validator",
              "type": "address"
            },
            {
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "_query",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slotIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "_expireTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initBadge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proofs",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requestExist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requestQueries",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requestValidators",
          "outputs": [
            {
              "internalType": "contract ICircuitValidator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "contract ICircuitValidator",
              "name": "validator",
              "type": "address"
            },
            {
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "query",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slotIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setZKPRequest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "uint256[]",
              "name": "inputs",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[2]",
              "name": "a",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[2][2]",
              "name": "b",
              "type": "uint256[2][2]"
            },
            {
              "internalType": "uint256[2]",
              "name": "c",
              "type": "uint256[2]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitZKPResponse",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportedRequests",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenReptationData",
          "outputs": [
            {
              "internalType": "struct ZKBadge.Reptation",
              "name": "reptation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "requestId",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "expireTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "struct ICircuitValidator.CircuitQuery",
                  "name": "query",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "schema",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slotIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "operator",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "value",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "string",
                      "name": "circuitId",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "getSupportedRequests()": {
            "details": "getSupportedRequests"
          },
          "getZKPRequest(uint64)": {
            "details": "getZKPRequest"
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "locked(uint256)": {
            "details": "SBTs assigned to zero address are considered invalid, and queries about them do throw.",
            "params": {
              "tokenId": "The identifier for an SBT."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC1155-setApprovalForAll}."
          },
          "setZKPRequest(uint64,address,(uint256,uint256,uint256,uint256[],string))": {
            "details": "setZKPRequest"
          },
          "submitZKPResponse(uint64,uint256[],uint256[2],uint256[2][2],uint256[2])": {
            "details": "submitZKPResponse"
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "uri(uint256)": {
            "details": "See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "locked(uint256)": {
            "notice": "Returns the locking status of an Soulbound Token"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ZKBadge.sol": "ZKBadge"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820",
        "urls": [
          "bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb",
          "dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol": {
        "keccak256": "0x4e7bcc6aa9b150e125df8afbfbca5dfb7c92fa4fb01985f2f595ce0c96153cff",
        "urls": [
          "bzz-raw://75aa1a94e176c23d37e117daf8386cd6301119b1ca5cf521fe22de9ccc13dade",
          "dweb:/ipfs/QmfTfUFGRZ3iNavQgLmj2zNR7Pz2djKV5UPRTmDWnapbGg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/ZKBadge.sol": {
        "keccak256": "0x01c3c5fb6591858aaa610a5a49e5baa92c2c2fc04d45eeab7423e67f31243f99",
        "urls": [
          "bzz-raw://4d2229b72b8eb8ab780536a93e04ab6d979a9f16506c045758f2ad2d7eeed8fc",
          "dweb:/ipfs/QmT263GSSLCzqmJULYRXvhhaznXnYwEGAwHogJ5SDduP1x"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICircuitValidator.sol": {
        "keccak256": "0x24070c43c25ac6a9769b324bfb2b7e19feafd2048e454a2843b4a1078c75767c",
        "urls": [
          "bzz-raw://3b699a4a72cf153098868b22d996cea40cfa9bef61df80a0353f404499e4689b",
          "dweb:/ipfs/QmchZXgNaBS5oF4xTjLZPhKAcBjyLVT6uHfp21pzyqPhiD"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC5192.sol": {
        "keccak256": "0x9cdc31a8c76505ebab5ab9d5241deb7c0850c2e2c22673d849e51f2d4b3fabf9",
        "urls": [
          "bzz-raw://305e03eb560cdeee9a1ad1b36bf53bade1564b2e0526203214688c3bfacd8f67",
          "dweb:/ipfs/QmctEsjcSDdn84XTet2e1eVXWf7uoLj9WXB4TpSbjtKsY8"
        ],
        "license": "MIT"
      },
      "src/interfaces/IZKPVerifier.sol": {
        "keccak256": "0xf77384c4a967e9396e383be0ec3dcb7ee11e7c75115991193e6976f9da0d9aff",
        "urls": [
          "bzz-raw://ecf8dd155f9f8c174444edb8066a57112b51de3470bbbeb386874406f3659125",
          "dweb:/ipfs/QmXdAZAEeDmrv8nLfQUHmS7KghWrMN1z3uDr7R9vfAwy6X"
        ],
        "license": "MIT"
      },
      "src/lib/BytesLib.sol": {
        "keccak256": "0x9c9f897bb957a5a2b70513bdf0a404e4470c5d307e2438e44e88bcaa7f46491c",
        "urls": [
          "bzz-raw://b462fe1fbafdd2fd1bac7410fd2a34400fb367e3c33c2939a0d9d3a6f9926f2e",
          "dweb:/ipfs/QmYficvpVbPDbzxoQT4vA2rRW9LRAVuLMjyz5QB3usm9uA"
        ],
        "license": "Unlicense"
      },
      "src/lib/GenesisUtils.sol": {
        "keccak256": "0x78cab77c4d0c5f3b4aaf75adf668526081e2c88b4ba2f45b1180adbabaee3596",
        "urls": [
          "bzz-raw://4b8075ab058a801ad412e163ca0e65162351415b705cb5c350fbbcdf0f8d2ffb",
          "dweb:/ipfs/QmfWYdUDrXuaUEWYhEesVsak5B6py6GhnDK6tNzyihSJnp"
        ],
        "license": "GPL-3.0"
      },
      "src/verifiers/ZKPVerifier.sol": {
        "keccak256": "0x5546bdf97d452661d75ec656ce38473a749681c6d10eaa6cdc9b9253f56afcc1",
        "urls": [
          "bzz-raw://039e45e162d36fca4b1fbf197f4dad17ba9bf6c6043bb9e867248b1374f06271",
          "dweb:/ipfs/Qmb844KQXRnFZQxk6gdqTqqb16DCXiVYw489PNR1BkjuDk"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ZKBadge.sol",
    "id": 3423,
    "exportedSymbols": {
      "Address": [
        1931
      ],
      "BytesLib": [
        3887
      ],
      "Context": [
        1953
      ],
      "ERC1155": [
        1335
      ],
      "ERC1155URIStorage": [
        1586
      ],
      "ERC165": [
        2152
      ],
      "GenesisUtils": [
        4287
      ],
      "ICircuitValidator": [
        3481
      ],
      "IERC1155": [
        1457
      ],
      "IERC1155MetadataURI": [
        1601
      ],
      "IERC1155Receiver": [
        1498
      ],
      "IERC165": [
        2164
      ],
      "IERC5192": [
        3502
      ],
      "IZKPVerifier": [
        3554
      ],
      "Math": [
        3029
      ],
      "Ownable": [
        112
      ],
      "Strings": [
        2128
      ],
      "ZKBadge": [
        3422
      ],
      "ZKPVerifier": [
        4563
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4507:12",
    "nodes": [
      {
        "id": 3031,
        "nodeType": "PragmaDirective",
        "src": "32:24:12",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 3032,
        "nodeType": "ImportDirective",
        "src": "94:96:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3423,
        "sourceUnit": 1587,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3033,
        "nodeType": "ImportDirective",
        "src": "191:68:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "../lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3423,
        "sourceUnit": 113,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3034,
        "nodeType": "ImportDirective",
        "src": "260:67:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "../lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3423,
        "sourceUnit": 2129,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3035,
        "nodeType": "ImportDirective",
        "src": "328:35:12",
        "nodes": [],
        "absolutePath": "src/interfaces/IERC5192.sol",
        "file": "./interfaces/IERC5192.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3423,
        "sourceUnit": 3503,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3036,
        "nodeType": "ImportDirective",
        "src": "364:44:12",
        "nodes": [],
        "absolutePath": "src/interfaces/ICircuitValidator.sol",
        "file": "./interfaces/ICircuitValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3423,
        "sourceUnit": 3482,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3037,
        "nodeType": "ImportDirective",
        "src": "409:37:12",
        "nodes": [],
        "absolutePath": "src/verifiers/ZKPVerifier.sol",
        "file": "./verifiers/ZKPVerifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3423,
        "sourceUnit": 4564,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3038,
        "nodeType": "ImportDirective",
        "src": "447:32:12",
        "nodes": [],
        "absolutePath": "src/lib/GenesisUtils.sol",
        "file": "./lib/GenesisUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3423,
        "sourceUnit": 4288,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3422,
        "nodeType": "ContractDefinition",
        "src": "481:4057:12",
        "nodes": [
          {
            "id": 3054,
            "nodeType": "StructDefinition",
            "src": "597:153:12",
            "nodes": [],
            "canonicalName": "ZKBadge.Reptation",
            "members": [
              {
                "constant": false,
                "id": 3046,
                "mutability": "mutable",
                "name": "requestId",
                "nameLocation": "631:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 3054,
                "src": "624:16:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 3045,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "624:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3048,
                "mutability": "mutable",
                "name": "issuer",
                "nameLocation": "658:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 3054,
                "src": "650:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3047,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "650:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3050,
                "mutability": "mutable",
                "name": "expireTimestamp",
                "nameLocation": "682:15:12",
                "nodeType": "VariableDeclaration",
                "scope": 3054,
                "src": "674:23:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3049,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "674:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3053,
                "mutability": "mutable",
                "name": "query",
                "nameLocation": "738:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 3054,
                "src": "707:36:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_CircuitQuery_$3436_storage_ptr",
                  "typeString": "struct ICircuitValidator.CircuitQuery"
                },
                "typeName": {
                  "id": 3052,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3051,
                    "name": "ICircuitValidator.CircuitQuery",
                    "nameLocations": [
                      "707:17:12",
                      "725:12:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3436,
                    "src": "707:30:12"
                  },
                  "referencedDeclaration": 3436,
                  "src": "707:30:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CircuitQuery_$3436_storage_ptr",
                    "typeString": "struct ICircuitValidator.CircuitQuery"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Reptation",
            "nameLocation": "604:9:12",
            "scope": 3422,
            "visibility": "public"
          },
          {
            "id": 3057,
            "nodeType": "UsingForDirective",
            "src": "756:26:12",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3055,
              "name": "Strings",
              "nameLocations": [
                "762:7:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2128,
              "src": "762:7:12"
            },
            "typeName": {
              "id": 3056,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "774:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3060,
            "nodeType": "VariableDeclaration",
            "src": "788:28:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "isLocked",
            "nameLocation": "801:8:12",
            "scope": 3422,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3058,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "788:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 3059,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "812:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "id": 3062,
            "nodeType": "VariableDeclaration",
            "src": "822:24:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenId",
            "nameLocation": "838:8:12",
            "scope": 3422,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3061,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "822:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 3069,
            "nodeType": "VariableDeclaration",
            "src": "852:38:12",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_UINT64",
            "nameLocation": "868:10:12",
            "scope": 3422,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 3063,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "852:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_18446744073709551615_by_1",
                "typeString": "int_const 18446744073709551615"
              },
              "id": 3068,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_18446744073709551616_by_1",
                  "typeString": "int_const 18446744073709551616"
                },
                "id": 3066,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 3064,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "881:1:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3634",
                  "id": 3065,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "884:2:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_64_by_1",
                    "typeString": "int_const 64"
                  },
                  "value": "64"
                },
                "src": "881:5:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18446744073709551616_by_1",
                  "typeString": "int_const 18446744073709551616"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 3067,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "889:1:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "881:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18446744073709551615_by_1",
                "typeString": "int_const 18446744073709551615"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3074,
            "nodeType": "VariableDeclaration",
            "src": "896:55:12",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenToReptation",
            "nameLocation": "934:17:12",
            "scope": 3422,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Reptation_$3054_storage_$",
              "typeString": "mapping(uint256 => struct ZKBadge.Reptation)"
            },
            "typeName": {
              "id": 3073,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3070,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "904:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "896:29:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Reptation_$3054_storage_$",
                "typeString": "mapping(uint256 => struct ZKBadge.Reptation)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3072,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3071,
                  "name": "Reptation",
                  "nameLocations": [
                    "915:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3054,
                  "src": "915:9:12"
                },
                "referencedDeclaration": 3054,
                "src": "915:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Reptation_$3054_storage_ptr",
                  "typeString": "struct ZKBadge.Reptation"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 3076,
            "nodeType": "ErrorDefinition",
            "src": "958:18:12",
            "nodes": [],
            "errorSelector": "bd291a95",
            "name": "ErrLocked",
            "nameLocation": "964:9:12",
            "parameters": {
              "id": 3075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:2:12"
            }
          },
          {
            "id": 3078,
            "nodeType": "ErrorDefinition",
            "src": "981:20:12",
            "nodes": [],
            "errorSelector": "ae9a63f5",
            "name": "ErrNotFound",
            "nameLocation": "987:11:12",
            "parameters": {
              "id": 3077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:2:12"
            }
          },
          {
            "id": 3087,
            "nodeType": "ModifierDefinition",
            "src": "1007:81:12",
            "nodes": [],
            "body": {
              "id": 3086,
              "nodeType": "Block",
              "src": "1028:60:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 3080,
                    "name": "isLocked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3060,
                    "src": "1042:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3084,
                  "nodeType": "IfStatement",
                  "src": "1038:32:12",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3081,
                        "name": "ErrLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3076,
                        "src": "1059:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1059:11:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3083,
                    "nodeType": "RevertStatement",
                    "src": "1052:18:12"
                  }
                },
                {
                  "id": 3085,
                  "nodeType": "PlaceholderStatement",
                  "src": "1080:1:12"
                }
              ]
            },
            "name": "checkLock",
            "nameLocation": "1016:9:12",
            "parameters": {
              "id": 3079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:2:12"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3094,
            "nodeType": "FunctionDefinition",
            "src": "1139:28:12",
            "nodes": [],
            "body": {
              "id": 3093,
              "nodeType": "Block",
              "src": "1165:2:12",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1161:2:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 3091,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3089,
                  "name": "ERC1155",
                  "nameLocations": [
                    "1153:7:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1335,
                  "src": "1153:7:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1153:11:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1150:2:12"
            },
            "returnParameters": {
              "id": 3092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1165:0:12"
            },
            "scope": 3422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3102,
            "nodeType": "FunctionDefinition",
            "src": "1221:85:12",
            "nodes": [],
            "body": {
              "id": 3101,
              "nodeType": "Block",
              "src": "1274:32:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3099,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3062,
                    "src": "1291:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3098,
                  "id": 3100,
                  "nodeType": "Return",
                  "src": "1284:15:12"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1230:11:12",
            "parameters": {
              "id": 3095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1241:2:12"
            },
            "returnParameters": {
              "id": 3098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3097,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3102,
                  "src": "1265:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1264:9:12"
            },
            "scope": 3422,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3123,
            "nodeType": "FunctionDefinition",
            "src": "1312:196:12",
            "nodes": [],
            "body": {
              "id": 3122,
              "nodeType": "Block",
              "src": "1403:105:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 3115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3110,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3104,
                        "src": "1420:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3112,
                              "name": "IERC5192",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3502,
                              "src": "1440:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC5192_$3502_$",
                                "typeString": "type(contract IERC5192)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC5192_$3502_$",
                                "typeString": "type(contract IERC5192)"
                              }
                            ],
                            "id": 3111,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1435:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1435:14:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC5192_$3502",
                            "typeString": "type(contract IERC5192)"
                          }
                        },
                        "id": 3114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1450:11:12",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1435:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1420:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3118,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3104,
                          "src": "1489:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 3116,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1465:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ZKBadge_$3422_$",
                            "typeString": "type(contract super ZKBadge)"
                          }
                        },
                        "id": 3117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1471:17:12",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 188,
                        "src": "1465:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 3119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1465:36:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1420:81:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3109,
                  "id": 3121,
                  "nodeType": "Return",
                  "src": "1413:88:12"
                }
              ]
            },
            "baseFunctions": [
              188
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1321:17:12",
            "overrides": {
              "id": 3106,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1379:8:12"
            },
            "parameters": {
              "id": 3105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3104,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1346:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3123,
                  "src": "1339:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3103,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1338:20:12"
            },
            "returnParameters": {
              "id": 3109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3123,
                  "src": "1397:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3107,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1396:6:12"
            },
            "scope": 3422,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3140,
            "nodeType": "FunctionDefinition",
            "src": "1514:148:12",
            "nodes": [],
            "body": {
              "id": 3139,
              "nodeType": "Block",
              "src": "1576:86:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3130,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3125,
                      "src": "1590:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 3131,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3062,
                      "src": "1600:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1590:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3136,
                  "nodeType": "IfStatement",
                  "src": "1586:44:12",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3133,
                        "name": "ErrNotFound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3078,
                        "src": "1617:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1617:13:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3135,
                    "nodeType": "RevertStatement",
                    "src": "1610:20:12"
                  }
                },
                {
                  "expression": {
                    "id": 3137,
                    "name": "isLocked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3060,
                    "src": "1647:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3129,
                  "id": 3138,
                  "nodeType": "Return",
                  "src": "1640:15:12"
                }
              ]
            },
            "baseFunctions": [
              3501
            ],
            "functionSelector": "b45a3c0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "locked",
            "nameLocation": "1523:6:12",
            "parameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3125,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1538:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3140,
                  "src": "1530:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1529:17:12"
            },
            "returnParameters": {
              "id": 3129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3140,
                  "src": "1570:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1569:6:12"
            },
            "scope": 3422,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3153,
            "nodeType": "FunctionDefinition",
            "src": "1668:134:12",
            "nodes": [],
            "body": {
              "id": 3152,
              "nodeType": "Block",
              "src": "1757:45:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3148,
                      "name": "_tokenToReptation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3074,
                      "src": "1774:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Reptation_$3054_storage_$",
                        "typeString": "mapping(uint256 => struct ZKBadge.Reptation storage ref)"
                      }
                    },
                    "id": 3150,
                    "indexExpression": {
                      "id": 3149,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3142,
                      "src": "1792:2:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1774:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Reptation_$3054_storage",
                      "typeString": "struct ZKBadge.Reptation storage ref"
                    }
                  },
                  "functionReturnParameters": 3147,
                  "id": 3151,
                  "nodeType": "Return",
                  "src": "1767:28:12"
                }
              ]
            },
            "functionSelector": "76012526",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenReptationData",
            "nameLocation": "1677:18:12",
            "parameters": {
              "id": 3143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3142,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1704:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3153,
                  "src": "1696:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1695:12:12"
            },
            "returnParameters": {
              "id": 3147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3146,
                  "mutability": "mutable",
                  "name": "reptation",
                  "nameLocation": "1746:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3153,
                  "src": "1729:26:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Reptation_$3054_memory_ptr",
                    "typeString": "struct ZKBadge.Reptation"
                  },
                  "typeName": {
                    "id": 3145,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3144,
                      "name": "Reptation",
                      "nameLocations": [
                        "1729:9:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3054,
                      "src": "1729:9:12"
                    },
                    "referencedDeclaration": 3054,
                    "src": "1729:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Reptation_$3054_storage_ptr",
                      "typeString": "struct ZKBadge.Reptation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1728:28:12"
            },
            "scope": 3422,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3180,
            "nodeType": "FunctionDefinition",
            "src": "1860:230:12",
            "nodes": [],
            "body": {
              "id": 3179,
              "nodeType": "Block",
              "src": "2018:72:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3172,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3155,
                        "src": "2051:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3173,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3157,
                        "src": "2057:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3174,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3159,
                        "src": "2061:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3175,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3161,
                        "src": "2070:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3176,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3163,
                        "src": "2078:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3169,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2028:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ZKBadge_$3422_$",
                          "typeString": "type(contract super ZKBadge)"
                        }
                      },
                      "id": 3171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2034:16:12",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 365,
                      "src": "2028:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 3177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2028:55:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3178,
                  "nodeType": "ExpressionStatement",
                  "src": "2028:55:12"
                }
              ]
            },
            "baseFunctions": [
              365
            ],
            "functionSelector": "f242432a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3166,
                  "name": "checkLock",
                  "nameLocations": [
                    "2004:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3087,
                  "src": "2004:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2004:9:12"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "1869:16:12",
            "overrides": {
              "id": 3165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1987:8:12"
            },
            "parameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3155,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1894:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3180,
                  "src": "1886:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1886:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3157,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1908:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3180,
                  "src": "1900:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1920:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3180,
                  "src": "1912:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3161,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1937:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3180,
                  "src": "1929:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3163,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1958:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3180,
                  "src": "1945:17:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1885:78:12"
            },
            "returnParameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2018:0:12"
            },
            "scope": 3422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3209,
            "nodeType": "FunctionDefinition",
            "src": "2096:270:12",
            "nodes": [],
            "body": {
              "id": 3208,
              "nodeType": "Block",
              "src": "2292:74:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3201,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3182,
                        "src": "2330:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3202,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3184,
                        "src": "2336:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3203,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "2340:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3204,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3190,
                        "src": "2345:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3205,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3192,
                        "src": "2354:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3198,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2302:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ZKBadge_$3422_$",
                          "typeString": "type(contract super ZKBadge)"
                        }
                      },
                      "id": 3200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2308:21:12",
                      "memberName": "safeBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 405,
                      "src": "2302:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 3206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:57:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3207,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:57:12"
                }
              ]
            },
            "baseFunctions": [
              405
            ],
            "functionSelector": "2eb2c2d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3196,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3195,
                  "name": "checkLock",
                  "nameLocations": [
                    "2282:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3087,
                  "src": "2282:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2282:9:12"
              }
            ],
            "name": "safeBatchTransferFrom",
            "nameLocation": "2105:21:12",
            "overrides": {
              "id": 3194,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2273:8:12"
            },
            "parameters": {
              "id": 3193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3182,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2144:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3209,
                  "src": "2136:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3184,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2166:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3209,
                  "src": "2158:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3187,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2195:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3209,
                  "src": "2178:20:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3185,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2178:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3186,
                    "nodeType": "ArrayTypeName",
                    "src": "2178:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3190,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "2225:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3209,
                  "src": "2208:24:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3188,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2208:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3189,
                    "nodeType": "ArrayTypeName",
                    "src": "2208:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3192,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2255:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3209,
                  "src": "2242:17:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3191,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2242:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2126:139:12"
            },
            "returnParameters": {
              "id": 3197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2292:0:12"
            },
            "scope": 3422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3227,
            "nodeType": "FunctionDefinition",
            "src": "2372:146:12",
            "nodes": [],
            "body": {
              "id": 3226,
              "nodeType": "Block",
              "src": "2458:60:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3222,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3211,
                        "src": "2492:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3223,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3213,
                        "src": "2502:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3219,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2468:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ZKBadge_$3422_$",
                          "typeString": "type(contract super ZKBadge)"
                        }
                      },
                      "id": 3221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2474:17:12",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 309,
                      "src": "2468:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 3224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2468:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3225,
                  "nodeType": "ExpressionStatement",
                  "src": "2468:43:12"
                }
              ]
            },
            "baseFunctions": [
              309
            ],
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3216,
                  "name": "checkLock",
                  "nameLocations": [
                    "2448:9:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3087,
                  "src": "2448:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2448:9:12"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "2381:17:12",
            "overrides": {
              "id": 3215,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2439:8:12"
            },
            "parameters": {
              "id": 3214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3211,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2407:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3227,
                  "src": "2399:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2399:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3213,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "2422:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3227,
                  "src": "2417:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3212,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2417:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2398:33:12"
            },
            "returnParameters": {
              "id": 3218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2458:0:12"
            },
            "scope": 3422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3247,
            "nodeType": "FunctionDefinition",
            "src": "2524:187:12",
            "nodes": [],
            "body": {
              "id": 3246,
              "nodeType": "Block",
              "src": "2600:111:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3235,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3229,
                          "src": "2618:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 3236,
                          "name": "MAX_UINT64",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3069,
                          "src": "2627:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "2618:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c756520746f6f206c6172676520746f2066697420696e2075696e743634",
                        "id": 3238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2639:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1457b3c4c108daf8580941141aca5983ebc8057054dbeecf76d6dd58fe80496",
                          "typeString": "literal_string \"Value too large to fit in uint64\""
                        },
                        "value": "Value too large to fit in uint64"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1457b3c4c108daf8580941141aca5983ebc8057054dbeecf76d6dd58fe80496",
                          "typeString": "literal_string \"Value too large to fit in uint64\""
                        }
                      ],
                      "id": 3234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2610:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2610:64:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3240,
                  "nodeType": "ExpressionStatement",
                  "src": "2610:64:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3243,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3229,
                        "src": "2698:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2691:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 3241,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2691:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2691:13:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 3233,
                  "id": 3245,
                  "nodeType": "Return",
                  "src": "2684:20:12"
                }
              ]
            },
            "functionSelector": "825747cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertUint256ToUint64",
            "nameLocation": "2533:22:12",
            "parameters": {
              "id": 3230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3229,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2564:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3247,
                  "src": "2556:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2556:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2555:15:12"
            },
            "returnParameters": {
              "id": 3233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3232,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3247,
                  "src": "2592:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3231,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2591:8:12"
            },
            "scope": 3422,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3314,
            "nodeType": "FunctionDefinition",
            "src": "2717:721:12",
            "nodes": [],
            "body": {
              "id": 3313,
              "nodeType": "Block",
              "src": "2908:530:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3261,
                      "mutability": "mutable",
                      "name": "_requestId",
                      "nameLocation": "2975:10:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3313,
                      "src": "2967:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2967:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3265,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3262,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3062,
                      "src": "2988:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2999:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2988:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2967:33:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3270,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3261,
                            "src": "3052:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3269,
                          "name": "convertUint256ToUint64",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3247,
                          "src": "3029:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$",
                            "typeString": "function (uint256) pure returns (uint64)"
                          }
                        },
                        "id": 3271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3029:34:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 3272,
                        "name": "_validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3250,
                        "src": "3065:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICircuitValidator_$3481",
                          "typeString": "contract ICircuitValidator"
                        }
                      },
                      {
                        "id": 3273,
                        "name": "_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3253,
                        "src": "3077:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CircuitQuery_$3436_memory_ptr",
                          "typeString": "struct ICircuitValidator.CircuitQuery memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_contract$_ICircuitValidator_$3481",
                          "typeString": "contract ICircuitValidator"
                        },
                        {
                          "typeIdentifier": "t_struct$_CircuitQuery_$3436_memory_ptr",
                          "typeString": "struct ICircuitValidator.CircuitQuery memory"
                        }
                      ],
                      "expression": {
                        "id": 3266,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3010:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZKBadge_$3422",
                          "typeString": "contract ZKBadge"
                        }
                      },
                      "id": 3268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3015:13:12",
                      "memberName": "setZKPRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4526,
                      "src": "3010:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$_t_contract$_ICircuitValidator_$3481_$_t_struct$_CircuitQuery_$3436_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint64,contract ICircuitValidator,struct ICircuitValidator.CircuitQuery memory) external returns (bool)"
                      }
                    },
                    "id": 3274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3010:74:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3275,
                  "nodeType": "ExpressionStatement",
                  "src": "3010:74:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3279,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3108:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZKBadge_$3422",
                              "typeString": "contract ZKBadge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZKBadge_$3422",
                              "typeString": "contract ZKBadge"
                            }
                          ],
                          "id": 3278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3100:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3100:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3100:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3281,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "3115:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 3282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3127:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 3283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3130:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 3276,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "3094:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 3284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3094:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3285,
                  "nodeType": "ExpressionStatement",
                  "src": "3094:39:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3287,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "3151:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3288,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3257,
                        "src": "3163:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3286,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1574,
                        668
                      ],
                      "referencedDeclaration": 1574,
                      "src": "3143:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 3289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3143:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3290,
                  "nodeType": "ExpressionStatement",
                  "src": "3143:30:12"
                },
                {
                  "expression": {
                    "id": 3303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3291,
                        "name": "_tokenToReptation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3074,
                        "src": "3183:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Reptation_$3054_storage_$",
                          "typeString": "mapping(uint256 => struct ZKBadge.Reptation storage ref)"
                        }
                      },
                      "id": 3293,
                      "indexExpression": {
                        "id": 3292,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "3201:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3183:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reptation_$3054_storage",
                        "typeString": "struct ZKBadge.Reptation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3296,
                              "name": "_requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3261,
                              "src": "3260:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3295,
                            "name": "convertUint256ToUint64",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3247,
                            "src": "3237:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$",
                              "typeString": "function (uint256) pure returns (uint64)"
                            }
                          },
                          "id": 3297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3237:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3298,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1943,
                            "src": "3281:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3281:12:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3300,
                          "name": "_expireTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3255,
                          "src": "3312:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3301,
                          "name": "_query",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3253,
                          "src": "3337:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CircuitQuery_$3436_memory_ptr",
                            "typeString": "struct ICircuitValidator.CircuitQuery memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_CircuitQuery_$3436_memory_ptr",
                            "typeString": "struct ICircuitValidator.CircuitQuery memory"
                          }
                        ],
                        "id": 3294,
                        "name": "Reptation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "3215:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Reptation_$3054_storage_ptr_$",
                          "typeString": "type(struct ZKBadge.Reptation storage pointer)"
                        }
                      },
                      "id": 3302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3226:9:12",
                        "3273:6:12",
                        "3295:15:12",
                        "3330:5:12"
                      ],
                      "names": [
                        "requestId",
                        "issuer",
                        "expireTimestamp",
                        "query"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3215:130:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reptation_$3054_memory_ptr",
                        "typeString": "struct ZKBadge.Reptation memory"
                      }
                    },
                    "src": "3183:162:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Reptation_$3054_storage",
                      "typeString": "struct ZKBadge.Reptation storage ref"
                    }
                  },
                  "id": 3304,
                  "nodeType": "ExpressionStatement",
                  "src": "3183:162:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3307,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3261,
                            "src": "3393:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3306,
                          "name": "convertUint256ToUint64",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3247,
                          "src": "3370:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint64_$",
                            "typeString": "function (uint256) pure returns (uint64)"
                          }
                        },
                        "id": 3308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3370:34:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 3309,
                        "name": "_expireTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3255,
                        "src": "3406:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3310,
                        "name": "_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3253,
                        "src": "3424:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CircuitQuery_$3436_memory_ptr",
                          "typeString": "struct ICircuitValidator.CircuitQuery memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_CircuitQuery_$3436_memory_ptr",
                          "typeString": "struct ICircuitValidator.CircuitQuery memory"
                        }
                      ],
                      "id": 3305,
                      "name": "InitBadge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3415,
                      "src": "3360:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_CircuitQuery_$3436_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct ICircuitValidator.CircuitQuery memory)"
                      }
                    },
                    "id": 3311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:71:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3312,
                  "nodeType": "EmitStatement",
                  "src": "3355:76:12"
                }
              ]
            },
            "functionSelector": "fe1ea8ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initBadge",
            "nameLocation": "2726:9:12",
            "parameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3250,
                  "mutability": "mutable",
                  "name": "_validator",
                  "nameLocation": "2763:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3314,
                  "src": "2745:28:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICircuitValidator_$3481",
                    "typeString": "contract ICircuitValidator"
                  },
                  "typeName": {
                    "id": 3249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3248,
                      "name": "ICircuitValidator",
                      "nameLocations": [
                        "2745:17:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3481,
                      "src": "2745:17:12"
                    },
                    "referencedDeclaration": 3481,
                    "src": "2745:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICircuitValidator_$3481",
                      "typeString": "contract ICircuitValidator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3253,
                  "mutability": "mutable",
                  "name": "_query",
                  "nameLocation": "2821:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3314,
                  "src": "2783:44:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CircuitQuery_$3436_memory_ptr",
                    "typeString": "struct ICircuitValidator.CircuitQuery"
                  },
                  "typeName": {
                    "id": 3252,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3251,
                      "name": "ICircuitValidator.CircuitQuery",
                      "nameLocations": [
                        "2783:17:12",
                        "2801:12:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3436,
                      "src": "2783:30:12"
                    },
                    "referencedDeclaration": 3436,
                    "src": "2783:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CircuitQuery_$3436_storage_ptr",
                      "typeString": "struct ICircuitValidator.CircuitQuery"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3255,
                  "mutability": "mutable",
                  "name": "_expireTimestamp",
                  "nameLocation": "2845:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3314,
                  "src": "2837:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3257,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "2885:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3314,
                  "src": "2871:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3256,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2735:165:12"
            },
            "returnParameters": {
              "id": 3259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2908:0:12"
            },
            "scope": 3422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3346,
            "nodeType": "FunctionDefinition",
            "src": "3444:342:12",
            "nodes": [],
            "body": {
              "id": 3345,
              "nodeType": "Block",
              "src": "3599:187:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3327,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "3617:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3345,
                      "src": "3609:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3326,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3609:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3336,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3330,
                          "name": "inputs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3319,
                          "src": "3653:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 3334,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3331,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3322,
                              "src": "3660:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICircuitValidator_$3481",
                                "typeString": "contract ICircuitValidator"
                              }
                            },
                            "id": 3332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3670:22:12",
                            "memberName": "getChallengeInputIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3474,
                            "src": "3660:32:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure external returns (uint256)"
                            }
                          },
                          "id": 3333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3660:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3653:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3328,
                        "name": "GenesisUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4287,
                        "src": "3624:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GenesisUtils_$4287_$",
                          "typeString": "type(library GenesisUtils)"
                        }
                      },
                      "id": 3329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3637:15:12",
                      "memberName": "int256ToAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4286,
                      "src": "3624:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 3335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3624:72:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3609:87:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3338,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1943,
                            "src": "3714:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3714:12:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3340,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3327,
                          "src": "3730:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3714:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6164647265737320696e2070726f6f66206973206e6f7420612073656e6465722061646472657373",
                        "id": 3342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3736:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_253cb6ac95c90afe726d0e84299219411a6fb56302f5b7684abd252802ccad60",
                          "typeString": "literal_string \"address in proof is not a sender address\""
                        },
                        "value": "address in proof is not a sender address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_253cb6ac95c90afe726d0e84299219411a6fb56302f5b7684abd252802ccad60",
                          "typeString": "literal_string \"address in proof is not a sender address\""
                        }
                      ],
                      "id": 3337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3706:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3706:73:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3344,
                  "nodeType": "ExpressionStatement",
                  "src": "3706:73:12"
                }
              ]
            },
            "baseFunctions": [
              4549
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeProofSubmit",
            "nameLocation": "3453:18:12",
            "overrides": {
              "id": 3324,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3586:8:12"
            },
            "parameters": {
              "id": 3323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3316,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3346,
                  "src": "3472:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3315,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3472:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3319,
                  "mutability": "mutable",
                  "name": "inputs",
                  "nameLocation": "3511:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3346,
                  "src": "3494:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3317,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3494:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3318,
                    "nodeType": "ArrayTypeName",
                    "src": "3494:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3322,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "3537:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3346,
                  "src": "3519:27:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICircuitValidator_$3481",
                    "typeString": "contract ICircuitValidator"
                  },
                  "typeName": {
                    "id": 3321,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3320,
                      "name": "ICircuitValidator",
                      "nameLocations": [
                        "3519:17:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3481,
                      "src": "3519:17:12"
                    },
                    "referencedDeclaration": 3481,
                    "src": "3519:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICircuitValidator_$3481",
                      "typeString": "contract ICircuitValidator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3471:76:12"
            },
            "returnParameters": {
              "id": 3325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3599:0:12"
            },
            "scope": 3422,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3406,
            "nodeType": "FunctionDefinition",
            "src": "3792:522:12",
            "nodes": [],
            "body": {
              "id": 3405,
              "nodeType": "Block",
              "src": "3929:385:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3359,
                      "mutability": "mutable",
                      "name": "prover",
                      "nameLocation": "3947:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3405,
                      "src": "3939:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3358,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3939:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3362,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3360,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1943,
                      "src": "3956:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 3361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3956:12:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3939:29:12"
                },
                {
                  "assignments": [
                    3364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3364,
                      "mutability": "mutable",
                      "name": "tokenId_",
                      "nameLocation": "3983:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3405,
                      "src": "3978:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3363,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3978:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3369,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3367,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3348,
                        "src": "4002:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 3366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3994:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 3365,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3994:7:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3994:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3978:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3371,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3364,
                          "src": "4030:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 3372,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3062,
                          "src": "4042:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4030:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686520676976656e207265717565737420696420646f6573206e6f74206578697374",
                        "id": 3374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4052:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1084e6d571f34eceb1353d6bb67b74e3c73d120113d10b3729803da2e225e23",
                          "typeString": "literal_string \"the given request id does not exist\""
                        },
                        "value": "the given request id does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1084e6d571f34eceb1353d6bb67b74e3c73d120113d10b3729803da2e225e23",
                          "typeString": "literal_string \"the given request id does not exist\""
                        }
                      ],
                      "id": 3370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4022:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:68:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3376,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:68:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4108:26:12",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3378,
                              "name": "proofs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4302,
                              "src": "4109:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint64 => bool))"
                              }
                            },
                            "id": 3380,
                            "indexExpression": {
                              "id": 3379,
                              "name": "prover",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3359,
                              "src": "4116:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4109:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
                              "typeString": "mapping(uint64 => bool)"
                            }
                          },
                          "id": 3382,
                          "indexExpression": {
                            "id": 3381,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3348,
                            "src": "4124:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4109:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f6f662063616e206e6f74206265207375626d6974746564206d6f7265207468616e206f6e6365",
                        "id": 3384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4136:43:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c5636987605ef00ebb2eac665411909dea2229752722af9de06c52a928a2cfa",
                          "typeString": "literal_string \"proof can not be submitted more than once\""
                        },
                        "value": "proof can not be submitted more than once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c5636987605ef00ebb2eac665411909dea2229752722af9de06c52a928a2cfa",
                          "typeString": "literal_string \"proof can not be submitted more than once\""
                        }
                      ],
                      "id": 3377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4100:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4100:80:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3386,
                  "nodeType": "ExpressionStatement",
                  "src": "4100:80:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3388,
                        "name": "prover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3359,
                        "src": "4196:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3389,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3364,
                        "src": "4204:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4214:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4217:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 3387,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "4190:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 3392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4190:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3393,
                  "nodeType": "ExpressionStatement",
                  "src": "4190:30:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3395,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3364,
                        "src": "4245:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3396,
                        "name": "prover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3359,
                        "src": "4255:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3394,
                      "name": "MintBadge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "4235:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4235:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3398,
                  "nodeType": "EmitStatement",
                  "src": "4230:32:12"
                },
                {
                  "condition": {
                    "id": 3399,
                    "name": "isLocked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3060,
                    "src": "4276:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3404,
                  "nodeType": "IfStatement",
                  "src": "4272:35:12",
                  "trueBody": {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 3401,
                          "name": "tokenId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3364,
                          "src": "4298:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3400,
                        "name": "Locked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3488,
                        "src": "4291:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 3402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4291:16:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3403,
                    "nodeType": "EmitStatement",
                    "src": "4286:21:12"
                  }
                }
              ]
            },
            "baseFunctions": [
              4562
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterProofSubmit",
            "nameLocation": "3801:17:12",
            "overrides": {
              "id": 3356,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3916:8:12"
            },
            "parameters": {
              "id": 3355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3348,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3826:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3406,
                  "src": "3819:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3347,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3351,
                  "mutability": "mutable",
                  "name": "inputs",
                  "nameLocation": "3854:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3406,
                  "src": "3837:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3349,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3837:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3350,
                    "nodeType": "ArrayTypeName",
                    "src": "3837:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3354,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "3880:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3406,
                  "src": "3862:27:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICircuitValidator_$3481",
                    "typeString": "contract ICircuitValidator"
                  },
                  "typeName": {
                    "id": 3353,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3352,
                      "name": "ICircuitValidator",
                      "nameLocations": [
                        "3862:17:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3481,
                      "src": "3862:17:12"
                    },
                    "referencedDeclaration": 3481,
                    "src": "3862:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICircuitValidator_$3481",
                      "typeString": "contract ICircuitValidator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3818:72:12"
            },
            "returnParameters": {
              "id": 3357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3929:0:12"
            },
            "scope": 3422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3415,
            "nodeType": "EventDefinition",
            "src": "4360:107:12",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "107a25ab6a1875140ef0e9fa07a7eedd55dd4a14047da808ad938cf2d12b22d1",
            "name": "InitBadge",
            "nameLocation": "4366:9:12",
            "parameters": {
              "id": 3414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3408,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4392:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3415,
                  "src": "4376:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4376:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3410,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_expireTimestamp",
                  "nameLocation": "4410:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3415,
                  "src": "4402:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3413,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_query",
                  "nameLocation": "4459:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3415,
                  "src": "4428:37:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CircuitQuery_$3436_memory_ptr",
                    "typeString": "struct ICircuitValidator.CircuitQuery"
                  },
                  "typeName": {
                    "id": 3412,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3411,
                      "name": "ICircuitValidator.CircuitQuery",
                      "nameLocations": [
                        "4428:17:12",
                        "4446:12:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3436,
                      "src": "4428:30:12"
                    },
                    "referencedDeclaration": 3436,
                    "src": "4428:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CircuitQuery_$3436_storage_ptr",
                      "typeString": "struct ICircuitValidator.CircuitQuery"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4375:91:12"
            }
          },
          {
            "id": 3421,
            "nodeType": "EventDefinition",
            "src": "4473:63:12",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "3bd96af6938a26c69f7495d25501517707ff4dbdeed3f615989247d2176aa2b6",
            "name": "MintBadge",
            "nameLocation": "4479:9:12",
            "parameters": {
              "id": 3420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3417,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4505:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3421,
                  "src": "4489:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4489:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3419,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4531:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3421,
                  "src": "4515:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4515:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4488:47:12"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3039,
              "name": "ERC1155URIStorage",
              "nameLocations": [
                "501:17:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1586,
              "src": "501:17:12"
            },
            "id": 3040,
            "nodeType": "InheritanceSpecifier",
            "src": "501:17:12"
          },
          {
            "baseName": {
              "id": 3041,
              "name": "IERC5192",
              "nameLocations": [
                "520:8:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3502,
              "src": "520:8:12"
            },
            "id": 3042,
            "nodeType": "InheritanceSpecifier",
            "src": "520:8:12"
          },
          {
            "baseName": {
              "id": 3043,
              "name": "ZKPVerifier",
              "nameLocations": [
                "530:11:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4563,
              "src": "530:11:12"
            },
            "id": 3044,
            "nodeType": "InheritanceSpecifier",
            "src": "530:11:12"
          }
        ],
        "canonicalName": "ZKBadge",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3422,
          4563,
          112,
          3502,
          1586,
          1335,
          1601,
          1457,
          2152,
          2164,
          1953,
          3554
        ],
        "name": "ZKBadge",
        "nameLocation": "490:7:12",
        "scope": 3423,
        "usedErrors": [
          3076,
          3078
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 12
}